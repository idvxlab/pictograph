import * as d3 from 'd3';
import { getCategories, getAggregatedRows, getWidth } from './helper';
import _ from 'lodash';
import { selectAll } from 'd3-selection';
import { read } from 'fs';
import { range } from 'd3/node_modules/d3-array';
//import { type } from 'os';

const config = {
    "legend-text-color": "#666"
}

 //默认卡片背景
 let cardcolor;
 let textcolor=props.textcolor;
 const style = props.spec.style;
 let textfont=props.textfont;


const draw = (props) => {
    let a = document.createElement("div"); 
 
    if (!props.onCanvas) {
        d3.select('.'+props.chartId+'>*').remove();
        a = '.'+props.chartId;
    }


    // const width = props.width - margin.left - margin.right+150 ;
    // const height = props.height - margin.top - margin.bottom - 80;

    let margin = { top: 100, right: 100, bottom:100, left:100 };
    const width = 500/4*props.size.w;
    const height = 500/4*props.size.h;

    let sscale;
    if(props.chartId.indexOf("sugess")>0){
        sscale=0.25;
        margin = { top: width/20, right: width/12, bottom: width/15, left: width/25};
    }else{
        sscale=1;
        margin = { top: 100, right: 100, bottom:100, left:100 };
    }

    let svg = d3.select(a)
                .append("center")
                .append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .style('background-color',cardcolor)
                .append("g")
                .attr("transform", "translate(" +0 + "," + 0 + ")"+"scale("+sscale+")");
                // .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
                // .attr("viewBox", "0 0 100 100");
  



   //Pictogram TYPE
   let pictorialtype=[
    {
        name:"circle",
       //picpath:"M92,48c0,24.3-19.7,44-44,44S4,72.3,4,48S23.7,4,48,4S92,23.7,92,48z"
      // picpath:" M 149.09 55.75 C 156.90 53.75 165.51 52.87 173.19 55.82 C 177.85 57.51 181.41 61.37 183.37 65.85 C 161.07 74.52 138.60 82.75 116.19 91.12 C 109.40 108.15 103.05 125.36 96.40 142.45 C 91.55 143.49 86.78 144.86 81.97 146.04 C 85.66 130.43 90.00 114.98 93.83 99.41 C 74.08 106.89 54.15 113.90 34.47 121.55 C 28.35 105.73 22.67 89.74 16.56 73.91 C 20.90 72.57 25.82 72.58 29.83 74.92 C 35.80 77.96 39.16 84.03 42.13 89.75 L 41.10 89.91 C 42.48 90.14 43.86 90.37 45.19 90.81 C 44.39 90.71 42.78 90.52 41.98 90.43 C 42.44 91.53 43.36 93.75 43.82 94.85 C 79.01 82.12 113.92 68.54 149.09 55.75 Z  M 64.04 60.56 C 66.78 59.24 69.50 57.88 72.20 56.48 C 84.75 60.10 97.21 64.04 109.75 67.71 C 102.90 69.95 96.36 73.10 89.54 75.38 C 80.95 70.62 72.48 65.59 64.04 60.56 Z"
     //picpath:" M 97.49 39.44 C 99.16 39.36 100.83 39.37 102.51 39.43 C 102.44 48.40 102.59 57.36 102.43 66.32 C 103.40 67.44 105.37 66.73 106.60 67.57 C 118.22 72.07 124.78 84.74 125.53 96.66 C 147.33 99.15 169.26 100.75 191.10 103.00 C 194.97 103.62 199.88 105.72 200.00 110.27 L 200.00 110.87 C 199.17 114.40 195.20 115.61 192.03 115.97 C 184.45 116.38 176.82 115.83 169.23 116.20 C 169.12 124.36 169.21 132.53 169.18 140.69 C 170.39 141.64 171.45 142.73 172.21 144.08 C 172.11 148.38 172.62 152.74 172.02 157.00 C 170.95 161.69 163.00 161.75 162.03 156.96 C 161.56 152.70 161.83 148.33 161.89 144.05 C 162.77 142.60 163.88 140.09 165.84 141.64 C 165.59 141.49 165.07 141.19 164.82 141.03 C 164.92 132.74 164.82 124.44 164.88 116.14 C 150.97 116.15 137.04 115.97 123.13 116.23 C 119.97 125.44 112.37 134.31 102.16 135.36 C 102.15 137.15 102.21 138.95 102.12 140.75 C 104.33 141.98 105.74 144.44 105.21 146.99 C 104.85 150.82 106.12 154.94 104.33 158.53 C 101.72 162.18 95.00 160.68 94.77 155.99 C 94.70 152.30 94.81 148.60 94.74 144.91 C 94.93 143.01 96.41 141.74 97.88 140.75 C 97.78 138.95 97.82 137.16 97.85 135.37 C 87.62 134.31 80.01 125.45 76.86 116.23 C 62.95 115.97 49.02 116.17 35.10 116.11 C 35.19 123.83 35.04 131.57 35.17 139.27 C 36.49 140.67 34.10 140.85 34.42 141.78 L 36.26 141.13 C 39.73 144.96 37.56 150.33 38.29 154.95 C 38.60 158.67 34.63 161.71 31.17 160.23 C 28.74 159.79 27.66 157.22 27.69 154.99 C 27.76 151.34 27.66 147.69 27.81 144.05 C 28.28 141.93 31.62 141.42 30.82 138.97 C 30.73 131.37 30.94 123.76 30.74 116.17 C 23.14 115.87 15.51 116.37 7.91 115.95 C 4.74 115.60 0.65 114.33 0.00 110.70 L 0.00 109.25 C 1.00 105.34 5.26 103.55 8.91 103.00 C 30.75 100.72 52.71 99.21 74.48 96.62 C 75.13 83.35 83.71 68.84 97.61 66.43 C 97.34 57.44 97.57 48.44 97.49 39.44 M 88.76 78.42 C 88.73 80.67 88.80 82.93 88.71 85.18 C 90.56 85.87 92.66 85.08 94.59 85.54 C 95.53 83.41 95.21 80.45 94.80 78.25 C 92.81 78.21 90.70 77.92 88.76 78.42 M 97.08 78.25 C 96.39 80.37 97.08 82.91 96.81 85.19 C 98.79 85.59 101.19 85.66 103.16 85.15 C 102.95 82.89 103.59 80.34 102.91 78.25 C 100.97 78.13 99.02 78.13 97.08 78.25 M 105.20 78.24 C 104.78 80.44 104.48 83.41 105.38 85.56 C 107.32 85.11 109.37 85.79 111.27 85.24 C 111.18 82.96 111.31 80.68 111.20 78.41 C 109.27 77.90 107.18 78.23 105.20 78.24 Z"
   //简单线框
    // picpath:" M 73.77 11.69 C 87.98 6.82 103.57 6.28 118.19 9.50 C 125.11 11.15 132.08 13.74 137.51 18.47 C 142.17 22.55 145.09 28.87 144.17 35.11 C 142.92 40.15 135.14 40.86 132.64 36.54 C 131.63 34.02 132.12 30.96 130.29 28.77 C 127.91 25.68 124.24 23.85 120.63 22.58 C 107.63 18.48 93.34 18.24 80.25 22.06 C 75.14 23.88 68.32 26.59 68.06 32.94 C 67.99 34.58 67.18 35.99 66.33 37.33 C 63.53 39.17 59.60 39.36 56.98 37.10 C 54.84 34.69 55.67 31.11 56.23 28.25 C 58.34 19.88 66.09 14.52 73.77 11.69 Z M 96.13 30.14 C 104.91 29.55 114.41 30.80 121.61 36.25 C 126.45 39.76 129.62 45.98 128.49 51.98 C 127.30 56.83 119.92 57.76 117.30 53.69 C 115.77 51.72 116.90 48.72 114.96 46.99 C 111.16 42.92 105.18 42.55 99.96 42.49 C 94.95 42.59 89.44 43.17 85.39 46.40 C 83.16 48.16 84.24 51.41 82.76 53.58 C 80.21 57.77 72.71 56.89 71.50 52.01 C 70.64 47.71 72.14 43.15 74.76 39.72 C 79.97 33.48 88.23 30.68 96.13 30.14 Z M 87.50 61.83 C 102.27 58.87 118.11 61.31 131.22 68.76 C 146.27 77.07 157.91 91.49 162.52 108.09 C 166.92 123.30 165.31 140.11 158.22 154.25 C 151.22 168.61 138.64 180.01 123.90 186.02 C 112.31 190.59 99.39 191.89 87.17 189.30 C 67.00 185.30 49.20 171.03 40.81 152.26 C 34.16 137.84 33.18 120.93 38.13 105.84 C 45.15 83.75 64.71 66.21 87.50 61.83 M 92.58 73.73 C 76.79 75.84 62.52 85.81 54.60 99.55 C 47.60 111.18 45.83 125.64 49.20 138.74 C 52.43 151.00 60.22 162.00 70.78 169.03 C 83.18 177.63 99.50 180.34 114.00 176.13 C 127.19 172.42 138.83 163.38 145.55 151.42 C 151.82 140.57 153.92 127.41 151.40 115.14 C 148.68 101.98 140.64 90.00 129.54 82.45 C 118.96 74.95 105.38 71.82 92.58 73.73 Z M 70.23 93.41 C 71.78 89.36 78.18 88.61 80.77 92.04 C 85.10 97.41 89.49 102.73 93.74 108.16 C 93.78 103.78 93.60 99.41 93.85 95.04 C 94.10 91.92 96.98 89.57 100.01 89.36 C 103.75 89.76 107.27 93.01 106.91 96.96 C 106.62 107.19 106.44 117.41 106.18 127.63 C 104.01 131.53 98.50 133.44 95.06 130.02 C 87.24 120.42 79.70 110.58 71.95 100.92 C 70.17 98.93 69.38 95.98 70.23 93.41 Z"
   // picpath:" M 101.17 0.00 L 114.49 0.00 C 114.48 5.03 114.58 10.06 114.51 15.09 C 114.59 17.74 113.24 20.67 110.68 21.72 C 106.96 23.69 101.37 21.03 101.33 16.58 C 100.92 11.07 101.28 5.53 101.17 0.00 Z M 29.47 14.50 C 31.90 12.53 35.47 13.40 37.48 15.56 C 42.92 20.77 48.10 26.24 53.51 31.49 C 55.19 33.21 57.11 34.86 58.03 37.15 C 59.90 42.81 52.30 48.51 47.64 44.33 C 41.08 38.25 34.93 31.74 28.56 25.47 C 25.11 22.68 25.52 16.64 29.47 14.50 Z M 181.09 13.62 C 185.62 12.26 190.42 17.03 189.38 21.55 C 188.91 23.96 186.97 25.64 185.36 27.34 C 179.75 32.71 174.48 38.43 168.81 43.73 C 166.34 46.33 161.78 46.49 159.44 43.62 C 156.90 41.55 156.43 37.20 158.96 34.96 C 164.17 29.18 169.95 23.96 175.35 18.36 C 177.11 16.61 178.85 14.76 181.09 13.62 Z M 64.56 64.56 C 74.26 50.70 91.03 41.92 108.00 42.37 C 120.14 42.16 132.27 46.60 141.55 54.41 C 154.04 64.60 161.50 80.82 160.77 96.95 C 160.74 109.57 160.81 122.19 160.73 134.81 C 163.98 134.92 167.33 134.65 170.46 135.67 C 173.45 137.19 174.34 140.84 174.30 143.94 C 174.29 152.01 174.21 160.08 174.33 168.15 C 184.54 168.57 194.77 168.23 204.99 168.33 C 209.68 168.50 214.67 167.55 219.00 169.83 L 219.00 179.27 C 216.98 180.73 214.58 181.60 212.07 181.39 C 141.38 181.34 70.69 181.48 0.00 181.32 L 0.00 168.42 C 13.80 168.25 27.61 168.37 41.42 168.35 C 41.53 159.55 41.40 150.75 41.46 141.96 C 41.38 139.56 42.88 137.29 44.75 135.90 C 47.90 134.55 51.44 134.97 54.78 134.76 C 54.74 121.85 54.81 108.93 54.75 96.01 C 54.77 84.88 57.89 73.57 64.56 64.56 M 94.90 57.62 C 79.37 62.80 67.68 78.49 68.28 95.01 C 68.40 108.32 68.08 121.64 68.43 134.94 C 94.77 134.82 121.10 134.89 147.44 134.91 C 147.50 121.28 147.55 107.65 147.42 94.02 C 147.29 80.33 139.18 67.17 127.21 60.62 C 117.59 54.90 105.43 54.07 94.90 57.62 M 54.75 148.45 C 55.20 155.10 53.94 161.93 55.43 168.45 C 90.49 168.22 125.55 168.34 160.60 168.39 C 160.96 161.81 160.53 155.22 160.87 148.65 C 156.94 148.13 152.96 148.49 149.01 148.40 C 117.59 148.43 86.17 148.33 54.75 148.45 Z M 104.32 66.29 C 107.53 64.69 111.33 65.41 114.69 66.12 C 128.38 69.34 139.28 83.20 137.25 97.47 C 136.08 101.44 131.18 102.53 127.66 101.25 C 125.86 99.65 124.24 97.61 124.49 95.05 C 124.40 87.75 119.05 80.95 111.94 79.22 C 109.10 78.08 105.35 79.43 103.13 76.89 C 100.23 74.02 100.56 68.23 104.32 66.29 Z M 0.00 88.63 C 9.90 88.69 19.82 88.46 29.72 88.72 C 36.08 89.60 36.67 100.56 30.02 101.50 C 20.03 101.99 10.00 101.61 0.00 101.65 L 0.00 88.63 Z  M 182.42 99.67 C 178.89 96.18 181.16 89.00 186.27 88.71 C 194.86 88.46 203.47 88.70 212.06 88.60 C 214.52 88.41 216.81 89.35 219.00 90.34 L 219.00 100.06 C 217.17 101.04 215.18 101.81 213.07 101.71 C 205.36 101.74 197.66 101.68 189.95 101.75 C 187.36 101.63 184.22 101.97 182.42 99.67 Z "
    //picpath:" M 82.56 39.83 C 79.26 29.16 89.18 17.88 100.00 18.28 C 110.81 17.86 120.70 29.18 117.41 39.80 C 135.07 46.21 147.78 63.93 148.50 82.68 C 148.72 92.76 148.54 102.84 148.57 112.93 C 148.44 114.45 149.26 115.80 150.00 117.06 C 156.29 127.77 162.53 138.50 168.76 149.23 C 171.37 152.85 168.41 158.43 163.98 158.36 C 151.61 158.58 139.23 158.31 126.86 158.49 C 125.57 166.63 120.59 174.26 113.28 178.20 C 105.87 182.43 96.42 182.86 88.70 179.20 C 80.41 175.58 74.44 167.38 73.15 158.48 C 60.73 158.31 48.30 158.60 35.88 158.35 C 31.48 158.33 28.65 152.77 31.22 149.20 C 37.73 138.02 44.25 126.84 50.74 115.65 C 51.87 113.96 51.31 111.87 51.41 109.99 C 51.43 100.93 51.29 91.87 51.50 82.81 C 52.10 64.03 64.87 46.23 82.56 39.83 M 93.65 36.78 C 97.87 36.39 102.11 36.40 106.33 36.77 C 106.09 33.79 104.19 30.67 100.98 30.35 C 97.06 29.53 93.78 33.03 93.65 36.78 M 70.46 63.62 C 65.66 69.97 63.31 78.00 63.40 85.92 C 63.42 95.29 63.39 104.65 63.43 114.02 C 63.44 116.12 63.21 118.29 62.09 120.12 C 57.04 128.92 51.72 137.57 46.79 146.45 C 82.27 146.43 117.75 146.40 153.23 146.46 C 148.15 137.69 143.06 128.92 137.92 120.18 C 136.03 117.13 136.64 113.40 136.57 110.00 C 136.55 101.39 136.63 92.78 136.54 84.16 C 136.33 72.94 130.55 62.03 121.47 55.47 C 114.51 50.32 105.63 47.91 97.02 48.60 C 86.56 49.43 76.46 54.95 70.46 63.62 M 85.22 158.61 C 87.16 164.24 91.99 168.99 98.10 169.55 C 105.46 170.71 112.56 165.55 114.73 158.62 C 104.91 158.30 95.04 158.32 85.22 158.61 Z" 
   //picpath:" M 82.33 23.57 C 82.33 19.61 82.34 15.65 82.40 11.70 C 94.11 11.78 105.83 11.88 117.54 11.64 C 117.69 15.61 117.66 19.59 117.66 23.56 C 113.71 23.49 109.77 23.48 105.83 23.57 C 105.91 27.56 105.90 31.55 105.87 35.54 C 112.01 35.86 118.00 37.30 123.96 38.69 C 126.40 37.07 127.95 34.09 130.48 32.40 C 142.05 22.66 160.46 23.36 171.53 33.51 C 178.46 39.58 182.53 48.76 182.31 57.97 C 182.33 66.15 178.77 74.12 173.10 79.95 C 181.31 95.62 184.20 113.98 181.15 131.41 C 178.80 145.73 172.38 159.28 163.08 170.39 C 168.16 177.08 173.11 183.87 178.27 190.50 C 175.12 192.96 171.92 195.35 168.65 197.63 C 164.22 191.27 159.35 185.24 154.83 178.95 C 140.74 191.57 122.34 199.07 103.45 200.00 L 96.44 200.00 C 77.60 199.04 59.19 191.60 45.19 178.93 C 40.59 185.21 35.80 191.34 31.26 197.65 C 28.05 195.30 24.85 192.96 21.72 190.51 C 26.82 183.80 31.92 177.10 36.89 170.29 C 15.64 145.89 11.60 108.43 26.87 79.95 C 20.95 73.94 17.41 65.53 17.68 57.05 C 17.71 45.95 24.07 35.16 33.72 29.69 C 41.77 25.14 51.81 24.06 60.52 27.33 C 66.64 29.47 71.79 33.70 75.63 38.86 C 81.69 37.24 87.85 35.95 94.12 35.55 C 94.07 31.55 94.07 27.56 94.15 23.56 C 90.21 23.48 86.27 23.48 82.33 23.57 M 30.58 50.88 C 28.17 57.07 29.69 64.04 33.19 69.49 C 41.26 58.37 52.21 49.74 64.22 43.24 C 61.68 41.17 59.03 39.10 55.83 38.18 C 45.80 34.57 33.69 40.73 30.58 50.88 M 135.78 43.22 C 136.98 44.10 138.25 44.88 139.57 45.57 C 150.28 51.42 159.54 59.74 166.80 69.53 C 169.81 64.62 171.58 58.62 170.00 52.91 C 168.25 44.54 160.61 37.85 152.06 37.29 C 146.03 36.52 140.19 39.27 135.78 43.22 M 89.55 47.80 C 77.68 49.57 66.34 54.49 56.84 61.80 C 42.73 72.77 32.87 89.16 30.22 106.88 C 28.09 120.93 30.18 135.63 36.50 148.38 C 44.78 165.55 60.28 179.17 78.51 184.84 C 92.82 189.50 108.64 189.31 122.86 184.39 C 143.38 177.53 160.12 160.53 166.91 140.01 C 170.97 128.15 171.61 115.20 169.00 102.95 C 164.78 82.52 150.88 64.34 132.27 54.92 C 119.27 48.08 104.06 45.67 89.55 47.80 Z M 94.13 82.35 C 98.04 82.33 101.96 82.33 105.88 82.35 C 105.85 94.07 105.95 105.79 105.83 117.50 C 121.51 117.78 137.21 117.69 152.89 117.56 C 152.98 121.51 152.92 125.46 152.97 129.42 C 133.34 129.40 113.71 129.36 94.09 129.44 C 94.11 113.74 94.07 98.05 94.13 82.35 Z" 
//picpath:" M 40.05 69.29 C 44.43 64.36 51.89 62.56 57.99 65.13 C 64.96 67.80 69.30 75.85 67.64 83.15 C 67.30 85.72 66.06 88.14 63.79 89.51 C 63.14 93.06 58.96 94.49 55.94 95.47 C 50.16 96.95 42.15 95.03 39.82 89.19 C 37.02 87.53 36.38 84.08 36.06 81.10 C 35.58 76.86 37.57 72.91 39.39 69.24 L 40.39 71.48 C 40.39 70.74 40.34 69.99 40.05 69.29 Z M 2.09 70.12 C 6.15 70.20 10.21 70.01 14.26 70.29 C 22.99 81.64 32.12 92.66 40.97 103.92 C 48.32 104.03 55.68 104.03 63.03 103.92 C 71.84 92.65 81.01 81.65 89.73 70.30 C 93.79 70.01 97.86 70.19 101.93 70.14 C 91.06 86.18 79.98 102.08 69.01 118.05 C 67.24 120.22 68.16 123.19 68.05 125.75 C 70.78 128.75 74.74 131.43 78.99 130.00 C 83.69 128.08 86.30 123.26 90.65 120.79 C 97.26 116.93 106.39 117.59 112.09 122.83 C 115.26 125.52 117.84 129.27 122.09 130.32 C 121.29 121.11 124.44 111.58 130.95 104.95 C 136.84 98.68 145.38 95.22 153.93 95.07 C 154.06 103.27 153.88 111.48 154.04 119.68 C 160.69 121.82 163.51 130.48 171.02 130.35 C 175.33 130.23 177.88 126.36 180.79 123.74 C 184.25 120.25 189.07 118.34 193.97 118.25 C 194.02 121.53 193.99 124.81 194.01 128.10 C 188.46 128.44 185.66 133.77 181.51 136.66 C 174.81 141.98 164.46 141.37 158.14 135.72 C 154.71 132.87 152.01 128.10 146.94 128.29 C 141.86 128.15 139.16 133.02 135.63 135.81 C 129.20 141.66 118.49 141.87 111.83 136.28 C 108.00 133.48 105.37 128.11 99.97 128.32 C 95.52 128.04 92.84 131.98 89.95 134.66 C 84.86 139.97 76.62 141.80 69.77 139.13 C 65.25 137.46 62.15 133.62 58.69 130.47 C 56.01 127.87 51.59 127.66 48.44 129.54 C 45.20 131.86 42.93 135.33 39.49 137.41 C 33.41 141.43 24.82 141.35 18.93 137.01 C 14.55 134.12 11.73 128.50 5.99 128.10 C 6.01 124.81 5.97 121.52 6.05 118.24 C 10.66 118.42 15.27 120.02 18.64 123.25 C 21.53 125.79 23.90 129.42 27.90 130.25 C 30.82 130.86 33.52 129.37 35.94 127.96 C 35.87 125.07 36.35 122.09 35.69 119.27 C 24.68 102.76 13.09 86.63 2.09 70.12 Z"
//complex
//picpath:" M 158.65 34.15 C 169.53 33.20 181.01 34.08 190.74 39.44 C 200.51 44.64 208.06 54.21 210.02 65.19 C 212.59 83.19 198.66 100.54 181.65 105.06 C 174.28 107.01 166.61 107.58 159.00 107.53 C 159.84 113.75 160.69 119.97 161.41 126.21 C 165.81 122.47 172.02 119.92 177.72 121.88 C 182.53 125.44 183.65 131.88 184.99 137.35 C 186.09 144.83 186.48 152.39 186.78 159.94 C 188.35 169.66 188.70 180.22 183.97 189.17 C 180.88 195.35 175.11 200.57 168.04 201.34 C 163.46 201.51 159.49 198.85 155.93 196.27 C 149.75 209.87 135.78 218.29 121.50 221.00 C 105.17 224.35 87.77 225.27 71.70 220.06 C 58.51 216.17 47.33 206.44 41.29 194.12 C 39.07 197.84 37.07 201.99 33.26 204.37 C 27.18 206.55 20.91 201.93 18.77 196.36 C 16.15 188.85 16.77 180.75 17.34 172.95 C 18.18 160.24 14.93 147.71 15.49 135.00 C 15.52 131.21 15.86 126.65 19.00 124.09 C 24.19 121.65 29.69 124.79 34.68 126.25 C 34.69 116.38 34.64 106.51 34.65 96.65 C 26.98 95.37 18.83 93.50 13.00 88.00 C 8.32 83.29 8.93 76.10 9.38 70.02 C 10.42 59.48 15.70 48.42 25.61 43.60 C 32.50 40.03 40.48 40.06 48.05 40.27 C 58.21 40.54 68.18 42.83 78.29 43.60 C 78.29 42.24 78.07 40.84 78.44 39.51 C 79.80 38.00 81.99 37.68 83.92 37.71 C 93.57 37.60 103.24 36.96 112.89 37.56 C 116.71 38.09 120.36 39.41 123.95 40.78 C 134.42 34.66 146.92 34.76 158.65 34.15 M 145.79 41.84 C 138.52 42.87 130.63 43.28 124.56 47.92 C 124.62 49.95 124.65 51.98 124.95 53.99 C 126.72 68.40 126.71 82.99 128.38 97.41 C 145.92 104.20 166.05 104.10 183.58 97.34 C 192.56 93.78 201.22 86.89 203.30 77.00 C 204.46 69.66 203.93 61.62 199.86 55.20 C 193.70 46.07 182.79 41.00 171.98 40.34 C 163.23 40.00 154.45 40.50 145.79 41.84 M 85.94 44.46 C 87.20 52.63 89.66 60.67 89.62 69.00 C 91.29 85.26 90.10 101.67 90.79 117.98 C 92.80 119.46 95.49 119.59 97.79 120.49 C 97.72 122.12 97.63 123.76 97.52 125.39 C 95.54 125.46 93.56 125.45 91.59 125.44 C 93.01 140.46 95.17 155.89 91.52 170.77 C 90.47 174.27 89.04 177.82 86.58 180.57 C 84.97 182.66 82.57 180.18 81.59 178.68 C 82.30 175.92 84.14 173.58 84.83 170.80 C 86.87 163.03 86.16 154.94 86.28 147.00 C 86.39 139.44 85.71 131.90 85.34 124.36 C 81.79 124.31 78.26 124.62 74.78 125.30 C 74.51 123.44 74.33 121.56 74.27 119.68 C 77.63 118.48 81.20 118.16 84.76 118.28 C 84.67 112.54 84.52 106.80 84.52 101.05 C 82.16 101.35 79.82 101.74 77.48 102.13 C 65.27 103.78 53.29 100.17 41.39 98.14 C 41.33 106.23 41.50 114.32 41.72 122.40 C 42.68 128.58 42.40 134.84 42.35 141.07 C 41.17 150.95 41.44 160.94 41.64 170.87 C 42.79 178.66 43.77 187.04 48.24 193.70 C 57.77 200.19 69.99 199.27 80.99 200.14 C 87.65 199.74 94.34 199.63 101.00 200.22 C 115.70 200.34 131.18 202.44 145.11 196.49 C 147.23 195.34 150.09 194.66 151.12 192.24 C 154.49 184.26 154.48 175.46 155.13 166.97 C 155.34 147.16 156.98 127.06 152.48 107.57 C 144.60 107.94 136.72 106.79 129.25 104.25 C 129.38 109.08 129.16 113.97 130.12 118.73 C 134.08 118.71 137.44 115.31 141.46 116.60 C 141.40 118.08 141.77 119.68 141.17 121.10 C 138.33 123.50 134.60 124.29 131.17 125.46 C 131.49 136.42 133.21 147.38 132.05 158.36 C 131.28 165.90 130.97 173.90 127.16 180.66 C 125.37 180.20 123.65 179.50 122.24 178.27 C 126.48 165.06 126.75 150.93 125.73 137.21 C 125.64 133.77 125.54 130.30 124.49 126.99 C 121.95 127.92 119.37 128.97 116.62 128.43 C 116.59 126.89 116.20 125.28 116.71 123.79 C 118.91 122.32 121.41 121.41 123.80 120.31 C 123.32 108.83 121.43 97.46 121.23 85.96 C 119.83 72.25 120.19 58.29 117.45 44.77 C 113.36 43.88 109.23 43.13 105.03 43.30 C 98.67 43.45 92.18 42.99 85.94 44.46 M 26.10 51.22 C 20.18 55.25 17.43 62.31 15.87 69.03 C 15.15 73.05 14.55 77.62 16.60 81.36 C 20.09 86.85 26.78 88.74 32.78 90.00 C 46.77 92.48 60.61 97.28 75.00 96.29 C 78.32 96.13 81.48 95.02 84.39 93.47 C 84.59 81.39 84.15 69.26 82.22 57.34 C 81.58 54.85 81.66 52.07 80.15 49.90 C 68.74 49.42 57.43 47.40 45.99 47.36 C 39.24 47.26 31.88 47.19 26.10 51.22 M 161.64 133.51 C 161.51 151.36 161.94 169.34 159.28 187.04 C 158.16 192.24 164.56 197.86 169.27 194.44 C 176.40 190.37 181.65 182.40 181.69 174.07 C 182.11 164.94 179.14 156.07 179.39 146.93 C 178.56 140.55 179.01 133.40 175.12 127.94 C 169.96 125.97 165.44 130.64 161.64 133.51 M 21.71 132.56 C 20.38 142.49 24.32 152.09 23.91 162.01 C 24.09 172.22 21.96 182.56 24.31 192.66 C 24.72 194.96 26.11 196.89 27.46 198.74 C 28.84 198.48 30.46 198.66 31.50 197.53 C 35.08 194.39 36.69 189.61 37.60 185.08 C 37.34 180.69 35.75 176.46 35.62 172.05 C 35.08 159.27 35.69 146.48 35.40 133.69 C 32.85 132.40 30.34 131.01 27.64 130.06 C 25.39 129.13 22.15 129.82 21.71 132.56 M 55.85 203.76 C 70.11 217.24 91.19 219.05 109.78 216.97 C 121.70 215.75 133.87 212.30 142.94 204.10 C 127.63 208.16 111.67 206.43 96.05 206.11 C 82.63 206.07 69.06 206.58 55.85 203.76 Z" 
//picpath:" M 27.72 37.76 C 28.75 36.75 30.11 35.65 31.52 36.75 C 41.19 41.53 52.20 43.69 62.93 42.12 C 69.65 41.37 75.87 38.61 82.03 35.99 C 82.72 36.79 83.92 37.58 83.36 38.82 C 79.86 47.33 75.78 55.62 72.36 64.17 C 82.58 82.11 92.70 100.44 98.63 120.34 C 97.63 115.61 98.32 110.78 98.20 106.00 C 98.07 96.39 98.22 86.78 98.13 77.17 C 99.52 72.45 104.30 70.02 108.56 68.37 C 118.58 64.65 129.36 63.60 139.96 63.14 C 153.04 62.88 166.37 63.81 178.86 67.97 C 183.11 69.30 186.61 72.09 190.35 74.40 C 190.33 98.91 190.39 123.45 190.35 147.97 C 190.65 152.84 186.02 155.77 182.16 157.54 C 169.84 162.64 156.26 163.63 143.06 163.74 C 132.41 163.51 121.66 162.57 111.44 159.44 C 106.59 157.85 101.37 155.77 98.60 151.21 C 95.35 155.13 90.62 157.41 85.84 158.89 C 75.55 162.01 64.72 162.88 54.01 162.78 C 44.02 162.61 33.93 161.58 24.41 158.44 C 18.80 156.39 12.53 153.21 10.83 146.97 C 8.26 138.46 10.42 129.46 12.66 121.11 C 17.67 104.29 25.65 88.55 34.10 73.22 C 34.94 71.83 35.52 70.16 36.89 69.18 C 36.87 67.87 36.67 66.58 36.48 65.29 C 37.77 66.54 40.13 64.73 38.89 63.17 C 35.16 54.70 31.48 46.21 27.72 37.76 M 33.82 42.15 C 36.80 48.83 39.69 55.55 42.79 62.17 C 51.51 61.84 60.36 62.49 69.01 61.83 C 71.98 55.28 74.87 48.69 77.71 42.08 C 63.80 47.96 47.79 47.75 33.82 42.15 M 42.54 66.31 C 32.84 82.72 23.99 99.74 17.71 117.77 C 15.16 125.85 12.62 134.32 13.70 142.88 C 14.13 146.73 16.40 150.38 19.90 152.14 C 27.83 156.52 37.01 157.80 45.92 158.57 C 58.44 159.45 71.21 158.89 83.38 155.61 C 89.12 153.88 95.97 151.17 97.51 144.65 C 99.34 135.31 96.53 125.91 93.63 117.09 C 87.41 99.34 78.65 82.60 69.12 66.43 C 60.26 66.19 51.40 66.38 42.54 66.31 M 128.55 67.83 C 121.52 68.63 114.46 69.98 107.94 72.81 C 105.64 73.96 102.83 75.20 102.02 77.88 C 103.08 81.47 107.02 82.77 110.11 84.12 C 123.84 89.00 138.66 89.40 153.08 88.91 C 162.93 87.91 173.13 86.99 182.10 82.43 C 183.90 81.34 186.38 80.16 186.31 77.70 C 185.83 75.81 184.04 74.66 182.48 73.70 C 176.12 70.43 169.00 69.07 161.99 68.04 C 150.90 66.71 139.65 66.56 128.55 67.83 M 102.05 84.77 C 102.11 88.22 101.97 91.67 102.08 95.12 C 102.01 96.83 103.31 98.25 104.69 99.08 C 109.64 102.26 115.48 103.62 121.18 104.76 C 136.34 107.38 151.97 107.44 167.14 104.80 C 172.74 103.66 178.50 102.40 183.41 99.32 C 184.52 98.54 185.87 97.66 186.12 96.21 C 186.82 92.40 186.34 88.49 186.50 84.64 C 183.81 86.34 180.97 87.85 177.89 88.73 C 164.38 93.10 150.03 93.47 135.96 92.99 C 124.36 92.22 112.23 90.82 102.05 84.77 M 168.02 108.88 C 151.86 111.81 135.16 111.60 119.02 108.59 C 113.08 107.35 107.09 105.66 101.95 102.32 C 102.14 105.91 101.91 109.50 102.08 113.09 C 102.81 116.67 106.80 117.93 109.72 119.27 C 124.16 124.61 139.84 124.63 155.02 124.01 C 163.91 123.27 172.93 121.95 181.15 118.29 C 183.28 117.22 185.91 115.86 186.25 113.22 C 186.75 109.62 186.38 105.97 186.46 102.35 C 180.93 105.95 174.43 107.64 168.02 108.88 M 101.99 120.04 C 102.93 124.89 99.73 132.02 105.33 134.79 C 110.98 138.12 117.52 139.43 123.90 140.54 C 135.80 142.25 147.94 142.73 159.88 141.14 C 167.66 140.37 175.50 138.77 182.54 135.28 C 184.47 134.31 185.63 132.21 187.67 131.47 C 187.34 131.41 186.67 131.29 186.33 131.23 C 186.56 127.51 186.50 123.77 186.52 120.04 C 181.80 122.93 176.51 124.74 171.12 125.89 C 157.96 128.65 144.37 129.23 130.99 127.95 C 121.00 126.98 110.71 125.31 101.99 120.04 M 102.12 137.59 C 102.11 141.33 101.93 145.09 102.10 148.83 C 102.68 151.87 105.99 153.04 108.45 154.24 C 119.68 158.81 132.02 159.69 144.02 159.86 C 155.72 159.74 167.68 158.92 178.74 154.82 C 181.50 153.53 184.85 152.40 186.31 149.50 C 186.73 145.62 186.29 141.69 186.58 137.79 C 177.03 143.34 165.85 144.83 155.03 145.88 C 143.33 146.25 131.52 146.43 120.00 144.09 C 113.79 142.79 107.38 141.30 102.12 137.59 Z M 54.50 101.14 C 55.68 101.15 56.86 101.19 58.04 101.26 C 58.04 101.90 58.06 103.19 58.07 103.84 C 62.09 104.24 65.96 105.62 69.31 107.90 C 68.11 109.51 66.96 111.16 65.78 112.79 C 63.41 111.34 60.80 110.34 58.11 109.65 C 58.02 113.03 58.06 116.41 58.02 119.78 C 61.71 120.73 65.70 121.84 68.29 124.82 C 71.55 129.07 70.60 135.97 66.23 139.11 C 64.04 141.13 60.97 141.50 58.15 141.86 C 58.07 143.15 57.99 144.44 57.91 145.74 C 56.81 145.70 55.70 145.67 54.60 145.63 C 54.60 144.37 54.60 143.12 54.61 141.86 C 49.70 141.22 45.15 139.08 41.27 136.07 C 42.63 134.48 43.95 132.86 45.32 131.28 C 47.94 133.69 51.17 135.15 54.59 136.03 C 54.66 132.54 54.63 129.05 54.61 125.57 C 50.85 124.45 46.56 123.38 44.18 119.97 C 42.36 116.53 42.35 111.93 44.71 108.73 C 46.89 105.45 50.93 104.13 54.67 103.69 C 54.63 103.06 54.54 101.78 54.50 101.14 M 49.37 113.84 C 49.12 116.95 52.34 117.94 54.59 118.98 C 54.65 115.79 54.64 112.61 54.54 109.42 C 52.25 110.01 49.59 111.10 49.37 113.84 M 58.08 126.35 C 58.05 129.63 58.05 132.91 58.10 136.19 C 60.38 135.64 63.47 134.67 63.56 131.84 C 64.24 128.55 60.57 127.14 58.08 126.35 Z"
//picpath:" M 59.36 3.18 C 86.46 3.07 113.57 2.99 140.67 3.23 C 140.64 7.33 140.66 11.43 140.57 15.53 C 159.34 15.78 178.11 15.48 196.89 15.68 C 196.87 60.44 196.90 105.21 196.87 149.98 C 165.61 150.04 134.35 149.97 103.09 150.01 C 103.15 154.25 103.12 158.48 103.15 162.72 C 110.40 164.23 116.51 170.53 117.09 178.03 C 117.61 181.66 116.36 185.15 115.03 188.45 C 115.29 189.38 115.43 190.33 115.45 191.30 C 115.03 190.56 114.61 189.83 114.20 189.09 C 110.74 194.86 103.44 197.88 96.88 196.60 C 88.72 195.17 82.26 187.35 82.84 179.00 C 82.89 171.09 89.28 164.26 96.86 162.70 C 96.87 158.47 96.86 154.24 96.90 150.00 C 65.64 149.97 34.38 150.05 3.12 149.96 C 3.11 105.20 3.12 60.44 3.12 15.68 C 21.89 15.49 40.66 15.78 59.43 15.53 C 59.35 11.42 59.34 7.30 59.36 3.18 M 65.61 9.48 C 65.62 11.51 65.61 13.54 65.58 15.58 C 88.53 15.63 111.48 15.64 134.43 15.57 C 134.39 13.54 134.38 11.51 134.38 9.47 C 111.46 9.32 88.53 9.31 65.61 9.48 M 9.43 59.40 C 17.74 59.35 26.06 59.32 34.38 59.43 C 34.35 49.00 34.35 38.56 34.39 28.12 C 42.72 28.08 51.05 28.16 59.38 28.10 C 59.44 38.54 59.32 48.98 59.45 59.42 C 86.50 59.32 113.55 59.35 140.61 59.40 C 140.63 48.97 140.58 38.53 140.63 28.10 C 148.96 28.16 157.28 28.08 165.61 28.12 C 165.65 38.55 165.65 48.99 165.62 59.43 C 173.93 59.33 182.25 59.34 190.56 59.40 C 190.61 46.87 190.66 34.34 190.54 21.81 C 130.18 21.94 69.82 21.94 9.45 21.82 C 9.34 34.34 9.40 46.87 9.43 59.40 M 40.58 34.41 C 40.68 38.56 40.63 42.72 40.61 46.88 C 44.79 46.89 48.97 46.88 53.14 46.80 C 53.10 42.71 53.04 38.60 53.21 34.51 C 49.01 34.29 44.79 34.40 40.58 34.41 M 146.81 34.46 C 146.95 38.57 146.92 42.68 146.83 46.79 C 151.02 46.88 155.21 46.90 159.41 46.86 C 159.36 42.72 159.31 38.57 159.43 34.43 C 155.22 34.38 151.01 34.34 146.81 34.46 M 40.60 53.09 C 40.67 59.36 40.57 65.62 40.65 71.88 C 44.80 71.85 48.95 71.86 53.10 71.91 C 53.15 65.67 53.14 59.43 53.09 53.20 C 48.92 53.12 44.76 53.17 40.60 53.09 M 146.84 53.23 C 146.94 59.46 146.81 65.68 146.90 71.91 C 151.05 71.86 155.19 71.84 159.34 71.89 C 159.44 65.62 159.32 59.36 159.40 53.09 C 155.21 53.17 151.03 53.11 146.84 53.23 M 9.38 143.77 C 38.54 143.75 67.70 143.74 96.87 143.77 C 96.91 135.42 96.84 127.07 96.88 118.72 C 102.07 118.79 107.27 118.77 112.47 118.73 C 112.30 120.75 113.09 123.13 112.11 124.92 C 108.97 125.11 105.82 124.95 102.68 125.09 C 103.00 127.17 103.17 129.28 103.32 131.38 C 106.38 131.20 109.44 131.21 112.51 131.29 C 112.50 133.37 112.50 135.44 112.51 137.52 C 109.38 137.49 106.25 137.50 103.13 137.50 C 103.13 139.59 103.13 141.68 103.13 143.77 C 132.29 143.74 161.45 143.74 190.61 143.78 C 190.54 117.70 190.70 91.62 190.54 65.55 C 182.22 65.70 173.90 65.64 165.59 65.61 C 165.68 78.08 165.65 90.55 165.62 103.02 C 165.89 109.72 159.79 115.87 153.08 115.60 C 146.75 115.80 141.00 110.29 140.68 104.02 C 140.50 91.21 140.69 78.40 140.59 65.59 C 113.54 65.67 86.48 65.69 59.43 65.58 C 59.32 78.01 59.45 90.45 59.37 102.89 C 59.61 109.56 53.67 115.80 46.94 115.60 C 40.25 115.87 34.11 109.78 34.38 103.07 C 34.35 90.58 34.32 78.10 34.41 65.61 C 26.09 65.64 17.77 65.70 9.46 65.55 C 9.30 91.62 9.46 117.70 9.38 143.77 M 40.61 78.09 C 40.66 86.37 40.57 94.64 40.64 102.92 C 40.63 105.34 41.86 107.88 44.24 108.74 C 47.79 110.62 52.51 108.09 53.02 104.14 C 53.31 95.48 52.97 86.80 53.17 78.14 C 48.99 78.09 44.80 78.12 40.61 78.09 M 146.84 78.13 C 146.96 86.44 146.80 94.75 146.90 103.05 C 146.90 105.60 148.49 108.29 151.04 108.97 C 154.55 110.36 159.01 107.83 159.28 103.97 C 159.55 95.36 159.25 86.73 159.42 78.11 C 155.22 78.11 151.03 78.09 146.84 78.13 M 89.25 177.84 C 87.54 185.41 95.62 192.76 102.98 190.17 C 106.24 189.84 107.75 186.33 110.66 185.50 C 110.47 185.30 110.09 184.91 109.90 184.71 C 112.15 179.61 110.52 173.15 105.60 170.27 C 99.41 166.29 90.12 170.49 89.25 177.84 Z M 84.41 88.09 C 83.86 79.61 91.38 71.62 99.94 71.89 C 108.83 71.55 116.59 80.11 115.55 88.91 C 115.40 92.77 113.03 95.87 111.04 98.96 C 111.54 103.49 112.50 107.96 112.89 112.51 C 104.28 112.49 95.67 112.49 87.06 112.53 C 87.51 107.99 88.40 103.51 88.93 98.98 C 86.78 95.68 84.31 92.23 84.41 88.09 M 90.73 88.99 C 91.06 92.07 93.45 94.19 95.65 96.09 C 95.21 99.50 94.69 102.90 94.23 106.31 C 98.06 106.19 101.89 106.19 105.72 106.32 C 105.28 102.92 104.79 99.53 104.34 96.14 C 106.18 94.37 108.43 92.66 108.99 90.02 C 110.92 84.38 105.93 77.86 100.00 78.15 C 94.45 77.88 89.66 83.57 90.73 88.99 Z  M 131.24 156.23 C 133.33 156.23 135.42 156.23 137.51 156.23 C 137.68 158.08 136.80 160.26 138.20 161.80 C 139.73 163.19 141.90 162.27 143.74 162.42 C 143.74 164.53 143.76 166.65 143.79 168.77 C 141.69 168.76 139.60 168.75 137.52 168.71 C 137.52 170.81 137.50 172.92 137.51 175.02 C 135.40 175.01 133.30 175.00 131.20 174.98 C 131.24 172.88 131.27 170.79 131.31 168.69 C 133.34 168.72 135.38 168.76 137.41 168.83 C 137.28 166.96 138.26 164.74 136.80 163.20 C 135.28 161.65 133.05 162.73 131.18 162.64 C 131.23 164.68 131.26 166.72 131.30 168.76 C 129.21 168.76 127.12 168.77 125.03 168.79 C 125.01 166.66 125.02 164.53 125.10 162.40 C 127.18 162.47 129.25 162.49 131.32 162.53 C 131.27 160.43 131.26 158.33 131.24 156.23 Z M 62.44 178.18 C 64.55 178.11 66.66 178.10 68.78 178.12 C 68.77 180.18 68.76 182.25 68.74 184.31 C 66.62 184.37 64.51 184.41 62.40 184.47 C 62.46 186.51 62.49 188.55 62.54 190.59 C 60.45 190.61 58.36 190.61 56.28 190.60 C 56.26 188.52 56.26 186.44 56.27 184.37 C 58.35 184.37 60.44 184.38 62.52 184.40 C 62.50 182.32 62.49 180.25 62.44 178.18 Z M 68.71 184.42 C 70.85 184.34 73.00 184.35 75.14 184.45 C 75.04 186.54 74.98 188.64 74.89 190.73 C 72.84 190.66 70.80 190.60 68.75 190.56 C 68.75 188.51 68.73 186.47 68.71 184.42 Z  M 62.59 190.68 C 64.65 190.66 66.70 190.64 68.76 190.63 C 68.76 192.69 68.75 194.75 68.73 196.81 C 66.62 196.86 64.50 196.88 62.39 196.85 C 62.47 194.79 62.52 192.73 62.59 190.68 Z"
//picpath:" M 29.78 8.45 C 76.53 8.54 123.29 8.52 170.04 8.46 C 169.95 22.74 170.04 37.03 169.99 51.32 C 170.76 51.28 172.31 51.22 173.08 51.18 C 173.08 97.97 173.05 144.75 173.10 191.53 C 124.29 191.45 75.48 191.49 26.67 191.51 C 26.73 144.78 26.51 98.04 26.78 51.32 C 27.50 51.27 28.95 51.18 29.67 51.14 C 29.88 36.91 29.66 22.68 29.78 8.45 M 159.85 16.94 C 155.48 21.39 151.05 25.78 146.62 30.16 C 152.09 37.44 157.42 44.84 163.19 51.89 C 164.69 49.51 163.91 46.62 164.08 43.98 C 163.85 34.01 164.53 24.00 163.73 14.05 C 162.32 14.85 160.96 15.76 159.85 16.94 M 35.98 14.21 C 35.84 26.67 35.89 39.13 35.94 51.59 C 38.30 50.82 39.48 48.55 40.90 46.73 C 44.93 41.16 49.10 35.70 53.12 30.12 C 49.72 26.79 46.43 23.33 43.04 19.97 C 40.83 17.89 39.05 15.10 35.98 14.21 M 46.28 14.67 C 50.86 19.41 56.55 23.33 60.05 28.98 C 60.96 36.36 60.14 43.83 60.20 51.24 C 86.65 51.24 113.09 51.25 139.54 51.24 C 139.58 43.83 138.98 36.39 139.73 29.01 C 143.26 23.42 149.00 19.57 153.38 14.65 C 117.68 14.62 81.98 14.58 46.28 14.67 M 45.09 51.21 C 48.15 51.20 51.22 51.22 54.28 51.29 C 54.31 47.20 54.28 43.11 54.25 39.02 C 51.23 43.10 48.15 47.15 45.09 51.21 M 145.66 38.93 C 145.74 43.04 145.71 47.16 145.68 51.27 C 148.75 51.21 151.82 51.18 154.90 51.22 C 151.80 47.14 148.70 43.05 145.66 38.93 M 32.79 57.41 C 32.86 100.06 32.80 142.72 32.82 185.37 C 77.51 185.34 122.21 185.29 166.90 185.40 C 167.01 142.73 166.91 100.07 166.95 57.40 C 122.23 57.34 77.51 57.32 32.79 57.41 Z M 67.90 65.95 C 73.88 61.35 84.31 63.37 86.93 70.82 C 88.04 73.35 88.83 78.20 84.96 78.58 C 81.33 78.72 81.89 74.54 80.83 72.23 C 78.77 69.20 73.89 68.56 71.22 71.14 C 69.05 72.89 70.00 76.23 68.20 78.20 C 66.68 78.83 65.08 78.21 63.60 77.85 C 62.71 73.49 64.09 68.51 67.90 65.95 Z M 112.62 77.29 C 110.74 71.56 115.24 64.99 121.04 63.91 C 127.11 62.22 134.49 65.58 136.01 71.96 C 136.94 74.44 136.82 78.90 133.17 78.54 C 129.92 78.44 130.57 74.55 129.54 72.40 C 127.59 68.88 122.28 68.71 119.64 71.52 C 118.36 73.44 118.20 75.84 117.57 78.01 C 115.89 78.42 113.80 79.03 112.62 77.29 Z M 72.54 75.02 C 72.74 71.59 78.46 71.85 78.51 75.16 C 78.84 86.19 79.96 97.66 85.53 107.43 C 88.57 112.60 93.66 117.52 100.04 117.49 C 106.34 117.46 111.40 112.62 114.39 107.48 C 120.39 97.24 121.10 85.10 121.60 73.55 C 123.51 72.29 127.24 71.93 127.39 75.04 C 127.56 86.94 125.81 99.33 119.96 109.85 C 115.73 117.34 108.13 124.00 99.05 123.52 C 89.72 123.00 82.70 115.44 78.78 107.54 C 73.97 97.47 72.40 86.09 72.54 75.02 Z"

//电池 包
//picpath:" M 35.40 0.00 L 36.60 0.00 C 45.25 3.07 47.21 13.45 48.47 21.44 C 51.16 21.63 53.86 21.81 56.55 21.96 C 57.58 27.96 57.34 34.08 58.14 40.10 C 58.59 49.63 59.67 59.12 59.92 68.67 C 47.28 69.54 34.64 70.51 22.01 71.55 C 17.73 72.44 14.23 68.96 9.95 69.31 C 10.59 53.03 11.92 36.81 12.77 20.55 C 14.17 20.90 15.56 21.24 16.95 21.59 C 18.45 20.83 19.96 20.08 21.47 19.34 C 22.25 13.90 22.96 7.97 26.56 3.57 C 27.94 1.67 30.39 1.63 32.50 1.37 C 33.46 0.90 34.42 0.44 35.40 0.00 M 33.85 2.82 C 37.46 8.08 37.38 14.73 37.89 20.83 C 40.71 21.03 43.54 21.20 46.36 21.34 C 45.44 15.05 44.00 8.27 39.30 3.63 C 37.91 2.09 35.60 1.54 33.85 2.82 M 27.18 6.13 C 24.76 10.34 24.09 15.24 23.37 19.96 C 24.94 20.06 26.52 20.15 28.10 20.23 C 28.29 14.44 29.16 8.66 31.13 3.20 C 29.59 3.80 27.97 4.59 27.18 6.13 M 32.80 4.74 C 30.88 9.72 30.32 15.06 30.14 20.36 C 32.03 20.50 33.91 20.65 35.79 20.79 C 35.52 15.35 35.28 9.71 32.80 4.74 Z"
     //picpath:" M 77.14 11.00 C 80.97 8.29 84.90 11.86 88.42 13.29 C 96.55 16.31 104.80 10.94 113.08 12.34 C 116.59 12.93 120.57 13.03 123.38 15.53 C 125.60 18.54 124.15 22.52 122.10 25.20 C 118.97 29.19 116.74 33.77 114.42 38.25 C 116.58 39.84 118.21 42.19 117.64 45.01 C 117.07 47.89 119.09 50.66 117.79 53.46 C 122.07 56.05 127.14 57.04 131.27 59.94 C 139.76 65.74 146.33 74.18 150.18 83.70 C 149.74 84.93 149.50 86.20 149.65 87.53 C 150.03 86.63 150.42 85.74 150.83 84.86 C 155.57 98.73 157.35 113.41 158.06 127.99 C 158.51 138.01 158.03 148.30 161.00 157.99 C 162.66 163.69 167.45 167.49 170.84 172.11 C 167.96 173.15 164.82 172.74 161.88 173.50 C 153.28 175.43 145.89 180.50 137.86 183.91 C 123.72 189.62 107.92 191.60 92.90 188.56 C 82.68 186.39 73.04 182.24 62.91 179.73 C 55.89 177.92 48.50 176.55 41.29 178.05 C 41.21 178.46 41.06 179.28 40.98 179.68 C 41.00 179.27 41.03 178.45 41.04 178.04 C 37.20 178.63 33.62 181.57 29.74 181.01 C 29.53 177.37 32.72 174.83 33.81 171.54 C 42.57 151.92 40.05 129.97 41.64 109.12 C 43.50 98.41 46.53 87.58 52.76 78.52 C 59.22 68.83 69.34 62.59 77.87 54.95 C 77.33 52.04 76.31 49.07 77.55 46.17 C 76.45 42.98 74.74 38.83 77.54 36.01 C 75.93 33.47 74.50 30.53 71.63 29.17 C 68.84 27.90 66.86 23.85 69.41 21.40 C 71.56 19.85 74.21 19.04 76.86 19.10 C 76.76 16.46 75.57 13.40 77.14 11.00 Z"
     // picpath:" M 70.55 23.23 C 70.78 21.10 73.25 20.22 75.14 20.30 C 91.71 20.33 108.29 20.31 124.86 20.31 C 127.04 20.16 129.82 21.53 129.56 24.05 C 129.77 29.32 129.55 34.60 129.67 39.87 C 142.80 39.88 155.92 39.86 169.05 39.88 C 175.20 39.64 181.51 43.03 184.37 48.53 C 186.57 52.69 185.95 57.49 185.98 62.01 C 185.97 94.68 185.97 127.34 185.98 160.01 C 186.00 163.27 185.98 166.65 184.65 169.69 C 182.29 175.53 176.24 179.66 169.93 179.69 C 123.31 179.68 76.69 179.69 30.08 179.68 C 21.32 179.82 13.71 171.79 14.00 163.09 C 14.03 127.03 14.01 90.97 14.01 54.91 C 14.15 46.68 21.84 39.84 29.93 39.91 C 43.40 39.81 56.88 39.90 70.36 39.87 C 70.54 34.32 70.10 28.76 70.55 23.23 M 78.40 28.36 C 78.39 32.20 78.39 36.03 78.39 39.87 C 92.80 39.87 107.22 39.87 121.64 39.87 C 121.64 36.04 121.64 32.20 121.61 28.36 C 107.21 28.30 92.80 28.30 78.40 28.36 M 49.73 77.28 C 49.72 80.18 49.74 83.07 49.71 85.96 C 42.90 86.27 36.04 85.67 29.25 86.28 C 25.64 87.16 25.62 92.95 29.24 93.78 C 36.04 94.41 42.91 93.83 49.73 94.05 C 49.72 96.40 49.69 98.74 49.68 101.09 C 54.76 101.10 59.83 101.08 64.91 101.16 C 64.99 98.79 65.02 96.42 65.10 94.05 C 88.36 94.02 111.63 94.04 134.90 94.04 C 134.98 96.42 135.03 98.80 135.14 101.18 C 140.17 101.08 145.20 101.08 150.24 101.13 C 150.26 98.77 150.25 96.40 150.26 94.04 C 156.20 94.01 162.13 94.06 168.07 94.05 C 169.94 94.06 172.36 93.83 173.11 91.76 C 174.43 89.42 172.55 86.21 169.89 86.12 C 163.35 85.86 156.80 86.17 150.27 85.97 C 150.25 83.08 150.27 80.18 150.27 77.29 C 145.20 77.23 140.14 77.21 135.07 77.29 C 135.02 80.22 135.02 83.14 134.96 86.07 C 111.65 86.02 88.34 86.00 65.03 86.08 C 64.98 83.15 64.98 80.22 64.94 77.29 C 59.87 77.21 54.80 77.23 49.73 77.28 Z"
    // picpath:"M 34.35 12.46 C 40.79 8.43 49.92 8.47 56.03 13.14 C 58.30 14.80 58.98 17.64 59.49 20.24 C 57.54 20.26 55.59 20.27 53.64 20.28 C 52.56 17.74 50.22 16.01 47.47 15.69 C 43.24 15.03 37.47 15.63 35.74 20.26 C 33.69 20.26 31.64 20.24 29.58 20.19 C 30.53 17.31 31.55 14.08 34.35 12.46 Z M 15.79 24.04 C 34.24 23.93 52.70 24.00 71.16 24.00 C 72.38 23.86 74.33 24.23 74.23 25.85 C 74.34 36.89 74.15 47.95 74.27 59.00 C 74.20 60.82 74.50 62.84 73.37 64.42 C 70.87 68.55 68.67 72.90 65.91 76.88 C 64.33 77.33 62.66 77.25 61.04 77.28 C 48.68 77.25 36.32 77.23 23.96 77.28 C 21.15 73.56 18.99 69.41 16.55 65.44 C 15.51 63.84 14.85 61.99 14.99 60.05 C 15.00 49.35 15.01 38.65 14.98 27.95 C 14.91 26.60 15.39 25.31 15.79 24.04 M 31.02 41.25 C 31.02 42.38 31.03 43.52 31.03 44.65 C 32.46 44.62 33.89 44.59 35.32 44.56 C 35.28 50.36 35.33 56.15 35.29 61.95 C 36.77 61.97 38.26 61.99 39.74 62.01 C 39.78 54.83 39.64 47.65 39.84 40.47 C 36.89 40.60 33.95 40.92 31.02 41.25 M 47.74 42.83 C 46.43 45.53 46.63 49.20 49.76 50.52 C 47.55 51.87 45.47 54.25 46.27 57.04 C 47.80 64.16 61.12 63.74 61.25 55.98 C 61.59 53.53 59.55 51.94 58.00 50.44 C 60.39 48.96 61.52 45.68 59.66 43.31 C 56.68 39.87 51.25 40.62 47.74 42.83 Z M 52.53 44.67 C 54.90 43.28 57.68 46.70 55.28 48.40 C 52.90 50.74 49.40 45.85 52.53 44.67 Z M 50.42 54.34 C 51.62 53.07 53.35 51.61 55.16 52.78 C 58.32 54.03 56.53 59.82 53.05 58.48 C 50.75 58.44 50.87 55.98 50.42 54.34 Z"
     // picpath:" M 41.45 36.55 C 46.11 33.49 51.01 30.67 56.05 28.31 C 60.69 29.83 64.61 32.98 68.94 35.20 C 72.47 36.88 74.25 40.67 77.73 42.41 C 115.64 64.25 153.45 86.26 191.42 108.00 C 191.41 110.52 191.37 113.05 191.25 115.57 C 192.33 114.87 193.42 114.19 194.51 113.51 C 195.44 116.94 195.64 120.53 195.27 124.06 C 191.08 127.53 186.01 129.72 181.35 132.48 C 171.06 138.54 160.69 144.45 150.36 150.43 C 146.45 152.61 142.76 155.22 138.61 156.93 C 136.50 158.12 134.50 156.13 132.62 155.35 C 88.51 129.57 44.04 104.40 0.00 78.51 L 0.00 60.25 C 4.73 57.66 9.32 54.84 14.05 52.26 C 15.55 51.35 17.35 51.41 19.04 51.23 C 14.45 54.63 9.27 57.09 4.52 60.24 C 8.85 63.05 13.38 65.55 17.86 68.12 C 20.71 69.96 23.25 66.38 26.13 66.43 C 28.68 66.44 31.21 66.20 33.64 65.43 C 33.56 63.63 33.48 61.84 33.38 60.04 C 28.47 57.48 23.80 54.48 18.92 51.86 C 26.29 46.51 35.52 43.72 41.45 36.55 M 41.92 38.89 C 47.09 41.54 51.88 44.91 57.12 47.40 C 59.04 46.65 60.71 45.40 62.57 44.52 C 65.22 44.49 67.89 44.81 70.53 44.27 C 70.57 42.34 70.57 40.42 70.58 38.49 C 65.77 35.68 60.98 32.82 56.05 30.22 C 51.24 32.93 46.25 35.43 41.92 38.89 Z M 45.26 39.01 C 48.75 36.67 52.41 34.63 56.02 32.49 C 58.09 33.65 60.15 34.83 62.21 36.01 C 60.02 37.50 57.76 38.88 55.44 40.16 C 55.46 40.94 55.49 42.50 55.51 43.27 C 57.14 43.38 58.77 43.50 60.39 43.69 C 59.56 44.21 57.88 45.27 57.05 45.79 C 53.21 43.38 49.25 41.16 45.26 39.01 Z M 58.82 40.28 C 60.29 39.47 61.79 38.70 63.32 38.01 C 63.40 38.69 63.56 40.04 63.64 40.71 C 62.04 40.58 60.43 40.43 58.82 40.28 Z M 8.04 60.72 C 11.50 58.28 15.16 56.14 18.94 54.24 C 20.92 55.35 22.92 56.44 24.91 57.53 C 22.76 58.97 20.58 60.36 18.40 61.77 C 18.32 62.70 18.23 63.63 18.15 64.56 C 19.84 64.88 21.53 65.22 23.11 65.91 C 21.42 66.28 19.47 67.32 17.83 66.22 C 14.56 64.40 11.37 62.44 8.04 60.72 Z M 21.33 60.83 C 23.36 60.41 25.43 60.27 27.45 60.76 C 25.64 62.87 23.34 62.32 21.33 60.83 Z M 0.00 81.98 C 29.05 98.55 57.89 115.49 86.93 132.10 C 102.70 141.38 118.71 150.25 134.37 159.71 C 134.26 186.15 134.49 212.60 134.32 239.03 C 126.66 235.03 119.20 230.65 111.76 226.24 C 85.95 211.33 60.09 196.49 34.31 181.51 C 22.89 174.85 11.26 168.50 0.00 161.58 L 0.00 81.98 Z M 145.53 156.45 C 161.83 146.98 178.27 137.76 194.44 128.11 C 194.50 149.41 194.35 170.71 194.29 192.01 C 193.61 196.92 193.69 201.87 193.62 206.81 C 193.86 208.24 192.35 208.69 191.42 209.30 C 174.14 219.25 156.90 229.28 139.58 239.15 C 139.50 213.43 139.70 187.70 139.71 161.98 C 139.72 158.79 143.36 157.93 145.53 156.45 Z M 135.79 162.07 C 135.79 160.63 136.57 160.02 138.14 160.24 C 138.55 162.81 138.36 165.42 138.39 168.01 C 138.32 191.01 138.27 214.02 138.26 237.03 C 138.48 238.73 137.42 240.04 135.85 240.56 C 135.74 214.39 135.74 188.23 135.79 162.07 Z"
      picpath:"M 78.53 3.26 C 98.71 -0.57 120.09 0.22 139.46 7.37 C 147.62 10.78 156.51 15.45 160.16 24.01 C 161.80 29.71 162.19 35.78 161.50 41.67 C 161.11 38.45 160.90 35.21 160.99 31.96 C 158.54 41.69 149.06 47.08 140.50 50.76 C 123.30 57.53 104.30 58.76 86.08 56.54 C 72.91 54.66 59.14 51.10 48.95 42.08 C 46.03 39.76 44.52 36.33 42.64 33.23 C 41.89 27.80 43.47 22.15 47.33 18.20 C 55.45 9.53 67.26 5.78 78.53 3.26 M 96.20 15.31 C 88.30 15.91 80.22 17.34 73.19 21.17 C 69.88 23.12 65.99 26.47 67.19 30.78 C 68.34 34.65 72.11 36.92 75.53 38.58 C 86.01 43.07 97.67 43.95 108.93 43.12 C 117.01 42.31 125.40 40.85 132.26 36.24 C 134.87 34.46 137.40 31.51 136.67 28.12 C 135.70 23.98 131.67 21.62 128.10 19.92 C 118.09 15.64 106.97 14.71 96.20 15.31 Z M 42.15 37.32 C 44.10 45.12 49.64 51.58 56.65 55.35 C 68.96 62.11 83.28 63.78 97.10 64.46 C 112.03 64.87 127.35 64.39 141.60 59.47 C 149.87 56.37 158.39 50.82 160.78 41.78 C 160.86 43.52 160.98 45.26 161.02 47.00 C 161.03 87.36 161.00 127.72 161.03 168.07 C 161.47 171.82 158.73 174.74 156.74 177.58 C 146.85 190.36 130.82 196.93 115.07 198.44 C 100.96 199.66 86.55 198.70 72.93 194.69 C 63.43 191.87 54.29 186.97 47.65 179.50 C 45.50 176.59 42.81 173.60 42.34 169.90 C 42.16 125.71 42.54 81.51 42.15 37.32 Z"
      
     // picpath:" M 41.70 30.70 C 48.23 30.52 54.77 30.62 61.30 30.61 C 61.19 34.32 61.20 38.04 61.28 41.75 C 88.38 41.77 115.48 41.84 142.58 41.71 C 142.54 38.01 142.54 34.30 142.54 30.60 C 149.12 30.67 155.70 30.47 162.27 30.71 C 162.13 34.39 162.14 38.08 162.23 41.76 C 174.48 41.81 186.74 41.77 199.00 41.78 L 199.00 51.74 C 195.78 51.74 192.57 51.74 189.35 51.72 C 189.40 94.90 189.16 138.09 189.47 181.27 C 192.65 181.24 195.82 181.24 199.00 181.25 L 199.00 190.73 C 132.67 190.73 66.33 190.73 0.00 190.73 L 0.00 181.25 C 4.83 181.25 9.65 181.25 14.48 181.24 C 14.61 138.07 14.52 94.90 14.52 51.74 C 9.68 51.76 4.84 51.73 0.00 51.74 L 0.00 41.78 C 13.93 41.76 27.86 41.80 41.79 41.76 C 41.75 38.07 41.78 34.38 41.70 30.70 M 46.73 66.45 C 46.89 70.60 46.83 74.75 46.80 78.90 C 42.69 78.80 38.58 78.92 34.47 78.74 C 34.37 81.77 34.38 84.81 34.36 87.85 C 38.74 88.34 43.57 86.85 47.63 88.78 C 45.72 92.15 47.42 96.64 46.72 100.46 C 49.76 100.58 52.79 100.60 55.82 100.59 C 55.78 96.49 55.92 92.38 55.68 88.28 C 59.95 87.41 64.35 88.07 68.67 87.85 C 68.69 84.83 68.69 81.81 68.58 78.79 C 64.43 78.95 60.29 78.77 56.14 78.93 C 55.45 74.77 56.02 70.51 55.85 66.31 C 52.81 66.30 49.77 66.31 46.73 66.45 M 135.22 87.88 C 146.61 87.83 158.01 87.86 169.40 87.88 C 169.38 84.83 169.45 81.78 169.35 78.73 C 157.98 78.97 146.61 78.91 135.24 78.78 C 135.12 81.81 135.14 84.85 135.22 87.88 Z"
    //picpath:" M 88.43 0.00 L 112.00 0.00 C 112.18 0.33 112.53 1.00 112.70 1.34 C 117.52 -0.79 122.84 3.12 124.10 7.82 C 125.69 13.42 124.72 19.33 124.98 25.06 C 132.68 24.94 140.38 25.02 148.08 25.01 C 152.31 24.99 157.04 25.90 159.87 29.33 C 162.04 32.39 162.46 36.31 162.52 39.96 C 162.52 88.34 162.52 136.71 162.52 185.08 C 162.47 189.41 161.95 194.58 158.09 197.27 C 155.72 199.18 152.65 199.72 149.71 200.00 L 50.28 200.00 C 47.34 199.73 44.28 199.17 41.91 197.28 C 38.01 194.60 37.55 189.41 37.48 185.07 C 37.48 136.71 37.49 88.35 37.48 39.99 C 37.52 36.35 37.96 32.48 40.04 29.39 C 42.90 25.92 47.68 24.97 51.96 25.00 C 59.65 25.02 67.33 24.94 75.02 25.06 C 75.41 18.68 73.86 11.81 76.73 5.83 C 78.82 1.47 83.98 0.13 88.43 0.00 Z"
},
       {
            name:"plane",
            picpath:"M54.5,52.8c-9.2,8.6-18.2,17-27.3,25.4c0.3,1.1,0.6,1.9,0.7,2.7c0.1,1.1,0.1,2.2-0.2,3.2c-0.7,2.2-2.1,2.5-3.7,0.9c-1.7-1.8-3.4-3.6-5.1-5.4c-2.7-2.9-5.3-5.7-7.9-8.6c-1.9-2.1-1.3-4.5,1.4-5.3c1-0.3,2.2-0.1,3.2,0.1c1,0.2,2,0.8,2.6,1.1c9.1-9.8,18-19.4,27-29c-0.5-0.3-1.2-0.7-1.9-1.1c-9.4-4.6-18.8-9.3-28.2-13.9c-0.3-0.2-0.7-0.3-1-0.5c-2.1-1.1-2.2-1.4-1.2-3.5c0.5-1,0.9-1.9,1.4-2.9c1.1-2,1.1-2.1,3.2-1.5c9,2.2,18,4.5,27,6.8c3.9,1,7.9,1.9,11.7,3c1.5,0.4,2.4,0,3.4-1.1c2.5-2.8,5.2-5.6,7.7-8.4c2.9-3.1,6.4-4.8,10.4-5.6c4.3-0.8,7.3,1.6,8.1,6.2c0.8,5.2-0.9,9.2-4.6,12.5c-3.8,3.5-7.6,7.1-11.5,10.5c-1.1,1-1.5,2-1.3,3.6c1.4,12.5,2.8,25,4.1,37.5c0.1,1.1,0.3,2.7-0.2,3.4c-1.1,1.3-2.5,2.3-4.1,2.9c-0.4,0.2-1.2-0.4-1.5-0.8c-0.4-0.5-0.5-1.2-0.8-1.9c-3.5-9.1-6.9-18.2-10.4-27.3C55.4,54.9,55,54,54.5,52.8z M83.4,17.4c0-0.6,0.2-1.3,0-1.7c0-0.1-0.1-0.2-0.2-0.3c-0.5-0.7-1.7-0.6-2,0.2c0,0,0,0,0,0C81,16,81,16.6,81,17.1c0,2.2-1.9,4.5-3.2,6.2c-1.1,1.4-1.8,1.9-3,3.2c-0.5,0.6-1,1.2-0.5,2c0.6,0.9,1.3,0.6,1.9,0.1C80,25.7,83.1,22.4,83.4,17.4z"
        },
        {
            name:"taxi",
            picpath:"M89,36.8c-0.1-1.9-0.4-2.2-2.4-2.2c-2.4,0-4.8,0-7.4,0c-0.4-0.9-0.8-1.6-1.1-2.5c-1.6-4.6-3.3-9.3-4.9-13.9c-1-2.9-1.1-3.2-4.3-2.9c-4.2,0.4-7.7-0.5-10.2-4.1c-0.8-1.1-1.9-1.3-3.2-1.3c-2.6,0-5,0-7.7,0c-2.6,0-5.1,0-7.7,0c-1.3,0-2.4,0.2-3.1,1.3c-2.5,3.6-5.9,4.6-10.2,4.1c-3.2-0.3-3.2-0.1-4.3,2.9c-1.6,4.6-3.2,9.3-4.9,13.9c-0.3,0.8-0.7,1.6-1.1,2.5c-2.6,0-5,0-7.4,0c-2,0-2.3,0.3-2.4,2.2c-0.1,1.5,0,3,0,4.5c0,1.5,0.8,2.1,2.2,2.1c1.4,0,2.9,0.1,4.5,0.1c-0.3,1-0.4,1.6-0.7,2.1c-2.8,6-3.5,12.2-3.1,18.7c0.1,1.2,0,2.4,0,3.6c0,4.9,0,9.8,0,14.7c0,2.9,0.1,3,3.1,3c1.5,0,4.8,0,6.3,0c1.5,0,2.4-0.6,2.4-2.2c0-2,0.2-4,0.2-6c0-1.5,0-2.9,0-4.7c9,0,17.6,0,26,0c8.2,0,17,0,26,0c0,1.8,0,3.3,0,4.7c0,2,0.2,4,0.2,6c0,1.5,0.7,2.2,2.2,2.2c1.5,0,4.9,0,6.4,0c3,0,3.1-0.1,3.1-3c0-4.9,0-9.8,0-14.7c0-1.2-0.1-2.4,0-3.6c0.4-6.5-0.3-12.8-3.1-18.7c-0.2-0.5-0.4-1.1-0.7-2.1c1.6-0.1,3.1-0.1,4.5-0.1c1.5,0,2.3-0.6,2.2-2.1C89,39.8,89,38.3,89,36.8z M27,20h21h0h21c0.5,0,0.9,0.5,0.9,1c0,0.5-0.4,1-0.9,1H48h0H27c-0.5,0-0.9-0.5-0.9-1C26.1,20.5,26.5,20,27,20z M22.4,64.4c-3.5,0-6.3-2.9-6.3-6.3c0.1-3.4,2.8-6,6.2-6c3.5,0,6.4,2.9,6.3,6.3C28.6,61.6,25.8,64.4,22.4,64.4z M62,66.8c0,0.5-0.4,1.2-0.9,1.2H48h0H34.9c-0.5,0-0.9-0.7-0.9-1.2l0-3.3c0-0.5-0.1-1,0.4-1c2.2,0,7.6,0,12.6,0.1v0v0l0,0l0,0c0,0,11.4-0.1,13.6-0.1c0.5,0,1.2,0.5,1.2,1L62,66.8z M73.6,64.4c-3.3,0-6.2-2.7-6.2-6.1c-0.1-3.4,2.8-6.3,6.3-6.3c3.4,0,6.1,2.7,6.2,6C79.9,61.5,77.1,64.4,73.6,64.4z"
        },
        {
            name:"ship",
            picpath:"M85.1,79.4c-0.6-0.3-1,0.2-1.3,0.3c-3.2,2.1-3.2,2.1-6.4,0c-0.4-0.3-0.8-0.5-1.4-0.9c0.3-1,0.5-1.9,0.8-2.8c2.7-8.7,5.5-17.4,8.2-26.1c1.1-3.6,1.1-3.6-2.4-4.6c-1.9-0.6-3.7-1.2-5.8-1.8c0-4.2,0-8.4,0-12.5c0-5.7,0.4-5.2-5.3-5.2c-2.4,0-4.9,0-7.6,0c0,0,0-2.4,0-3.6c0-3.2,0-6.4,0-9.6c0-2-0.1-2.3-2-2.3c-4.7,0-9.6,0-13.8,0c-4.7,0-9.3,0-14,0c-1.9,0-2.1,0.3-2.2,2.3c-0.1,3.2,0,6.4,0,9.6l0,3.5c-2.7,0-5.2,0-7.6,0c-5.6,0-5.3-0.5-5.3,5.2c0,4.2,0,8.3,0,12.5c-2.1,0.6-4,1.2-5.8,1.8c-3.5,1.1-3.5,1.1-2.4,4.6c2.8,8.7,5.5,17.4,8.2,26.1c0.3,0.9,0.5,1.8,0.8,2.8c-0.6,0.4-1,0.6-1.4,0.9c-3.2,2.1-3.2,2.1-6.4,0c-0.2-0.1-0.6-0.6-1.3-0.3c-0.5,0.3-0.4,1.2-0.2,1.5c1,2.6,3.5,3.8,6.2,3.1c1.4-0.4,2.8-1,4.2-1.5c2.7-0.8,5.3-0.7,7.6,1.1c3.4,2.7,6.8,2.8,10.6,0.5c2.9-1.7,5.9-2.5,8.8-2.2c2.5-0.3,5.8,0.5,8.7,2.2c3.8,2.3,7.1,2.2,10.6-0.5c2.3-1.8,4.8-1.9,7.5-1.1c1.4,0.4,2.7,1.1,4.2,1.5c2.7,0.8,5.3-0.5,6.2-3.1C85.4,80.6,85.6,79.7,85.1,79.4z M55.1,15.4c1.9,0,3.5,1.6,3.5,3.6c0,2-1.6,3.4-3.6,3.4c-2,0-3.6-1.6-3.5-3.5C51.5,17,53.2,15.4,55.1,15.4z M40.9,15.4c1.9,0,3.6,1.6,3.6,3.5c0,1.9-1.5,3.5-3.5,3.5c-2,0-3.6-1.4-3.6-3.4C37.4,17.1,39,15.5,40.9,15.4z M52.3,39.1c-0.9-0.3-2.3-0.6-4.3-1c0,1.5,0,38.1,0,38.1c0,0.9,0.5,2.2-0.3,2.3c-0.8,0-0.6-1.4-0.6-2.3c0-3,0.1-36.6,0.1-38.1c-0.9,0.3-2.9,0.7-3.8,1c-9.2,3.1-18.2,6.2-27.4,9.2c-0.9,0.3-2.2,1.4-2.8,0c-0.7-1.7,1.3-1.7,2.2-2c10.2-3.5,20.9-7,31.1-10.5c0.7-0.2,1.2-0.3,1.8-0.3c0,0,0.9,0,1.6,0.3c10.2,3.5,20.8,7,31,10.5c0.9,0.3,2.9,0.3,2.1,2c-0.6,1.4-2.2,0.3-3.1,0C70.6,45.2,61.4,42.1,52.3,39.1z"
        },
        {
            name:"bus",
            picpath:"M85.7,35.7c0-1.2-1-2.2-2.1-2.2c-0.9,0-2.9,0-2.9,0l0-3.2c0-5.7,0-11.5,0-17.2c0-2.9,0-3.1-2.7-3.1c-9.7,0-19.8,0-29.9,0v0c-10.4,0-20.4,0-30.1,0c-2.7,0-2.9,0.2-2.9,3.1c0,5.7,0,11.5,0,17.2l0,3.2c0,0-2,0-2.9,0c-1.1,0-2.1,0.9-2.1,2.2c0,3.8,0,7.7,0,11.5c0,1.5,0.8,2.1,2.2,2.1c0.8,0,1.8,0.1,2.8,0.2c0,1.2,0,2.3,0,3.4l0.1,22.2c0,3.9-0.1,3.7,3.5,4.2c0.2,0,0.7,0.1,0.7,0.6c0,1.2,0,2.5,0,3.9c0,1.4,0.6,2.2,2.1,2.2c11.8,0,0,0,11.8,0c1.4,0,2.1-0.3,2.1-1.8c0-1.5,0-3.2,0-4.2H48h12.5c0,1,0,2.7,0,4.2c0,1.5,0.7,1.8,2.1,1.8c11.8,0,0,0,11.8,0c1.5,0,2.1-0.8,2-2.2c0-1.4,0-2.7,0-3.9c0-0.5,0.6-0.6,0.7-0.6c3.6-0.4,3.7-0.3,3.7-4.2L81,52.9c0-1.1,0-2.2,0-3.4c1-0.1,1.8-0.2,2.6-0.2c1.4,0,2.1-0.6,2.1-2.1C85.8,43.4,85.7,39.6,85.7,35.7zM37,13.7c0-0.5-0.4-0.7,0.1-0.7H48h10.6c0.5,0,0.4,0.2,0.4,0.7v1.8c0,0.5,0-0.4-0.4-0.4H48H37.1c-0.5,0-0.1,0.9-0.1,0.4V13.7zM33.6,74.7c-1.1,0.1-2.3,0.1-3.4,0.1c-1,0-2.1,0-3.1,0c-2,0-2.3,0-4.3,0c-1.4,0-2.2-0.5-2.1-2.1c0-2.5,0-4.1,0-6.6c0.1-1.9,0.5-2.2,2.4-1.9c3.8,0.6,5.9,1.1,9.6,2c1.4,0.3,3.1,1.1,3.8,2.5C38,72.1,35.8,74.5,33.6,74.7z M75,72.7c0,1.6-0.7,2.1-2.1,2.1c-2,0-2.3,0-4.3,0c-1,0-2.1,0-3.1,0c-1.1,0-2.3,0-3.4-0.1c-2.1-0.2-4.4-2.6-2.7-6.1c0.6-1.3,2.4-2.1,3.8-2.5c3.7-0.9,5.8-1.4,9.6-2c1.9-0.3,2.3,0.1,2.4,1.9C75.1,68.6,75,70.2,75,72.7z M74.5,58c0.5,0,0.8,0,0.8,0.5c0,0.5-0.4,0.5-0.8,0.5H48H21.2c-0.5,0-0.8,0-0.8-0.5c0-0.5,0.4-0.5,0.8-0.5H48V25H21.2c-0.5,0-1-0.6-1.1-1.1c0-0.5,0.6-0.9,1.1-0.9H48h26.5c0.5,0,1.4,0.2,1.4,0.9c0,0.7-0.9,1.1-1.4,1.1H48v33H74.5z"
        },
        {
            name:"ambulance",
            picpath:"M84,51.9c-0.9,0-1.9,0-2.9,0c-2.7,0-5.5,0-8.1,0c-0.6-1.9-0.8-2.8-1.3-4.4c-7.1-25.5,0,0-7.1-25.5c-1.6-5.8-0.9-5.7-4.5-5.7c-4.3,0-8.6,0-12.8,0c-1.3,0-2.6,0-3.9,0c-0.7-3.4-2.5-6-6.2-6.2c-4.2-0.2-6.3,2.5-7.1,6.3c-3.4,0-6.6,0-9.8,0c-2.7,0-5.3,0-8,0c-1.9,0-2.1,0.3-2.2,2.1c0,0.5,0,0.9,0,1.4c0,9.6,0,19.3,0,28.9c0,6.9,0,13.7,0,20.6c0,3.6,0,3.6,3.5,3.6c1,0,2,0,3,0c0.9,8.7,4.8,13,11.4,13.1c2.8,0,5.4-0.8,7.6-2.6c3.2-2.7,4.2-6,4.2-10.3h12.2C52.6,81.7,56.4,85.7,63,86c2.7,0.1,5.3-0.6,7.4-2.2c3.5-2.7,4.6-6.4,4.5-10.7c3.1,0,6.3,0,9.2,0c1,0,1.8-0.8,1.8-1.7c0-16.9,0-11.5,0-17.3C86,52.6,85.4,51.8,84,51.9z M38.2,40.7c-2.1,0.1-4.1,0-6.5,0c0,1.6,0,5.4,0,7.7c0-0.2,0-0.2-0.1,0c-0.2,1.7-1.3,2.6-2.8,2.6c-1.5,0-2.6-1-2.7-2.7c-0.1-1.6,0-3.1,0-4.7c0-0.8,0-1.6,0-2.7c-1.6-0.1-3-0.1-4.3-0.1c-0.9,0-1.9,0-2.8-0.1c-1.5-0.2-2.5-1.3-2.5-2.6c0-1.4,1-2.6,2.7-2.7c1.6-0.1,3.2,0,4.8-0.1c0.6,0,1.1-0.1,2-0.1c0-1.7,0.1-3.5,0.1-5.2c0-0.9,0-1.9,0-2.8c0.1-1.6,1.2-2.7,2.6-2.8c1.5-0.1,2.9,1,3,2.8c0.1,1.4,0.2,6.2,0.2,7.6c0,0.1,0,0.2,0,0.2c0,0.1,0,0.1,0,0.2c2,0,4.3,0,6.3,0c2,0.1,3.2,1.2,3.1,2.8C41.4,39.6,40.1,40.6,38.2,40.7z M63.6,51.5c-5.7,0.1-7.9,0-13.6,0c-1.6,0-1.8-1.1-1.8-2.3c0-4.6,0-7.6,0-12.2c0-4.5,0-5.6,0-10.2c0-2.4,0.2-2.5,2.6-2.5c2.5,0,3.2,0,5.6,0c2.3,0,1.8,0.1,2.9,2.2c5.8,22.8,5.3,20.9,5.8,22.8C65.6,50.8,65.1,51.4,63.6,51.5z M82.3,60.1h-7.1c-0.5,0-0.9-0.4-0.9-0.9v-1.7c0-0.5,0.4-0.9,0.9-0.9h7.1c0.5,0,0.9,0.4,0.9,0.9v1.7C83.2,59.8,82.8,60.1,82.3,60.1z"
        },
        {
            name:"railway",
            picpath:"M82.7,27.3c0-3-0.1-3.1-3-4.1c0-2.8,0-5.8,0-8.7c0-2.6-0.2-2.9-2.5-2.9c-4.6,0-9.2,0-14.1,0C63,9.9,63,8.4,62.9,6.8c-0.1-2.2-0.7-2.7-2.5-2.7c-4.1,0-8,0-12.6,0c-4.1,0-8.3,0-12.4,0c-1.9,0-2.2,0.5-2.3,2.7C33,8.4,33,9.9,32.9,11.6c-4.9,0-9.5,0-14.1,0c-2.3,0-2.5,0.3-2.5,2.9c0,2.9,0,5.9,0,8.7c-2.9,1-3,1-3,4.1c0,2.7,0,5.4,0,8.1c0,3.7,0,3.7,2.9,4.9l0.1,20.2c0.1,4.6,1.1,6.7,3.9,8.5c2.7,1.7,5.6,2.9,8.4,4.2c1.2,0.5,2.5,0.9,3.9,1.3c-2.4,4.6-4.6,9-6.9,13.4c-0.3,0.6-0.8,1.3-0.9,2c-0.1,0.6,0,1.4,0.7,1.8c0.3,0.2,1.1,0.2,1.4-0.1c0.7-0.8,1.2-1.5,1.8-2.5h19.2h19.6c0.6,1,1.1,1.7,1.8,2.5c0.3,0.3,1.1,0.3,1.4,0.1c0.7-0.4,0.7-1.2,0.7-1.8c-0.1-0.7-0.6-1.3-0.9-2c-2.2-4.4-4.5-8.8-6.9-13.4c1.4-0.5,2.7-0.8,3.9-1.3c2.8-1.3,5.8-2.5,8.4-4.2c2.8-1.8,3.9-3.9,3.9-8.5l0.1-20.2c2.9-1.2,2.9-1.2,2.9-4.9C82.7,32.8,82.8,30,82.7,27.3z M55,6.6c1.1,0,2,1.3,1.9,2.5c-0.1,1.2-1,2-2.1,1.9C53.7,11,52.9,10,53,8.8C53,7.6,54,6.6,55,6.6z M41,6.6c1,0,1.9,1,2,2.1c0.1,1.2-0.7,2.2-1.8,2.3c-1.1,0.1-2-0.7-2.1-1.9C39,7.9,39.9,6.7,41,6.6z M63.8,82.7l1.7,2.3H47.8H30.5l1.5-2.3l15.8,0L63.8,82.7zM47.8,76c4.6,0,9.8-0.2,12.6-0.7l1.8,2.7H47.8H33.8l1.6-2.7C38.2,75.8,43.6,76,47.8,76z M37.5,67.4c0.1-1.4,1.2-1.4,2.1-1.4c2.7,0,5.4,0,8.1,0c2.8,0,5.6,0,8.3,0c0.9,0,2.2-0.1,2.2,1.4c0.1,1.5-1,1.5-1.9,1.6c-0.3,0-0.8,0-1,0c-2.5,0-4.9,0-7.6,0c-2.5,0-4.9,0-7.4,0c-0.3,0-0.6,0-0.8,0C38.6,68.9,37.5,68.9,37.5,67.4z M75.4,60H47.8H20.6c-0.5,0-0.8-0.5-0.8-1c0-0.5,0.4-1,0.8-1h27.1h27.6c0.5,0,0.8,0.5,0.8,1C76.2,59.5,75.8,60,75.4,60z M75.4,18H47.8H20.6c-0.5,0-0.8-0.5-0.8-1 s0.4-1,0.8-1h27.1h27.6c0.5,0,0.8,0.5,0.8,1S75.8,18,75.4,18z"
        },
        {
            name:"bicycle",
            picpath:"M88.8,57.1c-3.7-5.4-8.9-7.9-15.4-8.5c-0.6-6.6-1.3-13.1-1.9-19.5c-0.5-5.5-1-10.9-1.5-16.4c-0.3-2.8-0.9-3.3-3.8-3.4c-2.3,0-4.6,0-6.9,0c-2.5,0-5.1,0-7.6,0.1c-1.2,0-2.1,0.8-2.2,2.1c-0.1,1.4,0.7,2.3,2,2.5c1,0.2,2,0.1,3,0.1c3.5,0,7,0,10.7,0c0.7,7.2,0.4,13.1,1,20.1C56,40.8,46.1,47.2,35.9,53.7c-3.2-3.3-4.9-4-8.9-4.9c0-6.4,0-12.5,0-19c2,0,3.2,0.1,5.2,0c2.2-0.1,3.4-1.4,3.4-3.1c0-1.9-1.4-3.2-3.8-3.2c-3.3-0.1-6.6,0-9.9,0c-0.9,0-1.8,0-2.7,0c-2.1,0.2-3.3,1.2-3.4,2.9c-0.1,1.6,0.7,2.7,2.5,3.4c0.6,0.2,1.3,0.3,1.8,0.5c0.6,4.1,0.4,16.4-0.2,18.7C6.1,52,2.2,63.9,4.7,72.7C7.5,82.9,18,88.8,28.1,85.8c5-1.5,8.8-4.5,11.3-9c3.3-5.9,3-12,0.3-17.9c3-2.7,24.5-16.8,27.1-17.5c0.1,1.3,0.3,2.6,0.4,3.9c0.1,1.3,0.2,2.6,0.3,3.8c-11.8,5.8-15.3,13.7-12.5,23.7c2.4,8.7,10.9,14.7,19.6,13.9c9.2-0.9,16.5-7.9,17.4-16.6C92.3,65.3,91.4,61,88.8,57.1z M81.7,80c-0.5,0.4-1.1,0.6-1.7,0.9c-7.4,3.3-6.7,1.1-6.7,1.1s4.7-1.7,6.4-2.8c1.9-1.2,7.4-5.9,7.7-12c0.3-5.5,0.2-6.1,0.2-6.1c1-1.5,1.4,2.6,1.5,3.9C89.7,71,86.9,76.4,81.7,80z"
        },
        {
            name:"rocket",
            picpath:"M78,40.8c4.7-8.1,6-16.9,6.4-25.9c0-1,0.1-2,0.1-3c0-0.6-0.6-1.1-1.3-0.9c-1.8,0.3-3.4,0.6-5.1,0.9c-9.6,1.7-18.5,4.7-26.2,10.1c-5.3,3.8-9.8,8.3-14.3,12.9c-0.5,0.5-1.4,0.9-2.2,1c-3.8,0.2-7.6,0.2-11.4,0.4c-0.8,0-1.6,0.4-2.1,0.9c-4.3,4.5-8.5,9-12.8,13.6c-0.3,0.3-0.5,0.6-0.9,1.1c0.6,0,1,0,1.4,0c3.5-0.3,6.9-0.5,10.4-0.8c0.4,0,1,0,1.3,0.2c1.5,1,3,2.2,4.6,3.3c-1.3,0.9-2.4,1.6-3.4,2.3c-5.6,3.8-9.3,8.7-9.8,15.1c-0.3,4.4-0.1,8.7,0,13.1c0,1.5,1.3,2.2,3.1,1.9c4.4-0.8,8.8-1.6,13.1-2.7c7.2-1.8,12.6-5.6,16.3-11.4c0.6-0.9,1.2-1.9,1.9-2.9c1.2,0.9,2.3,1.7,3.4,2.5c0.8,0.5,1.2,1.3,1.3,2.1c0.3,3,0.6,6,0.9,9c0,0.3,0.1,0.6,0.3,1.1c4.8-5.1,9.4-10.1,14.1-15.1c0.3-0.3,0.4-0.7,0.4-1.2c-0.6-3.5-1.2-7-1.8-10.5c-0.2-0.8,0-1.3,0.6-2C70.6,51.2,74.8,46.3,78,40.8z M51.6,53.5c-3.5,4.5-7,8.9-10.5,13.3c-0.3,0.4-0.6,0.8-1.1,1.5c1.2-0.3,2-0.6,3.1-0.9c-2.8,5.5-6.5,10.1-13.1,12c-4.1,1.2-8.3,2.1-12.8,3.2c0-2.5-0.2-4.6,0-6.7c0.2-2.4,0.4-4.8,1-7.1c1.4-5,5.7-8,10.3-11c0,0.8,0,1.4,0,2.4c0.6-0.5,1-0.9,1.4-1.2c4.4-3.9,8.7-7.9,13.2-11.8c0.5-0.5,1.2-0.8,1.9-0.9c0.6-0.1,1.2-0.2,1.9-0.3c-6.6,5.9-12.7,12.5-19.3,18.4c-0.3,0.3-7.7,6.7-7.8,7.3c-0.2,1.1,0.3,4.2,0.5,6.3c0,0.6,0.6,1,1.2,0.9c1.7-0.3,3.4-0.6,5.1-0.8c1.3-0.2,2.4-0.8,3.1-1.7c5.1-6.5,16.8-19.8,22.1-26.2c0.1-0.2,0.2-0.3,0.4-0.5c0,0.7,0.1,1.4,0.1,2.1C52.3,52.5,52,53.1,51.6,53.5z M60.1,43.3c-5.2-0.7-8.6-4.9-7.8-9.5c0.8-4.4,5.5-7.5,10.4-6.7c5.4,0.8,8.7,4.8,7.8,9.5C69.8,41,65.1,44,60.1,43.3z"
        },
        {
            name:"tractor",
            picpath:"M84.7,40c-3.5-0.5-6.7-1.2-10.7-1.7V28h10.2c0.4,0,0.8-0.3,0.8-0.8v-4.6c0-0.9-0.7-1.6-1.6-1.6H67v16.1c-3-0.6-6.3-1.2-9.4-1.7c-1-0.2-1.5-0.6-1.8-1.5C52.9,26.3,50,18.7,47.2,11c-0.4-1-0.8-1.1-1.8-1.1C35.9,9.9,18,10,12,10c-1.1,0-2,0.9-2,2c0,8.4-0.1,40.9,0,57.9c0,0.8,0,1.5,0.1,2.3c0.9,6.4,4.5,10.7,10.6,12.6c6,1.9,11.3,0.1,15.6-4.5c2.6-2.8,3.8-6.3,4-10.3c1.9,0,3.8,0,5.7,0c1.9,0,3.7,0,5.6,0C52,80,60.2,85.5,67,85.3c3.7-0.1,7-1.4,9.8-3.8c3.4-3,5.1-6.5,5.3-11.5c1.3,0,2.5,0,3.7,0c0-1,0.1-0.4,0.1-0.6c0-9.4-0.1-18.8-0.1-28.2C85.7,40.6,85.3,40.1,84.7,40z M30.8,36h-7c-0.5,0-0.9-0.4-0.9-0.9V18.5c0-0.5,0.4-0.9,0.9-0.9h7c0.5,0,0.9,0.4,0.9,0.9v16.6C31.7,35.6,31.3,36,30.8,36z M36.1,35.1V18.5c0-0.5,0.4-0.9,0.9-0.9c0.4,0,1.2,0,3.2-0.1c0.8,0,1.3,0.3,1.6,1.1c0,0,6,12.1,7.8,16.1c0.3,0.6-0.2,1.2-0.8,1.2H37C36.5,36,36.1,35.6,36.1,35.1z"
        },
        {
            name:"car",
            picpath:"M91.9,60.3c-0.7-9.9-3.7-15-8.7-18.7c-4-2.9-8.3-3.9-12.5-4.5c-3.7-0.6-7-4.2-9.4-9.9c-0.9-2-1.9-3.8-3-5.6c-1.7-2.9-3.4-5.4-5.9-5.4c-8.2,0-16.4-0.2-24.6,0.1c-4.5,0.1-8.3,3.1-10.4,11.2c-0.9,3.6-2.2,6.8-3.3,10.3c-0.6,1.8-1.3,2.6-2.4,2.5c-1.4-0.1-2.8-0.1-4.3,0C4.6,40.2,4,41.1,4,46c0,4.7,0,9.5,0.1,14.2c0.1,6,0.7,7.2,4,7.4c1.2,0.1,2.5,0.1,3.7,0.1c0.7,0,1.2,0.6,1.2,1.2c0,0.2,0,0.3,0,0.5c0,0.2,0,0.3,0,0.5c-0.1,0.2,0,0.6,0.1,1.1c0.8,5.1,5.2,9,10.7,9c6,0,10.8-4.1,10.8-9.9c0-0.6-0.1-1.1-0.2-1.1h23.7c0,0,0,0,0,0h0.1c0,0-0.1,0.3-0.1,0.5c0-0.3,0-0.5,0-0.5h0c0,0,0-0.4,0-0.2c-0.1,0.4-0.1,0.5-0.1,0.9c0,5.9,4.8,10.4,10.8,10.4c6,0,10.8-4.8,10.8-10.7c0-0.5,0-0.9-0.1-1.4c0,0,0,0.6,0,0.6c0-0.1,0,0.4,0,0.4c0.3,0,0.7,0,1,0c2.6,0,5.2-0.6,7.8-0.7C91.3,68.3,92.3,65.7,91.9,60.3z M19.1,39.6l3.6-13.2c0-0.2,0.1-0.3,0.2-0.4c0.3-0.6,2.2-2.4,3,0.3L26,38.8c0,1.2-0.1,2.2-2,2.2c-1.7,0-3.9-0.1-3.9-0.1C19.5,40.9,18.9,40.2,19.1,39.6zM38.8,41h-5.6c-0.7,0-1.2-0.5-1.2-1.2c0-3,0-10.6,0-13.6c0-0.7,0.5-1.2,1.2-1.2h5.6c0.7,0,1.2,0.5,1.2,1.2c0,3,0,10.6,0,13.6C40,40.5,39.5,41,38.8,41z M47.7,41c-1.2,0-2.1-1-2.2-2.1c0-3.7-0.1-7.7-0.1-11.9c0-1.1,0.9-2,2-2c0,0,0,0,0,0c1.9-0.1,3.7-0.5,7.3,1.7c2.3,1.4,4.1,8.1,5.2,11.3c0.6,1.8-0.3,3-1,3L47.7,41z"
        },
        {
            name:"truck",
            picpath:"M83.1,13.8c0-3.5-2.8-6.9-7-6.8C66.8,7,57.3,7,48,7h0c-9.4,0-18.8,0-28.2,0c-4.2,0-7.4,3.3-7.4,6.8C12.5,32.6,12,51.4,12,70.2V71c0,0.5,1.3,0,1.8,0h5.8c0,1,0,2,0,2.8c0.1,1.2,0.2,2.5,1.1,3.4c0.3,0.3,0.6,1,0.6,1.4c0.1,2.7,0,5.5,0,8.2c0,1.7,0.5,2.2,2.2,2.2c1.8,0,3.6,0,5.4,0c1.3,0,2.4-1.1,2.4-2.4c0-2.2,0-4.6,0-6.6h16.7h16.7c0,2,0,4.5,0,6.6c0,1.3,1.1,2.4,2.4,2.4c1.8,0,3.6,0,5.4,0c1.7,0,2.2-0.5,2.2-2.2c0-2.7,0-5.5,0-8.2c0-0.4,0.3-1,0.6-1.3c0.9-0.9,1-2.4,1.1-3.6c0.1-0.8,0-1.8,0-2.8h5.8c0.5,0,0.6,0.5,0.6,0v-0.8C83,51.4,83,32.6,83.1,13.8z M34.7,69.6c0,1.2-0.8,1.9-2,1.9c-2.1,0-4.2,0-6.3,0c-1.4,0-2-0.7-2-2c0-1,0-2.1,0-3.1c0-1,0-2.1,0-3.1c0-1.2,0.7-1.9,2-2c2.1-0.1,4.3-0.1,6.5,0c1.3,0,2,0.7,2,2C34.8,65.4,34.8,67.5,34.7,69.6z M24.6,26.5c0-0.5,0.4-0.5,0.9-0.5h22.6h22.6c0.5,0,0.9,0,0.9,0.5c0,0.5-0.4,0.5-0.9,0.5H48.1H25.5C25,27,24.6,27,24.6,26.5z M55.1,75h-7h-7c-0.5,0-0.9-0.5-0.9-1s0.4-1,0.9-1h7h7c0.5,0,0.9,0.5,0.9,1S55.6,75,55.1,75z M71.9,69.5c0,1.3-0.7,2-2,2c-2.1,0-4.2,0-6.3,0c-1.3,0-2-0.7-2-1.9c-0.1-2.1-0.1-4.2,0-6.3c0-1.2,0.8-1.9,2-2c2.1-0.1,4.3-0.1,6.5,0c1.3,0,1.9,0.7,2,2c0,1,0,2.1,0,3.1C71.9,67.4,71.9,68.5,71.9,69.5z M77,65.8v0.6c0,0.5,0.3,0.9-0.2,0.9c0,0,0.2,0,0.2,0c0,0-0.3,0-0.3,0c-0.5,0-0.7-0.4-0.7-0.9v-0.9c0-12.6,0.3-25.2,0.3-37.8c0-3.1-2.4-5.1-5.5-5.1C63.1,22.5,55.5,23,48,23h0c-7.6,0-15.2-0.5-22.9-0.5c-3.1,0-5.9,2.3-5.9,5.3c0,12.6-0.3,25-0.3,37.6v0.9c0,0.5,0.3,0.9-0.2,0.9c0,0,0.1,0,0.1,0c0,0-0.2,0-0.1,0c-0.5,0-0.7-0.4-0.7-0.9v-0.6c0-14.7,0-28.5,0-43.2c0-1.8,0.8-1.9,2.6-1.9C30,20.8,39,21,48,21H48c9.3,0,17.6-0.2,27-0.2c1.8,0,2,0.1,2,1.9C77,37.3,77,51.1,77,65.8z"
        },
        {
            name:"carfront",
            picpath:"M89,36.9c-0.1-1.9-0.4-2.2-2.4-2.2c-2.4,0-4.8,0-7.4,0c-0.4-0.9-3.6-10-5.2-14.7c-1-2.9-4-5-7-5c0,0-38,0-38,0c-2.7,0-6,2.1-7,5c-1.6,4.6-2.5,7.5-4.1,12.1c-0.3,0.8-0.7,1.7-1.1,2.5c-2.6,0-5,0-7.4,0c-2,0-2.3,0.3-2.4,2.2c-0.1,1.5,0,3,0,4.5c0,1.5,0.8,2.1,2.2,2.1c1.4,0,2.9,0.1,4.5,0.1c-0.3,1-0.4,1.6-0.7,2.1c-2.8,6-3.5,12.2-3.1,18.7c0.1,1.2,0,2.4,0,3.6c0,4.9,0,9.8,0,14.7c0,2.9,0.1,3,3.1,3c1.5,0,4.8,0,6.3,0c1.5,0,2.4-0.6,2.4-2.2c0-2,0.2-4,0.2-6c0-1.5,0-2.9,0-4.7c9,0,17.6,0,26,0c8.2,0,17,0,26,0c0,1.8,0,3.3,0,4.7c0,2,0.2,4,0.2,6c0,1.5,0.7,2.2,2.2,2.2c1.5,0,4.9,0,6.4,0c3,0,3.1-0.1,3.1-3c0-4.9,0-9.8,0-14.7c0-1.2-0.1-2.4,0-3.6c0.4-6.5-0.3-12.8-3.1-18.7c-0.2-0.5-0.4-1.1-0.7-2.1c1.6-0.1,3.1-0.1,4.5-0.1c1.5,0,2.3-0.6,2.2-2.1C89,39.9,89,38.4,89,36.9z M22.4,64.4c-3.5,0-6.3-2.9-6.3-6.3c0.1-3.4,2.8-6,6.2-6c3.5,0,6.4,2.9,6.3,6.3C28.6,61.7,25.8,64.4,22.4,64.4z M62,66.9c0,0.5-0.4,1.1-0.9,1.1H48h0H34.9c-0.5,0-0.9-0.6-0.9-1.1l0-3.3c0-0.5,0.6-1,1.1-1c2.2,0,7,0,12,0.1v0v0l0,0l0,0c0,0,11.4-0.1,13.6-0.1c1.3,0,1.4,0.9,1.4,1.4L62,66.9z M73.6,64.4c-3.3,0-6.2-2.7-6.2-6.1c-0.1-3.4,2.8-6.3,6.3-6.3c3.4,0,6.1,2.7,6.2,6C79.9,61.6,77.1,64.5,73.6,64.4z"
        },
        
    // ********************************************************

        {
            name:"mail",
            picpath:"M82.6,15.8c-11.6,0-23.5,0-34.5,0c-11,0-35.1,0-35.1,0c-7-0.4-8.9,2.4-8.9,6c0,0.5,0,32.4,0,49.5c0,1.5,0,1.6,0,3.1c0,2.5,2.6,5.3,4.8,5.5C9,80,35.1,80,48.1,80s25.6,0,38.9,0c3,0,5.1-2.9,5.2-5.2c0-1.5,0-1.9,0-3.3c0-17.1-0.1-46.9-0.1-49.1C91.9,17.7,90.1,15.8,82.6,15.8z M88.4,75c-0.8,1.1-2,1.3-3.4,0.5c-1.7-1-3.3-2.1-4.9-3.2c-7.7-5.6-16.4-11.3-24.1-16.9c-0.5-0.4-1.1-0.7-1.7-1.1c-1.5,1.5-2.8,2.9-4.2,4.2c-0.5,0.4-1,0.8-1.4,1c-0.4,0.2-0.9,0.2-1.3,0c-0.4-0.2-0.9-0.5-1.4-1c-1.4-1.4-2.7-2.8-4.2-4.2c-0.7,0.4-1.2,0.7-1.7,1.1c-7.7,5.6-16.3,11.3-24.1,16.9c-1.6,1.2-3.3,2.2-4.9,3.2c-1.4,0.8-2.6,0.6-3.4-0.5c-0.8-1.1-0.6-2.3,0.6-3.4c0.5-0.5,1.1-0.8,1.7-1.2c8.3-5.9,16.5-11.8,24.8-17.7c0.8-0.5,1.5-1.1,2.5-1.9c-0.7-0.8-1.3-1.4-1.9-2.1c-8.3-8.2-16.7-16.5-25-24.7c-0.6-0.5-1.1-1.1-1.6-1.7C8,21.3,8.1,20.2,9,19.3c0.8-0.9,2-1,3-0.3c0.6,0.4,1.2,1,1.7,1.6C24.3,31,35.5,41.4,46.2,51.9c0.4,0.4,0.9,0.7,1.3,1.1c0.4,0.3,0.9,0.3,1.2,0c0.4-0.4,0.9-0.7,1.3-1.1C60.6,41.4,71.8,31,82.4,20.6c0.6-0.5,1.1-1.1,1.7-1.6c1.1-0.8,2.2-0.6,3,0.3c0.8,0.9,0.9,2,0.2,3.1c-0.5,0.6-1,1.1-1.6,1.7c-8.3,8.2-16.7,16.5-25,24.7c-0.6,0.6-1.2,1.3-1.9,2.1c1,0.8,1.8,1.3,2.5,1.9c8.3,5.9,16.5,11.8,24.8,17.7c0.6,0.4,1.1,0.8,1.7,1.2C89,72.7,89.2,73.9,88.4,75z"
        },
        {
            name:"coinc",
            picpath:"M48.1,12.5C48.1,12.5,48.1,12.5,48.1,12.5C48.1,12.5,48.1,12.5,48.1,12.5c-19.7,0-35.5,15.8-35.5,35.4c0,19.7,15.8,35.6,35.5,35.6c19.7,0,35.5-15.9,35.5-35.6C83.5,28.3,67.7,12.5,48.1,12.5z M50.6,33.2c2.4-2.4,4.8-4.9,7.2-7.2c0.9-0.8,2-0.8,3-0.1c0.9,0.6,1.1,1.9,0.6,2.9c-0.2,0.3-0.4,0.5-0.6,0.8c-2.2,2.2-4.5,4.5-6.7,6.7c-0.3,0.3-0.6,0.5-1,0.7c-1.6,0.6-3.1-0.5-3.1-2.5C50.1,34.2,50.2,33.6,50.6,33.2z M35.4,25.9c1-0.7,2.1-0.7,3,0.1c2.4,2.4,4.9,4.8,7.2,7.2c0.4,0.4,0.5,1,0.6,1.2c0,2-1.5,3.1-3.1,2.5c-0.4-0.1-0.7-0.4-1-0.7c-2.2-2.2-4.5-4.5-6.7-6.7c-0.2-0.2-0.5-0.5-0.6-0.8	C34.3,27.8,34.5,26.5,35.4,25.9z M61.3,53.6c-0.9,0.1-1.2,0.1-2.2,0.1c-2.5,0-6.1,0-8.1,0c0,1.3,0,2.1,0,2.9c0,3.3,0,6.7,0,10c0,3-0.6,4-2.1,4.1c-0.1,0-1.9,0-1.9,0c-1.4,0-1.9-1.9-2-4.1c-0.1-3.3,0-6.7,0-10c0-0.8,0-1.7,0-2.9c-2,0-4.5,0-7,0	c-0.9,0-2,0-2.9-0.1c-1.2-0.2-2-1.1-2-2.2c0-1.1,0.7-2,1.9-2.3c0.6-0.1,1.6-0.1,2.3-0.1c2.7,0,4.7,0,7.7,0c0-2.1,0-4,0-6.1c0-0.1-0.7-0.2-1.4-0.2c-2.3,0-4.7,0-6.9,0c-0.7,0-1.5,0.1-2-0.3c-0.6-0.4-1.3-1.1-1.5-1.8c-0.3-0.9,0.2-1.8,1.1-2.2c0.6-0.2,1.3-0.4,1.9-0.4c4,0,7.9,0,11.9,0c4,0,7.9,0,11.9,0c0.6,0,1.3,0.1,1.9,0.4c1,0.4,1.5,1.3,1.2,2.2c-0.2,0.7-0.8,1.4-1.4,1.8c-0.5,0.3-1.3,0.2-1.9,0.3c-2.3,0-4,0-6.2,0c-0.7,0-2.5,0.1-2.5,0.2c0,2.1,0,4,0,6.1c3,0,6.1,0,8.8,0c0.7,0,1,0,1.7,0.1c1.2,0.2,1.8,1.1,1.8,2.3C63.3,52.6,62.5,53.4,61.3,53.6z M48.1,3.9C23.8,4,4.1,23.5,4,47.7C3.9,72.2,23.6,92,48,92h0.1h0.1c24.3-0.1,44-19.9,44-44.3C92.1,23.5,72.4,4,48.1,3.9z M48.8,88.2c-0.2,0-0.5,0-0.7,0s-0.5,0-0.7,0c-22-0.4-39.8-18.5-39.6-40.5C8,25.4,26.1,7.6,48.1,7.7c22-0.1,40.1,17.8,40.3,40 C88.6,69.7,70.8,87.8,48.8,88.2z"
        },
        {
            name:"coind",
            picpath:"M48,3C23.2,3,3.1,23.1,3,47.9C3,72.8,23.2,93.1,48.1,93C72.9,93,93,72.8,93,48C93.1,23.1,72.9,3,48,3z M48.3,89 C25.4,89.1,7,70.8,7,48C7,25.3,25.2,7,47.9,6.9C70.6,6.8,89,25.1,89,47.8C89.1,70.5,70.9,89,48.3,89z M48,11.7c-20.1,0-36.3,16.2-36.3,36.3c0,20,16.4,36.3,36.3,36.3c20,0,36.3-16.3,36.3-36.4S68.1,11.6,48,11.7z M53.1,70.4c-0.6,0.3-1.3,0.5-2.2,0.8c0,2,0,3.7,0,5.5c0,0.7,0,1.4-0.1,2c-0.2,1.4-1.1,2.2-2.4,2.1c-1.2-0.1-1.9-0.8-2.1-2.2c-0.1-1.1-0.1-2.2-0.1-3.3c0-1.4,0-2.7,0-4.1c-0.9-0.4-1.7-0.6-2.5-1c-4-1.8-6.5-4.9-7.3-9.2c-0.1-0.5-0.2-1-0.1-1.5c0.2-1.1,0.9-1.9,2-2s2,0.4,2.4,1.5c0.2,0.7,0.3,1.5,0.5,2.2c1.1,3.6,4.8,5.8,8.6,5.2c3.6-0.6,6.3-4,6.2-7.7c-0.1-3.8-3.1-7-6.9-7.2c-2.3-0.1-4.6-0.5-6.6-1.7c-4.2-2.5-6.4-6.2-6.2-11c0.1-4.9,2.6-8.5,7-10.8c0.6-0.3,1.3-0.5,2.2-0.9c0-1.3,0.1-2.7,0.1-4.1c0-1,0-2.1,0.1-3.1c0.2-1.3,1.1-2.1,2.2-2.1c1.1,0,2,0.8,2.3,2.1c0.1,0.7,0.1,1.5,0.1,2.3c0,1.5,0,3,0,4.6c0.9,0.3,1.6,0.5,2.3,0.8c4.2,1.6,6.8,4.7,7.9,9.1c0.1,0.5,0.2,1,0.2,1.5c-0.1,1.1-0.6,1.9-1.8,2.2s-2.2-0.3-2.6-1.5c-0.2-0.6-0.3-1.3-0.5-2c-1.2-3.6-4.6-5.8-8.3-5.3c-3.6,0.5-6.5,3.8-6.5,7.5s2.7,6.8,6.4,7.5c0.8,0.1,1.5,0.2,2.3,0.2c5,0.1,10.2,4.6,11,10.4C61.6,62.8,58.4,68.3,53.1,70.4z"
        },
        {
            name:"note",
            picpath:"M80,14.9c-0.1-1.7-0.4-2.1-1.8-2.2c-2.3-0.1-6.6,0-7.5-0.1c0-2.3,0-4.4,0-6.4c0-1.7-0.4-2.2-1.8-2.3c-1.4-0.1-3.5-0.1-4.9-0.1c-2.4,0-2.6,0.3-2.6,3.3c0,1.8-0.1,3.6-0.1,5.5l-7.3,0c0-2.3,0-4.2,0-6c0-2.2-0.3-2.6-2-2.7c-1.5-0.1-6.4-0.1-7.9,0c-1.7,0.1-2,0.7-2,2.9c0,2,0,3.2,0,6.2c-3,0-4,0-7,0c0-3,0-4.3,0-6.3C35,4.6,34.6,4,32.9,4c-1.5-0.1-2.9-0.1-4.4,0c-1.6,0.1-3.3,0.6-3.3,2.6c0,2,0,3.5,0,6.5c-1,0-1.7,0-2.4,0c-1.7,0-2-0.1-3.7-0.1c-3,0-3.1,0-3.1,3.7c0,24,0,45.5,0,69.5c0,3.7,3,6,6,6c19.3,0,32.7,0,52,0c3.1,0,6-2.1,6-6c0-23.8,0-45.4,0-69.2C80,16.2,80,15.6,80,14.9z M28,8c0,0.1,4,0,4,0c0,4,0,7.2,0,11.4c-0.4,0.1-4,0.1-4,0C28,15.1,28,12,28,8z M41.5,60.5c-3.7,1.9-6.2,5.3-7,6.4c0,0-0.6,0.8-1.1,1.8c-0.6,1.3-1.2,1.4-1.9,0.4c-0.8-1.2-2-2.6-2.7-3.4c-0.3-0.3-0.3-0.8-0.1-1.1c0.1-0.3,0.3-0.7,0.8-0.5c0.9,0.4,1.6,1.2,2.6,1.8c0.2,0.1,0.4,0.1,0.6-0.1c1.1-1.2,2.3-2.8,3.6-3.9c1.5-1.3,3.1-2.4,4.7-3.4c0.6-0.4,1.3-0.4,1.5,0.7C42.6,59.9,42.1,60.3,41.5,60.5z M42.1,35c-3.7,1.9-6.2,5.3-7,6.4c0,0-0.6,0.8-1.1,1.8c-0.6,1.3-1.2,1.4-1.9,0.4c-0.8-1.2-2-2.6-2.7-3.4c-0.3-0.3-0.3-0.8-0.1-1.1c0.1-0.3,0.3-0.7,0.8-0.5c0.9,0.4,1.6,1.2,2.6,1.8c0.2,0.1,0.4,0.1,0.6-0.1c1.1-1.2,2.3-2.8,3.6-3.9c1.5-1.3,3.1-2.4,4.7-3.4c0.6-0.4,1.3-0.4,1.5,0.7C43.2,34.4,42.7,34.8,42.1,35z M70.6,55.4c0,1.5-1.1,1.2-1.9,1.2c-3.6,0-7.2,0-10.9,0c-3.5,0-7,0-10.4,0c-1.5,0-2.2-0.5-2.1-1.4c0.3-1.4,1.3-1.1,2.1-1.1c7.1,0,14.2,0,21.3,0C69.5,54.2,70.6,54,70.6,55.4z M69.3,42.8c-0.4,0.2-1,0.3-1.5,0.3c-3.4,0-16.7,0.1-20.1,0.1c-0.4,0-0.8,0-1.3,0c-0.7-0.1-1.3-0.6-1.2-1.5c0-1.4,2-1.2,2.4-1.2c6.7,0,13.4,0,20.1,0c0.6,0,1.1-0.1,1.7,0.1c0.3,0.1,0.8,0.5,0.7,1C70.2,42.5,69.7,42.6,69.3,42.8z M64,8c0,0,3,0,4,0c0,4,0,7,0,12c-1,0-4,0-4,0C64,15,64,12,64,8z M46,8c1.1,0,3.2,0,4,0c0,4,0,7.7,0,11.8c-0.8,0-2.9,0-4,0C46,19.8,46,10,46,8z M47.4,33.9c6.9,0,13.8,0,20.7,0c0.8,0,2.1,0.2,2,1.2c0,0.9-0.5,1.3-2.1,1.3c-3.5,0-7,0-10.5,0c-3.4,0-6.8,0-10.3,0c-0.8,0-2,0.3-2-1.1C45.2,34,45.9,33.9,47.4,33.9z M69.9,71.5c-0.4,0.2-1,0.2-1.4,0.2c-7,0-13.9,0-20.9,0c-0.5,0-1,0-1.4-0.2c-0.3-0.2-0.6-0.3-0.6-1.1c0-0.8,0.4-0.9,0.7-1c0.4-0.2,1-0.1,1.4-0.1c3.5,0,7,0,10.5,0c3.4,0,6.8,0,10.3,0c0.5,0,1-0.1,1.4,0.1c0.3,0.1,0.7,0.3,0.7,1C70.5,71.2,70.2,71.3,69.9,71.5z M68.7,63.9c-7.2,0-14.4,0-21.6,0c-0.8,0-1.9,0.2-1.9-1.3c0-1.5,1.1-1.2,2-1.2c3.6,0,7.3,0,10.9,0c3.6,0,7.1,0,10.7,0c0.8,0,1.9-0.3,1.9,1.2C70.6,64.2,69.8,63.9,68.7,63.9z"
        },
        {
            name:"setit",
            picpath:"M91.8,39.9c0.1-2.2-0.7-2.7-2.9-2.2c-2.4,0.5-4.7,1-7.2,1.5c-1.5-3.4-3-6.8-4.6-10.4c1.6-0.8,3.4-1.8,5.3-2.6c3.6-1.4,3.8-2.7,1-5.2c-3.6-3.2-7.1-6.7-10.6-10c-0.4-0.4-0.7-0.8-1.2-1.1c-1.3-1-2.4-0.7-3,0.8c-1.1,2.4-2,4.8-3,7.2c-3.1-1.3-6-2.5-9-3.7c0.5-2.4,1-4.7,1.4-7.1c0.5-2.5,0.1-3.1-2.5-3.1c-2.6,0-4.8,0-7.7,0c-2.6,0-5.1,0-7.7,0c-2.6,0-3,0.6-2.5,3.1c0.5,2.4,1,4.7,1.4,7.1c-3.1,1.3-6,2.5-9,3.7c-1-2.4-2-4.9-3-7.2c-0.7-1.5-1.7-1.7-3-0.8c-0.4,0.3-0.8,0.7-1.2,1.1c-3.5,3.4-7,6.8-10.6,10c-2.9,2.5-2.6,3.8,1,5.2c1.9,0.7,3.6,1.7,5.3,2.6c-1.6,3.7-3.1,7-4.6,10.4c-2.5-0.5-4.8-1-7.2-1.5c-2.2-0.4-2.9,0-2.9,2.2l0,16.5c0.1,1.5,1.6,2.1,3,1.6c1.6-0.5,3.2-1.2,4.8-1.9c0.7-0.3,1.5-0.5,2-0.7c1.4,3.5,2.7,6.7,4,10.1c-2.1,0.9-4.2,1.8-6.4,2.7c-2.6,1.1-2.8,2-0.8,4.1c3.5,3.7,7.1,7.2,10.4,11c2.2,2.5,4,3.3,5.1-1.2c0.5-1.9,1.2-3.8,1.8-5.6C31.4,78.4,35,80,39,81.9c-0.4,2.2-0.9,4.5-1.4,6.8C37,91.4,37.5,92,40.4,92c2.5,0,4.9,0,7.4,0c2.9,0,4.9,0,7.4,0c2.9,0,3.3-0.6,2.8-3.4c-0.5-2.3-0.9-4.6-1.4-6.8c3.9-1.8,7.5-3.5,11.4-5.3c0.6,1.8,1.3,3.6,1.8,5.6c1.1,4.5,2.8,3.8,5.1,1.2c3.3-3.8,6.9-7.3,10.4-11c2-2.1,1.8-3-0.8-4.1c-2.1-0.9-4.3-1.8-6.4-2.7c1.3-3.4,2.6-6.7,4-10.1c0.6,0.2,1.3,0.4,2,0.7c1.6,0.6,3.2,1.3,4.8,1.9c1.5,0.5,3-0.1,3-1.6L91.8,39.9z M48,61.5c-0.1,0-0.2,0-0.2,0c-0.1,0-0.1,0-0.2,0C40,61.4,34,55.4,34,47.9c0-7.6,6.1-13.6,13.7-13.6c7.8,0,13.7,6,13.7,13.6C61.5,55.4,55.5,61.4,48,61.5z"
        },
        {
            name:"shoppingcart",
            picpath:"M88.2,21.4c-19.3,0-42.7,0-62.1,0l-1-8.8c-0.1-1-0.7-2.6-4.1-2.7H8.3C5,10,4,11,4,13v0.5C4,15.6,5.3,18,8.3,18h6.6c0.6,4,1.7,10.9,2.3,15.3c1.4,10.5,3.4,26,4.8,36.4c0.2,1.6,0.4,2.8,1,3.3c0.7,0.9,1.7,1.9,2.9,1.9h0.2c0,0,0-0.1,0,0.1c0,6.2,5,11,11.1,11s11.1-4.7,11.1-10.9c0-0.2,0-0.2,0-0.2H51h5.2c0,0,0-0.1,0,0.1c0,6.2,5,11,11.1,11s11.1-4.7,11.1-10.9c0-0.2,0-0.2,0-0.2h1.4c2,0,4-3,3.9-5.3l0-1.1c0-2.1-1.4-5.1-4.2-5.2l-47.7-0.3c-0.1-1-0.4-2.9-0.6-3.8c1.2,0,50.3,0.3,50.9,0.2c1.5-0.1,2.8-0.9,3-2.4c0.2-1,4.4-21.3,6.5-29.5C92.5,24.5,91.2,21.4,88.2,21.4z M86.3,32.3c-0.2,1.4-0.6,2.7-0.9,4.1c-0.9,4.2-1.9,8.3-2.8,12.5c-0.1,0.6-0.3,1.3-0.5,1.9c-0.5,1.3-1.5,1.9-2.6,1.7c-1.2-0.2-1.8-1.2-1.8-2.8c0.1-0.4,0.2-1.1,0.3-1.7c1.1-4.8,2.1-9.6,3.2-14.4c0.2-0.8,0.3-1.6,0.6-2.4c0.4-1.2,1.5-1.9,2.6-1.7C85.7,29.8,86.5,30.9,86.3,32.3z"
        },
        {
            name:"chat",
            picpath:"M15.8,70.5c-2.7,0-5,0-7.3,0c-3,0-3.7-0.7-3.7-3.5c0-15.6,0-31.2,0-46.8c0-3.1,0.7-3.6,4.1-3.7c13.7,0,27.4,0,41,0c12.2,0,24.5,0,36.7,0c0.7,0,1.5,0,2.2,0c1.6,0.2,2.4,1,2.5,2.5c0.1,0.6,0,1.2,0,1.8c0,15.1,0,30.2,0,45.3c0,0.4,0,0.9,0,1.3c-0.1,2.2-0.9,3-3.4,3.1c-0.6,0-1.3,0-1.9,0c-13.2,0-26.5,0-39.7,0c-1.7,0-3.2,0.4-4.6,1.2c-9.5,5.2-19,10.4-28.5,15.6c-0.3,0.2-0.6,0.4-0.9,0.5c-1.7,0.8-2.8,0.8-3.7-0.1c-1-1-0.8-2.2-0.2-3.3c2-3.7,4.1-7.5,6.1-11.2C15,72.3,15.3,71.6,15.8,70.5z M44.8,51.5c7.8,0,15.6,0,23.3,0c0.7,0,1.4,0,2-0.1c0.4-0.1,0.9-0.2,0.9-1c0-0.5-0.5-0.9-0.8-1c-0.6-0.2-1.2-0.1-1.9-0.1c-15.6,0-31.3,0-46.9,0c-1,0-2.6-0.2-2.6,1.1c0,1.4,1.6,1.1,2.7,1.1C29.3,51.6,37.1,51.5,44.8,51.5z M38.5,38.1c-5.4,0-10.9,0-16.3,0c-0.5,0-1.1,0-1.6,0c-0.8,0-1.8,0-1.8,1c-0.1,1.1,0.9,1.1,1.7,1.2c0.4,0,0.7,0,1.1,0c11.3,0,21.7,0,33,0c0.5,0,1.9,0,2.3,0c0.7-0.1,1.2-0.3,1.2-1c0-0.8-0.6-1.2-1.4-1.2c-0.6,0-1.3,0-1.9,0C49.4,38.1,44,38.1,38.5,38.1z M33.6,28.3c4.4,0,8.9,0,13.3,0c0.9,0,2.1,0.1,2.1-1.1c0.1-1.4-1.2-1.2-2.2-1.3c-0.1,0-0.2,0-0.3,0c-8.6,0-17.2,0-25.8,0c-1,0-2.6-0.2-2.5,1.2c0,1.4,1.6,1.1,2.6,1.1C25.1,28.3,29.3,28.3,33.6,28.3z"
        },
        {
            name:"music",
            picpath:"M80.1,18.2c0-2.5-0.3-3-2.6-3.9C69,10.9,60.4,7.7,51.9,4.1c-2.6-1.1-7.3-0.4-7.2,3.1c0,0.2,0,33.8,0,50.6c-3-2.1-6.5-3.4-10.4-3.4C24.2,54.5,16,62.9,16,73.3s8.2,18.8,18.2,18.8c14.8,0,18.1-13.9,18.1-19.9c0-1.7-0.4-27.9-0.4-39.4c0-0.9,0-1.8,0-3.3c9,3,17.8,6.6,26.8,9.4c0.6,0.2,1.3-0.3,1.3-0.9C80,36,80.1,24,80.1,18.2z M74,35c0-0.2-0.8-0.3-1.4-0.6c-6.4-2.3-12.5-4.7-18.9-7.1c-1.8-0.7-2.3-0.7-2-3.2C59.4,26.9,67,29.4,74,32C74,33.1,74,33.9,74,35z"
        },
        {
            name:"info",
            picpath:"M91.8,19.3c0-2.4-0.9-3.2-3.2-3.3c-0.5,0-1,0-1.5,0c-26.9,0-51.7,0-78.6,0c-0.6,0-1.2,0-1.7,0c-2.1,0.1-2.8,0.9-2.9,3c-0.1,2.8-0.1,5.6,0,8.5c0.1,2.1,0.8,2.8,2.9,2.9c1.3,0,2.1,0,3.1,0c0,1.2,0,2,0,2.8c0,16.2,0,32.3,0,48.5c0,0.6,0,1.2,0,1.8c0.1,1.4,0.9,2.2,2.2,2.4c0.6,0.1,1.2,0,1.7,0c22.4,0,45.8,0,68.2,0c0.5,0,1,0,1.5,0c1.5-0.2,2.2-0.9,2.3-2.5c0-0.7,0.1-1.4,0.1-2.1c0-15.8,0-31.6,0-47.4c0-1,0-2,0-3.5c2,0,1.4,0,2.9,0c2.2-0.1,2.9-0.8,2.9-3.2C91.9,24.6,91.9,22,91.8,19.3zM78.8,59.4c0,0.3,0,0.5,0,0.8c-0.1,2-0.7,2.9-2,2.9c-1.3,0-1.9-0.9-1.9-3c0-2.3,0-4.6,0-7.3c-0.9,0.7-1.4,1.1-1.9,1.5c-3.2,3-6.3,6.1-9.5,9.1c-1.9,1.8-2.4,1.8-4.3-0.1c-1.9-1.9-3.8-3.8-5.8-5.8c-0.6,0.5-1.1,0.8-1.6,1.3c-2.7,2.5-5.3,5.1-8,7.7c-1.9,1.8-2.5,1.8-4.3-0.2c-1.7-1.9-3.4-3.7-5.2-5.8c-1.4,1.4-2.7,2.6-4.1,3.9c-2.3,2.2-4.6,4.4-6.9,6.6c-0.5,0.5-1,1-1.5,1.3c-0.8,0.4-1.6,0.2-2.2-0.5c-0.6-0.7-0.7-1.6-0.2-2.4c0.4-0.6,0.9-1,1.4-1.5c3.9-3.7,7.7-7.5,11.6-11.2c1.8-1.7,2.5-1.7,4.1,0.1c1.8,1.9,3.5,3.8,5.4,5.9c2.4-2.3,4.6-4.4,6.8-6.5c0.7-0.6,1.3-1.3,2-1.9c2.5-2.4,2.8-2.4,5.2,0c1.8,1.8,3.6,3.5,5.5,5.5c3.5-3.3,6.8-6.5,10.2-9.8c-0.1-0.2-0.2-0.4-0.3-0.6c-1.9,0-3.8,0-5.6,0c-0.6,0-1.2,0-1.7,0c-1.2-0.1-1.9-0.7-1.9-1.9c0-1.2,0.7-1.9,1.8-2.1c0.5-0.1,1-0.1,1.5-0.1c3.4,0,6.8,0,10.2,0c2.8,0,3.4,0.6,3.4,3.4C78.8,52.2,78.8,55.8,78.8,59.4z M82.8,32H12.7c-0.3,0-0.7-0.2-0.6-1.3c0.1-0.6,0.4-0.7,1-0.7h69.6c0.6,0,1,0.2,1,1.1C83.6,31.7,83.1,32,82.8,32z"
        },
        {
            name:"infoo",
            picpath:"M91.9,18.7c0-1.7-0.9-2.5-2.5-2.7c-0.7-0.1-1.3,0-2,0c-27,0-51.9,0-78.9,0c-0.7,0-1.3,0-2,0c-1.7,0.2-2.5,1-2.6,2.8C4,21.8,4,24.7,4,27.6c0,2,1.2,2.7,3.2,2.8c1.4,0.1-0.3,0,2.7,0c0,1.4,0,2.4,0,3.4v48.1c0,2.7,0.7,4.1,3.1,4.1c22.5,0,46.9,0,69.4,0c3.2,0,3.6-0.5,3.6-3.6c0-16.3-0.1-32.7-0.1-49c0-0.8,0-1.7,0-2.9c2,0,1.7,0.1,3.3,0c1.8-0.1,2.6-0.8,2.6-2.7C92,24.7,92,21.7,91.9,18.7z M35,76.4c0,1.8-1.2,3.6-2.8,3.6h-3c-1.7,0-3.1-1.9-3.1-3.6V59.5c0-1.8,1.1-3.5,2.7-3.5h3c1.7,0,3.2,1.7,3.2,3.5V76.4z M53,76.4c0,1.8-1.3,3.6-3,3.6h-3c-1.7,0-3-1.9-3-3.6V45.7c0-1.8,1.3-2.7,3-2.7h3c1.7,0,3,1,3,2.7V76.4z M70,76.4c0,1.8-1.1,3.6-2.8,3.6h-3c-1.7,0-3.2-1.9-3.2-3.6v-9.5c0.1-2.1,1.5-2.9,3.2-2.9h3c1.7,0,2.7,1.1,2.7,2.9V76.4z M83.4,32H12.3c-0.2,0-0.6-0.4-0.5-1c0-0.6,0.3-1,1-1h70.5c0.6,0,1,0.5,1,1.1C84.3,31.7,83.7,32,83.4,32z"
        },
        {
            name:"building",
            picpath:"M83.7,32.8c-0.7,0-1.3,0-2,0c-9,0-29.1,0-30.4,0c0-1.4,0-17.7,0-24.9c0-0.5,0-1,0-1.6c-0.1-1.1-0.9-2.1-2-2.2c-0.4-0.1-0.9,0-1.4,0c-11.6,0-23.2,0-34.8,0c-3,0-3.3,0.3-3.3,3.4c0,26.6,0,53.3,0,79.9c0,0.8-0.1,1.6,0,2.3c0.1,1.2,0.7,1.9,1.8,2c0.5,0,1,0,1.5,0c14.5,0.1,64.1,0.2,71.5,0.2c0.5,0,1.2-0.4,1.2-1V36c0-0.4-0.3-0.9-0.3-1.3C85.7,33.5,84.8,32.9,83.7,32.8z M27,21c0,0.5-0.4,1-0.9,1H15.7c-0.5,0-0.7-0.4-0.7-1V10c0-0.5,0.2-1,0.7-1h10.5c0.5,0,0.9,0.4,0.9,1V21z M27,41c0,0.5-0.4,1-0.9,1H15.7c-0.5,0-0.7-0.4-0.7-1V30c0-0.5,0.2-1,0.7-1h10.5c0.5,0,0.9,0.4,0.9,1V41zM27,61c0,0.5-0.4,1-0.9,1H15.7c-0.5,0-0.7-0.4-0.7-1V50c0-0.5,0.2-1,0.7-1h10.5c0.5,0,0.9,0.4,0.9,1V61z M39.2,88.4H21.3c-0.5,0-0.9-0.4-0.9-1v-1c0-0.5,0.4-1,0.9-1h17.9c0.5,0,0.9,0.4,0.9,1v1C40.1,87.9,39.7,88.4,39.2,88.4z M39.2,82.4H21.3c-0.5,0-0.9-0.4-0.9-1v-1c0-0.5,0.4-1,0.9-1h17.9c0.5,0,0.9,0.4,0.9,1v1C40.1,82,39.7,82.4,39.2,82.4z M39.2,76.5H21.3c-0.5,0-0.9-0.4-0.9-1v-1c0-0.5,0.4-1,0.9-1h17.9c0.5,0,0.9,0.4,0.9,1v1C40.1,76,39.7,76.5,39.2,76.5z M39.2,70.5H21.3c-0.5,0-0.9-0.4-0.9-1v-1c0-0.5,0.4-1,0.9-1h17.9c0.5,0,0.9,0.4,0.9,1v1C40.1,70.1,39.7,70.5,39.2,70.5z M46,61c0,0.5-0.4,1-0.9,1H34.6c-0.5,0-0.6-0.4-0.6-1V50c0-0.5,0.1-1,0.6-1h10.5c0.5,0,0.9,0.4,0.9,1V61z M46,41c0,0.5-0.4,1-0.9,1H34.6c-0.5,0-0.6-0.4-0.6-1V30c0-0.5,0.1-1,0.6-1h10.5c0.5,0,0.9,0.4,0.9,1V41z M46,21c0,0.5-0.4,1-0.9,1H34.6c-0.5,0-0.6-0.4-0.6-1V10c0-0.5,0.1-1,0.6-1h10.5c0.5,0,0.9,0.4,0.9,1V21z M64,51c0,0.5-0.4,1-0.9,1H52.7c-0.5,0-0.7-0.4-0.7-1V40c0-0.5,0.2-1,0.7-1h10.5c0.5,0,0.9,0.4,0.9,1V51z M64,70c0,0.5-0.4,1-0.9,1H52.7c-0.5,0-0.7-0.4-0.7-1V59c0-0.5,0.2-1,0.7-1h10.5c0.5,0,0.9,0.4,0.9,1V70zM74.9,88.4H57c-0.5,0-0.9-0.4-0.9-1v-1c0-0.5,0.4-1,0.9-1h17.9c0.5,0,0.9,0.4,0.9,1v1C75.8,87.9,75.4,88.4,74.9,88.4z M74.9,82.4H57c-0.5,0-0.9-0.4-0.9-1v-1c0-0.5,0.4-1,0.9-1h17.9c0.5,0,0.9,0.4,0.9,1v1C75.8,82,75.4,82.4,74.9,82.4z M74.9,76.5H57c-0.5,0-0.9-0.4-0.9-1v-1c0-0.5,0.4-1,0.9-1h17.9c0.5,0,0.9,0.4,0.9,1v1C75.8,76,75.4,76.5,74.9,76.5z M81,70c0,0.5-0.3,1-0.8,1H69.7c-0.5,0-0.7-0.4-0.7-1V59c0-0.5,0.2-1,0.7-1h10.5c0.5,0,0.8,0.4,0.8,1V70z M81,51c0,0.5-0.3,1-0.8,1H69.7c-0.5,0-0.7-0.4-0.7-1V40c0-0.5,0.2-1,0.7-1h10.5c0.5,0,0.8,0.4,0.8,1V51z"
        },
        {
            name:"phone",
            picpath:"M73.6,3.9c-0.8,0-1.7,0-2.5,0c-13.6,0-27.1,0-40.6,0c-2.4,0-4.7,0-7.1,0c-2.5,0-2.8,0.4-2.9,2.7c0,0.3,0,0.7,0,1.1c0,26.8,0,53.7,0,80.5c0,0.6,0,1.1,0,1.7c0.1,1.4,0.8,2.2,2.3,2.2c0.7,0,1.3,0,1.9,0c15.6,0,31.2,0,46.8,0c0.5,0,1,0,1.5,0c2-0.2,2.4-0.6,2.5-2.5c0-0.6,0-1.1,0-1.7c0-13.3,0-26.5,0-39.8c0-13.4,0-26.8,0-40.1c0-0.8,0-1.5,0-2.3C75.5,4.6,74.9,3.9,73.6,3.9z M71.8,88.7c-15.8,0-31.6,0-47.6,0c0-27.3,0-54.4,0-81.7c15.9,0,32,0,47.8-0.1L71.8,88.7z M31.4,85.9c11.1,0,22.1,0,33.2,0c4.1,0,5-1,5-5.5c0-11.1,0-20.3,0-31.4s0.1-22.3,0-33.6c0-4.1-1-5.3-4.9-5.3c-11.2,0-22.3,0-33.5,0c-3.8,0-4.9,1.1-4.9,5.3c0,22.4,0,42.8,0,65.1C26.3,84.9,27.3,85.9,31.4,85.9z M48,74.2c2.6,0,4.9,2.1,4.9,4.6c-0.1,2.4-2.3,4.3-5.1,4.2c-2.8-0.1-4.8-2.1-4.7-4.6C43.2,76.1,45.4,74.2,48,74.2z"
        },
        {
            name:"internet",
            picpath:"M3.8,48.5C4,25,21.3,5.3,48.1,3.8C75,5.2,92.3,25.1,92.2,48.1c-0.1,23.4-17.7,42.3-43.8,44.1c-11.9-1-22.9-4.4-31.6-13.1C8.3,70.5,3.9,60.2,3.8,48.5z M27.1,51.2c0.7,4.3,1.4,8.4,2,12.5c0.1,0.9,0.6,1.1,1.4,1.1c4.4,0,8.7,0,13.1,0c0.4,0,0.7-0.1,1.1-0.1c0-4.6,0-9,0-13.5C38.9,51.2,33.2,51.2,27.1,51.2z M69,51.2c-6.1,0-11.9,0-17.6,0c0,4.6,0,9,0,13.6c4.9,0,9.7,0,14.6,0c0.3,0,0.9-0.4,0.9-0.7C67.6,59.9,68.3,55.6,69,51.2z M27.1,44.7c6.2,0,11.9,0,17.6,0c0-4.5,0-8.8,0-13.3c-5,0-9.9,0-14.9,0c-0.2,0-0.6,0.4-0.7,0.7C28.5,36.2,27.8,40.3,27.1,44.7z M68.9,44.7c-0.7-4.5-1.3-8.9-1.9-13.3c-5.4,0-10.5,0-15.6,0c0,4.5,0,8.8,0,13.3C57.1,44.7,62.8,44.7,68.9,44.7z M75.1,51.2c-0.7,4.6-1.3,9-1.9,13.6c3.1,0,6.3,0,9.4,0c0.3,0,0.7-0.4,0.8-0.7c0.6-1.3,1.1-2.7,1.6-4.1c0.9-2.8,1.6-5.7,1.7-8.7C82.7,51.2,78.8,51.2,75.1,51.2z M22.8,64.8c-0.6-4.7-1.1-9.1-1.6-13.6c-3.8,0-7.7,0-11.8,0c0.5,4.6,1.6,9.1,3.7,13.2c0.1,0.2,0.5,0.4,0.7,0.4C16.9,64.8,19.9,64.8,22.8,64.8zM23,31.3c-1.7,0-3.5,0-5.3,0c-1.5,0-3.4-0.5-4.3,0.2c-1.1,0.9-1.5,2.8-2.1,4.3c-1,2.8-1.6,5.7-1.9,8.8c4.1,0,8,0,11.8,0C21.8,40.2,22.4,35.9,23,31.3z M86.6,44.8c-0.2-3.7-1-6.9-2.2-10.1c-1.3-3.3-1.3-3.3-4.8-3.3c-2.2,0-4.4,0-6.4,0c0.5,4.3,1,8.5,1.6,12.7c0,0.3,0.6,0.7,1,0.7c2,0.1,4,0,6,0C83.4,44.8,85,44.8,86.6,44.8z M51.3,24.8c4.4,0,8.7,0,13.2,0c-3.2-6.1-6.3-12-13.2-14.7C51.3,15.2,51.3,20,51.3,24.8z M64.5,71.3c-4.5,0-8.8,0-13.1,0c0,4.8,0,9.6,0,14.5C58.2,83.1,61.5,77.4,64.5,71.3z M44.7,10.5c-6.7,2.7-10.2,8.2-13.1,14.4c4.5,0,8.8,0,13.1,0C44.7,20.1,44.7,15.4,44.7,10.5zM31.6,71.3c3,6,6.3,11.6,13.1,14.2c0-4.9,0-9.5,0-14.2C40.4,71.3,36.1,71.3,31.6,71.3z M31.1,13.4c-5.5,2.9-10.1,6.4-13.8,11.6c2.6,0,4.8,0,7.1,0c0.4,0,0.8-0.5,1-0.8c0.7-1.4,1.3-2.9,2-4.3C28.6,17.7,29.8,15.7,31.1,13.4z M79,24.9c-3.9-4.9-8.2-8.6-13.4-11.1c1.7,3.5,3.3,7,5.1,10.6c0.1,0.2,0.5,0.5,0.8,0.5C73.9,25,76.3,24.9,79,24.9z M65.2,82.3c5.4-2.6,9.9-6.3,13.8-11.1c-2.7,0-5.1,0-7.5,0c-0.3,0-0.7,0.4-0.8,0.7C69.3,75.6,67.5,79,65.2,82.3z M17.3,71.2c3.8,4.9,8.3,8.5,13.6,11.2c0-0.2,0-0.3,0-0.3c-1.8-3.4-3.7-6.9-5.6-10.3c-0.1-0.2-0.5-0.5-0.7-0.5C22.3,71.2,19.9,71.2,17.3,71.2z"
        },
        {
            name:"book",
            picpath:"M73.9,5.1v7.1c0,0.6,0.4,1,0.9,1h5c0.5,0,0.9,0.5,0.9,1V91c0,0.6-0.4,1-0.9,1h-0.6c-14.6,0-29.1,0-43.7,0c-4.1,0-8.2-0.4-12.3-0.7c-0.9-0.1-1.7-0.4-2.6-0.7c-3.5-1.3-4.6-4.6-4.9-8.6c-0.2-2.1-0.2-4.3-0.2-6.4c0-21.7,0-43.3,0-65c0-2.7,1-4.3,2.9-5.1c1.9-0.7,3.9-1.4,5.8-1.4C39,4,67.7,4,73,4.1C73.5,4.1,73.9,4.5,73.9,5.1z M48,48.8c4.4,0,8.7,0,13.1,0c3.2,0,5.6-2.7,5.7-6.1c0.1-3.7,0.1-7.4,0-11.1c-0.1-3.6-2.3-6.3-5.3-6.3c-9-0.1-17.9-0.1-26.9,0c-3.1,0-5.3,2.9-5.3,6.6c0,3.1,0.1,6.2,0,9.3c-0.1,4.9,2.1,7.6,6.1,7.6C39.6,48.8,43.8,48.8,48,48.8z M70.6,8.6c-0.3,0-0.4-0.1-0.6-0.1c-15.4,0-30.8,0-46.2,0.1c-1.3,0-2.5,0.4-3.9,0.9c-0.7,0.3-0.9,0.8-0.7,1.5c0.1,0.5,0.5,1.1,0.8,1.2c2,0.8,3.9,1,5.9,1c14.4,0.1,28.8,0,43.2,0c0.5,0,0.9,0,1.5,0C70.6,11.6,70.6,10.2,70.6,8.6z"
        },
        // *******************************************************
        {
            name:"knife",
            picpath:"M48,92C23.7,92,4,72.2,4,48S23.9,4,48.1,4S92,23.9,92,48.1C92,72.4,72.3,92,48,92z M35.2,49.7c0,1.3,0,2.4,0,3.6c-0.3,9.8-0.6,19.6-1,29.3c0,0.7-0.1,1.4,0,2.1c0.3,1.6,1.6,2.2,3.1,2.2s2.3-0.8,2.4-2.3c0-0.7,0-1.4,0-2.1C39.3,73,39,63.4,38.6,53.9c-0.1-1.5,0-2.9,0-4.3c1.3-0.6,2.4-1,3.4-1.5c2.2-1.3,3.7-3.2,3.7-5.8c0.1-5.6,0-11.3-0.1-16.9c0-0.8,0-2.1-0.9-2.1c-1.7,0.1-1.3,1.7-1.4,2.8c0,4.7,0,9.4,0,14.1c-1.9,0.2-2.8,0.3-2.8-1.6c0-4.1,0-8.3,0-12.4c0-0.9,0.4-2.6-1-2.6s-1,1.6-1.1,2.6c0,3,0,6,0,9c0,1.7,0,3,0,4.9c-1.2,0-2,0.1-2.8,0c0-1.5,0-2.7,0-4c0-3.5,0-6.9,0-10.4c0-1,0.4-2.5-1.6-2.2c-0.7,0.1-0.4,5.5-0.5,8.2s0,5.5,0,8.4c-1.1,0-1.9,0-3,0c0-1.4,0-2.5,0-3.7c0-3.5,0-6.9,0-10.4c0-1,0.3-2.7-1.5-2.6c-0.8,0.4-0.7,1.4-0.7,2c-0.1,5.6-0.1,11.3,0,16.9c0.1,2.9,1.6,5,4.3,6.2C33.4,48.9,34.3,49.3,35.2,49.7zM59,53.7c0,1.6,0,2.6,0,3.6c-0.4,8-0.8,16.1-1.2,24.1c0,0.8-0.1,1.6,0,2.4c0.1,1.3,1,2.1,2.3,2.2c1.4,0.1,2.1-0.8,2.4-2c0.1-0.8,0-1.6,0-2.4c-0.5-18.2-0.9-37.1-1.4-55.3c0-1.1-0.1-3.4-0.1-3.4c-1.1,0.4-2.6,1.4-3.3,2.1c-3.1,2.9-5.5,6.3-6.5,10.4c-1,4.2-1.6,8.6-2.2,12.9c-0.2,1.6-0.6,3.5,0.9,5.2c0.4,0.4,1.4,0.3,1.7,0.3C51.6,53.7,59,53.7,59,53.7z"
        },
        {
            name:"apple",
            picpath:"M37.9,10c7.2,0.1,11.9,3.2,15.7,8.1c2.3-1.6,4.5-3.1,6.7-4.6c0.8-0.5,1.7-1,2.5-1.1c0.6-0.1,1.7,0.4,1.9,0.9c0.2,0.6-0.1,1.6-0.6,2.1c-0.5,0.6-1.4,0.8-2.1,1.2c-4.1,2.3-7.5,5.2-9.9,9.9c1.1-0.4,1.7-0.5,2.3-0.8c8.3-3.4,16.1-2.8,23,3.3c2.6,2.2,4.4,5,5.7,8.1c6,14.6,2.6,30.9-8.4,42.2c-5.8,5.9-12.5,7.3-20.2,6.2c-1.9-0.3-3.9-0.7-5.7-1.5c-2.1-0.9-4-0.8-6,0.1c-2.3,1.1-4.7,1.5-7.2,1.7c-5,0.5-9-1.7-12.4-4.8C14.2,72.9,9.5,62.7,10,50.5c0.3-7.2,2.1-14,6.9-19.7c3.1-3.7,7.2-5.6,11.8-6.5c6.4-1.2,12.2,0.2,17.3,4.2c0.2,0.2,0.5,0.3,0.9,0.4c3.1,1.1,0.1-1.3-0.6-1.9C41,22.8,39.2,16.9,37.9,10z M80.6,50.5c-0.2-1.7,0.1-3.1-1.3-7.8c-0.5-1.6-1.8-2.2-3.1-1.8c-1.3,0.4-2,1.6-1.8,3.2c0.1,0.5,0.3,1,0.4,1.5c2.2,11.1-3,21.5-13.3,26.3c-0.7,0.3-1.4,0.6-1.9,1c-1.1,0.8-1.3,1.9-0.8,3.1c0.5,1.2,1.5,1.8,2.8,1.5c0.8-0.2,1.6-0.5,2.3-0.9C74.5,71.3,79.8,62.5,80.6,50.5z"
        },
        {
            name:"banana",
            picpath:"M62,23.4c-2,0-3.8,0.1-5.7,0c-2.5-0.1-3.1-0.8-3.2-3.5c-0.1-2.1,0-4.1,0-6.2c0.1-2.9,0.7-3.6,3.4-3.6c5.8,0,11.6,0,17.4,0c2.9,0,5.7,0,8.6,0c2.8,0,3.4,0.7,3.5,3.8c0,2,0,3.9,0,5.9c-0.1,2.9-0.7,3.6-3.3,3.7c-1.4,0-2.7,0-4.5,0c0.1,1.6,0.1,3,0.4,4.4c1.5,6.9,1.9,13.8,1,20.9c-0.7,5.7-2.3,11.6-5.1,16.4c-5.2,8.8-12.7,15-21.1,18.5c-5.6,2.1-12.1,2.3-17.9,2.5C25.2,85.4,18.3,83.5,12,75.7c-1.5-1.9-2.4-3.9-1.9-6.5c0.3-1.6,0.5-3.3,1.1-4.8c1.2-3.3,2.4-3.8,5.5-3.2c6.3,1.1,12.7,1.9,18.9-0.1c5.4-1.7,10.4-4.3,14.7-8.8c4.6-4.8,7.5-10.7,9.9-16.9C61.7,31.7,62.4,26.8,62,23.4z M72.1,28c-1.4,0-1.6,1.1-1.6,1.3c0,0.6,0.1,1.2,0.1,1.9c0,5.9-0.1,11.6-1.2,16.8c-0.7,3.4-1.8,7.1-4,9.9c-5.7,7.3-9.4,12.7-19.8,16.4C41,76,36.4,75.1,33.8,75c-7.8-0.2-11.5-2-12-2.1c-0.3-0.1-2.4-0.7-2.9,0.3c-0.8,1.6,0.6,3,1.1,3.2c6.6,3.6,20.3,3.7,25.8,2.2c10.9-3,20-11.2,25.3-21.6c3.5-7.3,3.5-18,3-25.5C74,30.3,74.4,28,72.1,28z"
        },
        {
            name:"carrot",
            picpath:"M75,23c7,1.2,10.4,2.1,10.9,3.1c0.1,0.2,0,0.4-0.1,0.5c-0.6,0.4-1.3,0.5-1.8,0.4c-5-0.5-9.2,1.5-13.6,3.3c-0.2,0.1-0.4,0.4-0.3,0.6c0.2,0.4,0.3,0.8,0.5,1.2c2.4,6.2,1.6,11.8-2.6,17.1c-3.5,4.4-7.7,8.3-12.3,11.8c-4.6,3.6-9.2,7.2-14,10.4c-5.9,3.9-12.1,7.6-18.2,11.1c-2.2,1.3-4.8,2.1-7.3,2.9c-3.4,1.1-5.7-0.4-5.5-3.7c0.1-2.3,0.5-4.5,1.1-6.7c1.9-7.1,4.6-14,8.2-20.5c1.4-2.5,3-5,4.5-7.5c1.3-2,2.7-3.9,4.2-5.6c2.9-3.2,4.9-5.3,7.9-7.9c3.2-2.8,6.8-5.3,10.4-7.7c2.8-1.9,6.3-2.2,9.7-2.1c0.8,0,1.5,0.1,2.4,0.1c0.3,0,0.5-0.1,0.5-0.4c1.1-4.2,1.2-8.3-1.2-12.2c-0.4-0.6-0.7-1.3-0.9-2c-0.1-0.4-0.1-0.7,0.2-1.1c0.6-0.4,1.1,0,1.5,0.2c3.2,2.1,5.5,4.8,6.5,8.3c0.3,1,0.5,2,0.8,3.1c0.1,0.3,0.5,0.5,0.8,0.3c4.7-3.5,10-4.4,16.1-4.1c0.4,0,0.6,0.4,0.5,0.7c-0.2,0.5-0.3,0.8-0.6,1c-1,0.6-2.1,1.1-3.1,1.6c-1.8,0.9-3.8,1.5-5.5,3C74.4,22.4,74.6,22.9,75,23z M30.6,41.9c-0.4,0.1-0.7,0.4-0.9,0.5c-0.4,0.4-0.1,1.2,0.3,1.6c2.1,2.3,4.3,4.6,6.5,6.9c0.6,0.6,1.3,1.1,2.1,0.4c0.7-0.6,0.3-1.3-0.2-1.8c-2.2-2.3-4.4-4.6-6.6-6.9C31.5,42.3,31.2,42,30.6,41.9zM56.9,58.8c0.2-0.1,0.4-0.4,0.3-0.6c-0.2-0.4-0.3-0.7-0.5-0.9c-1.9-2.1-3.9-4.1-5.8-6.1c-0.5-0.5-1.2-1-1.9-0.4c-0.8,0.7-0.4,1.4,0.2,2c1.8,1.9,3.6,3.8,5.5,5.7c0.3,0.3,0.7,0.7,1.1,0.7C56.1,59.2,56.5,59,56.9,58.8z M41.7,33.1c-0.6,0-1,0.4-1,0.7c-0.1,0.4,0,1,0.3,1.4c2,2.2,4.1,4.4,6.2,6.5c0.4,0.4,1.4,0.6,1.8,0.4c1-0.5,0.5-1.3-0.1-1.9c-2-2.1-4-4.2-6-6.3C42.6,33.6,42.3,33.3,41.7,33.1z M15.6,68c-0.5,0.1-0.8,0.3-0.9,0.6c-0.1,0.4-0.2,1.1,0,1.3c1.3,1.5,2.6,2.8,4,4.2c0.5,0.6,1.2,0.8,1.9,0.2c0.7-0.6,0.3-1.2-0.2-1.8c-1.2-1.3-2.4-2.6-3.7-3.8C16.4,68.5,16.2,68.2,15.6,68zM42,69.7c0-0.2,0-0.4-0.1-0.5c-1.4-1.5-2.8-3-4.3-4.5c-0.2-0.2-1-0.1-1.2,0.1c-0.3,0.3-0.5,1.1-0.3,1.3c1.3,1.5,2.6,3,4.1,4.3C40.9,71,42,70.5,42,69.7z"
        },
        {
            name:"coffee",
            picpath:"M91.2,35.4c-0.7-2.8-2.3-4.7-5.2-5.3c-1.7-0.4-3.5-0.6-5.7-0.8c-0.5-0.1-0.9-0.5-1.1-1c-1.7-3.4-3.7-3.6-7-3.6c-3.6,0-7.3,0-10.9,0.1c-0.9,0-1.5-0.8-1.3-1.7c0.5-1.9,2.2-3.2,3.8-4.5c2.7-2.3,3.8-5.2,3.5-8.8c-0.1-1.4-0.1-2.9-0.5-4.2c-0.2-0.7-1.3-1.5-2.1-1.6c-1-0.1-1.7,0.8-1.7,2c0,1.2,0.1,2.4,0.2,3.6c0.3,2.7-0.5,4.9-2.6,6.7c-1.2,1-2.3,2.4-3.1,3.7c-0.7,1.1-0.9,2.2-0.8,3.3c0.1,0.8-0.5,1.5-1.3,1.5c-2.3,0-4.6,0-6.9,0c-1.2,0-1.8-1.5-0.9-2.3l0,0c3.2-2.9,4.4-6.5,4.5-11.4c0-0.1,0-0.2,0-0.2c-0.1-0.7-0.2-2-0.6-3.3C51,5.3,50,4.4,48.7,4.6c-1.4,0.3-1.6,1.3-1,3.8c0.9,4.2,0.7,8.1-2.5,11.6c-1.1,1.1-1.6,2.8-2.2,4.3c-0.1,0.2-0.1,0.3-0.1,0.5c-3.5,0-7.1,0-10.6,0c0-0.2,0.1-0.4,0.1-0.6c0.2-1.9,0.9-3.5,2.6-4.7c2.8-1.9,4.2-6.3,3.7-8.6c0-0.2-0.9-3.3-1.6-5c-0.5-1.1-1.7-1.5-2.7-0.8c-0.5,0.4-0.6,1.5-0.6,2.3c0,0.6,0.5,1.2,0.7,1.8c1.1,3,0.9,5.8-1.9,7.9c-2.2,1.6-2.9,4-3.3,6.5c-0.1,0.4-0.1,0.8,0,1.1c-3.6,0-7.3,0-10.9,0c-5,0-5.7,0.6-6.7,5.5c-0.1,0.4-0.1,0.9-0.2,1.3c-1,7.4-0.7,14.8,0.9,22.1c2.6,12,5.9,17.9,8.1,20.7c0.7,0.9,0.1,2.1-1,2.1c-2,0-4.1-0.3-6.1,0c-1.9,0.3-3.7,2-3.4,5.6c0.3,3,3.2,3.9,6.2,3.9c10.6-0.1,21.2,0,31.7,0c10.7,0,21.4,0,32.1,0c2.1,0,6-0.1,6.4-4.4c0.1-1.1,0.2-2.2-0.3-3c-0.9-1.4-2.5-2.1-4.2-2.1c-2.9,0-5.9,0-8.8,0c-1,0-1.7-1.1-1.2-2c0.5-0.9,1.1-2.1,1.8-3.5c0.3-0.6,0.5-1.2,0.8-1.9c1.2-3.4,2.4-6.8,3.5-10.2c0.2-0.4,0.5-0.8,1-0.9c0.7-0.1,1.4-0.2,2-0.5c5.2-1.8,9.5-4.6,10.5-10.5C92.2,43.2,92.2,39.3,91.2,35.4z M18.6,59.6c-0.2-0.6-0.4-1.3-0.2-1.9c0.1-0.5,0.2-0.9,0.7-1.1c0.3-0.1,1.5,0.2,1.7,0.6c0.6,1,1,2.2,1.6,3.2c2.8,5.6,7.5,8.6,13.6,9.6c0.8,0.1,1.5,0.2,2.3,0.4c1.2,0.3,2,1,1.7,2.3c-0.2,1.2-1.2,1.4-2.3,1.4c-0.2,0-0.4,0-0.7,0C29.2,73.5,21.3,68.3,18.6,59.6z M85.6,48.4c-0.4,1.8-1.8,2.6-3.5,3.4c-0.9,0.4-2-0.3-1.9-1.4c0.3-2.3,0.5-4.3,0.6-6.4c0.1-2.4,0.1-4.7,0-7.1c0-0.8,0.7-1.4,1.5-1.3c2.6,0.3,4.2,1.9,4.2,4.7C86.6,43,86.2,45.7,85.6,48.4z"
        },
        {
            name:"hamburger",
            picpath:"M91.9,47.9c-1-3.8-2.7-6-6.8-6.4c-0.6-0.1-0.8-0.1-1.5-0.1c-0.1-0.5-0.2-1-0.3-1.4c-4.4-21-20.6-29.9-33.4-30.5c-7.9-0.4-15.2,1.6-21.8,6.2C19.5,21.6,14.5,29.5,12.5,40c-0.1,0.5-0.2,0.9-0.3,1.4c-0.7,0-0.7,0-1.3,0.1c-4.1,0.4-5.8,2.6-6.8,6.4c-0.6,2.3,0.7,3.9,3.1,4.1c0.9,0.1,1.9,0.2,2.9,0.2c0.9,0,1.9,0,2.9,0c2.3,7,2.5,14,2.2,21c-0.2,0.2-0.3,0.3-0.4,0.3c-3.7,0.5-4,1-3,4.8c0.4,1.6,0.9,3.2,1.5,4.7c0.7,1.8,2.1,2.8,4,2.9c0.5,0,1,0.1,1.5,0.1c9.7,0,19.4,0,29.1,0c9.7,0,19.4,0,29.1,0c0.5,0,1-0.1,1.5-0.1c1.9-0.1,3.3-1,4-2.8c0.6-1.6,1-3.2,1.5-4.8c1-3.8,0.7-4.2-3-4.8c-0.1,0-0.1-0.1-0.4-0.3c-0.3-7-0.1-14,2.2-21c1,0,2,0,2.9,0c0.9,0,2-0.1,2.9-0.2C91.1,51.8,92.5,50.2,91.9,47.9z M74.5,34c1.2,0,2.3,1.1,2.3,2.3c0,1.2-1.1,2.3-2.3,2.3c-1.3,0-2.2-1-2.2-2.3C72.3,34.9,73.2,34,74.5,34z M67.8,22.3c1.2,0,2.3,1.1,2.3,2.3c0,1.3-1,2.3-2.3,2.3c-1.3,0-2.2-1-2.2-2.3C65.6,23.3,66.6,22.3,67.8,22.3z M63.5,33.6c1.3-0.1,2.3,0.9,2.3,2.2c0,1.3-0.9,2.4-2.1,2.4c-1.2,0-2.3-1-2.4-2.3C61.3,34.8,62.2,33.7,63.5,33.6z M59.3,16.2c1.2,0,2.3,1.1,2.2,2.4c0,1.2-1.2,2.3-2.4,2.3c-1.2,0-2.2-1.1-2.2-2.4C57,17.2,58,16.2,59.3,16.2z M52.5,33.2c1.1,0.1,2.2,1.3,2.2,2.4c0,1.2-1.1,2.3-2.3,2.3c-1.3,0-2.6-1.2-2.5-2.4C49.9,34.3,51.3,33.1,52.5,33.2z M48.4,21.7c1.2,0,2.3,1.2,2.3,2.4c0,1.3-1,2.3-2.3,2.3c-1.3,0-2.2-1-2.2-2.3C46.1,22.7,47.2,21.7,48.4,21.7z M42.4,12.1c1.3,0,2.3,0.9,2.3,2.2c0,1.3-0.9,2.4-2.2,2.4c-1.2,0-2.3-1.1-2.4-2.3C40.2,13.2,41.2,12.1,42.4,12.1z M37.6,32.6c1.3,0,2.2,1.1,2.2,2.4c0,1.3-1.1,2.3-2.3,2.3c-1.2,0-2.2-1.2-2.2-2.4C35.3,33.5,36.3,32.5,37.6,32.6z M29.3,23.6c1.3,0,2.3,0.9,2.4,2.2c0,1.2-1,2.4-2.2,2.5c-1.2,0.1-2.3-1-2.3-2.3C27.1,24.6,28,23.6,29.3,23.6z M19.6,34.5c1.3,0,2.3,1,2.3,2.2c0,1.3-1,2.3-2.2,2.4c-1.3,0-2.3-1-2.3-2.3C17.4,35.5,18.3,34.5,19.6,34.5z M76.4,74c-9.5,0-18.9,0-28.4,0c-9.8,0-18.9,0-28.4,0c-0.1,0-0.2-0.8-0.2-1c0-0.2,0.1-0.6,0.2-0.9c3.3,1.2,6.2,0.9,8.6-1.7c0.6-0.6,1.6-0.8,2.3-0.3c0.5,0.3,0.9,0.5,1.4,0.8c2.7,1.4,5.3,1.8,7.9-0.4c1.9-1.7,2.8-1.7,4.8,0c1.1,0.9,2.4,1.3,3.3,1.3c1.2,0.1,2.3-0.3,3.3-1.3c2-1.7,2.9-1.7,4.8,0c2.5,2.2,5.2,1.7,7.9,0.4c0.5-0.2,1-0.5,1.4-0.8c0.8-0.5,1.7-0.3,2.3,0.3c2.4,2.6,5.3,2.8,8.6,1.7c0.1,0.3,0.2,0.8,0.2,1.1C76.6,73.2,76.4,74,76.4,74z M19.3,63h8.1c-0.7,3-0.6,3-3.7,3c-0.7,0-1.6,0-2.6,0c-0.3,0-0.6-0.1-0.7-0.3C20,64.7,19.3,63,19.3,63z M32.5,63h6.3c-0.8,3-1.1,2.9-4.3,2.7c-0.6,0-1-0.2-1.2-0.7C33,64.3,32.8,64,32.5,63z M44.1,61.4c0.7,0,1.9,0,3.9,0c1.6,0,3.2,0,3.9,0c-0.9,3.6-1,3.7-3.9,3.7C45.1,65.1,45,65,44.1,61.4z M57.1,63h6.3c-0.3,1-0.5,1-0.8,1.8C62.5,65.3,62,66,61.5,66C58.2,66.2,57.9,66,57.1,63z M75.6,65.7c-0.1,0.3-0.4,0.3-0.7,0.3c-1,0-1.8,0-2.6,0c-3.2,0-3,0-3.7-3h8.1C76.7,63,76,64.7,75.6,65.7z M87.7,49.3c-0.9,0.1-1.7,0.1-2.6,0.1c-12.4,0-24.7,0-37.1,0c-12.7,0-24.7,0-37.1,0c-0.8,0-1.7-0.1-2.6-0.1c-0.6,0-1-0.6-0.9-1.2c0.7-3,2-3.9,5-3.9c11.9,0,23.9,0,35.6,0c11.9,0,23.8,0,35.6,0c3,0,4.3,0.9,5,3.9C88.7,48.7,88.3,49.2,87.7,49.3z"
        },

        {
            name:"milk",
            picpath:"M73.3,4.3c0,1.3,0.1,2.4,0,3.4c-0.3,3.4,0.5,6.5,1.9,9.5c1.4,2.8,2.6,5.8,3.7,8.7c0.4,1,0.7,2.1,0.7,3.1c0,17.6,0,35.1,0,52.7c0,3.2,0,3.1-2.8,4.1c-5.6,1.9-11.2,3.7-16.9,5.5c-1.1,0.4-2.3,0.5-3.5,0.5c-12.3,0-24.6,0-36.9,0c-0.6,0-1.1,0-1.7,0c-1.2,0-1.9-0.6-1.9-2c0-0.5,0-1,0-1.5c0-17.9,0-35.7,0-53.6c0-1.5,0.4-2.7,1.2-3.8c3.6-5.2,7.1-10.5,10.7-15.7c1.4-2,2.1-4,2-6.6C29.7,4.5,29.4,4,34.3,4c12.1,0.1,24.2,0,36.3,0C71.4,4,72.2,4.2,73.3,4.3z M70,13.8c-0.9,1.4-1.3,2.1-2,3c-2.9,3.8-5.8,7.7-8.3,11.8c-1.4,2.3-3,3-5.4,2.9c-10.9-0.1-21.8-0.1-32.8,0c-0.9,0-3-0.3-3,0.8c0,1.1,2.2,0.7,3.2,0.7c10.7,0,21.5,0,32.2,0c1.1,0,2.1,0.1,3.3,0.2c0,1.4,0,2.5,0,3.6c0,15.6,0,31.1,0,46.7c0,0.9-0.1,1.8,0,2.7c0.1,0.5,0.1,1.2,0.6,1.3c0.5,0,0.4-0.1,0.6-0.1c0.1-0.8,0.1-2.3,0.1-3.5c0-16.2,0-32.3,0-48.5c0-2,0.4-3.6,1.6-5.2c3.7-5.1,7.3-10.3,11-15.4c0.3-0.4,0.5-0.8,0.8-1.4c0.3-0.6-0.1-1.3-0.7-1.3c-13.5,0-26.6,0-39.6,0c-0.3,0-0.8-0.1-0.8,0.5c0.1,0.7,0.3,0.6,0.3,0.7C44,13.5,56.7,13.7,70,13.8z M42.3,50.1c-0.1,2.1,0.4,4.2-1.1,5.9c-3-2.8-6-2.6-8.3,0.5c-2-1.5-1.4-3.7-1.3-6c-1.7,2.5-1.6,4.4-0.1,7c1.3,2.1,1.1,4.8-0.5,6.6c-1.3,1.6-1.3,2.9,0.4,3.9c3.9,2.2,8,2.2,11.9,0.2c2.1-1.1,2.1-2.9,0.1-4.3c-1.7-1.4-1.6-4-0.8-6.7c0.2-1.4,0.6-2.7,0.7-4.1C43.5,52.1,43.4,51,42.3,50.1z"
        },  
        {
            name:"bread",
            picpath:"M83.5,57.9c-3-5.9-6.6-11.4-10.4-16.8c-5.5-7.8-12.3-14-20.1-19.3c-5.9-4-12.3-7-18.9-9.5c-3.5-1.3-6.9-2.7-10.5-3.8c-5.5-1.6-11.1,0.8-14,5.8c-2.8,4.9-2.2,10.9,1.6,15.2c6.5,7.4,12.9,14.9,19.3,22.4c7.9,9.2,15.7,18.4,23.6,27.5c5.2,6.1,13.1,8.1,20.2,5.3C81.3,82,86,75,86,66.4C86,64.1,85.1,60.9,83.5,57.9z M21.7,30.4c0-0.5-0.1-9.2,6.3-13.6c0.4-0.2,0.7-0.5,1.1-0.6c1.8-1,4-0.9,5.8,0.3l2.8,1.8C30.3,22.8,27.5,23.5,21.7,30.4z M46.5,26.2c1.3-0.6,2.4-0.9,3.7-0.5c0.8,0.2,1.5,0.7,2.1,1.3l3.3,3.1c-7.9,3.3-14.3,10.2-21.1,16.2C34.6,45.7,39.5,29.5,46.5,26.2z M49.9,61.2c0.2-0.5,6.4-16.9,13.8-19.4c0,0,2.6-0.7,4.2,1.1l3.5,4.2C63.1,49.4,57.4,56.1,49.9,61.2z M61.6,76.2c0.2-0.5,5.5-14.3,13-16.2c1.8-0.5,3.5,0.6,4.1,1.4l3.1,4.4C73.5,67.6,69.5,71.7,61.6,76.2z"
        },
        {
            name:"tomato",
            picpath:"M38.7,22c-1.4-3.8-3.6-7.3-6.4-10.4c0.4,0.2,0.8,0.3,1.1,0.5c4,2.3,7.4,5.4,10.7,8.6c1.2,1.2,1.6,1.1,2-0.6c0.5-2.4,0.3-4.9-0.1-7.3c0-0.3-0.1-0.6,0.1-1.1c0.5,0.6,1.3,1.1,1.6,1.8c1.1,2.3,2.2,4.7,3.2,7.1c0.5,1.1,0.7,1.2,1.6,0.3c3-3,6-5.9,9.1-8.8c1-0.9,2.2-1.5,3.4-2.1c-3.1,3.5-5.3,7.5-6.8,12.3c0.5,0,0.9-0.1,1.3-0.1c5.1-0.3,10,0.4,14.6,3c4.4,2.6,7.6,6.5,9.3,11.5c3.3,9.3,3.9,18.8,0.3,28.1c-2.9,7.6-8.2,12.9-15,16.5C61.5,85,54,86.2,46.3,86c-5.7-0.2-11.4-1.2-16.7-3.6c-9.1-4.2-15.9-10.9-18.4-21.5c-2.3-10-1.4-19.8,3.9-28.6c3.3-5.4,8.2-8.4,14-9.4C32.3,22.3,35.5,22.3,38.7,22z M34.1,26.7c-1.8-1.9-11.3,3.4-16.5,13.4c-0.6,1.4-0.9,3-1.1,4.5c-0.1,1.9,1.3,2.6,3,2c0.8-0.3,1.3-1.8,1.7-3.3c0.5-1.8,1.2-3.4,2.3-5.4C26.7,32.2,36,29.4,34.1,26.7z"
        },
        {
            name:"wine",
            picpath:"M50.5,41.7c0,13.3,0,26.5,0,39.7c3,0.3,5,0.5,7.9,1c2.3,0.4,4.5,1.1,6.7,1.7c1.3,0.4,2.4,1.2,2.4,2.6c0,1.3-1,2.2-2.3,2.7c-1,0.4-2.2,0.8-3.3,1.1c-9.8,2-19.7,2-29.5-0.1c-1.4-0.3-2.9-0.9-4.1-1.5c-2-1.1-2.1-3-0.2-4.2c1.3-0.8,3-1.4,4.6-1.7c3.4-0.6,6.9-0.9,10.4-1.3c0.6-0.1,0.1-0.1,0.8-0.2c0-13.3,0-26.6,0-39.9c-1.2-0.2-1.3-0.4-2.5-0.7C25.4,37.4,16.4,21.9,22.4,8.1c0.2-0.5,0.5-1,0.7-1.4C24,4.8,25.4,4,27.9,4c13.4,0.1,26.9,0.1,40.3,0C70.8,4,72,4.9,73,6.9c7.1,13.7-1.8,30.3-18.3,33.9C53,41.2,52.3,41.4,50.5,41.7z M70.8,19c-0.1-0.7-0.1-1.5-0.3-2.2c-0.3-0.8-1-1.3-1.9-1c-0.6,0.2-1.2,0.8-1.5,1.3c-0.2,0.4-0.1,1-0.1,1.5c0,6.9-4.8,12.5-12.2,14.3c-0.6,0.2-1.3,0.2-1.9,0.5c-0.8,0.3-1.4,1-1,1.8c0.3,0.5,1,1,1.6,1.2c0.6,0.2,1.3,0,2-0.2C64.2,34.4,70.7,27.1,70.8,19z"
        },
        {
            name:"juice",
            picpath:"M60.9,91.2c0,0.4-0.4,0.7-0.8,0.7c-1.9,0.1-3.7,0.1-5.4,0.1c-6.1,0-12.2,0-18.2,0c-1.9,0-2.3-0.3-2.4-2.1c-0.6-7.8-1.2-15.5-1.7-23.3c-0.8-10.4-1.5-20.8-2.3-31.2c0-0.1,0-0.2-0.1-0.4c-0.1-0.3-0.4-0.5-0.7-0.6c-0.4,0-0.8-0.1-1.3-0.1c-2-0.1-2.4-0.4-2.4-2.3c0-1,0-1.9,0-2.9c0.1-1.8,0.4-2.2,2.2-2.3c0.5,0,0.9,0,1.4-0.1c0.4,0,0.7-0.3,0.7-0.7c0-0.4,0.1-0.8,0.1-1.1c0.1-2.6,0.3-2.8,3-2.8c2.3,0,4.5,0,6.8,0c1.7,0,3.4,0,5.1,0c0.4,0,0.8-0.3,0.8-0.8v-7.7c0-0.3-0.2-0.6-0.5-0.7c-0.5-0.2-1-0.4-1.5-0.6c-3.6-1.4-7.3-2.7-10.9-4.1c-2.1-0.8-2.8-1.8-2.2-3.2c0.5-1.3,1.7-1.6,3.7-0.8c4.6,1.7,9.3,3.4,13.9,5.1c1.5,0.5,2.1,1.5,2,3c-0.1,2.9,0,5.8,0,8.9c0,0.4,0.3,0.7,0.7,0.8c0.4,0,0.8,0.1,1.3,0.1c3.5,0,6.9,0,10.4,0c2.2,0,2.5,0.4,2.6,2.6c0,0.4,0,0.9,0.1,1.4c0,0.4,0.4,0.7,0.8,0.7c0.9,0,1.7,0,2.5,0c1.4,0.1,1.7,0.4,1.8,1.7c0.1,0.9,0,1.8,0,2.6c0,2.6-0.1,2.8-2.5,3.1c-0.4,0.1-0.6,0.3-0.7,0.7C65.1,53.8,63.1,72.4,60.9,91.2z M52.8,80c0.1,0,0.1,0,0.2,0c3.1-0.1,5.4-1.7,7.6-3.4c0.8-0.6,1-1.5,0.4-2.4c-0.5-0.7-1.4-0.9-2.4-0.3c-0.4,0.2-0.7,0.5-1.1,0.7c-1,0.4-2.1,1.1-3.1,1.1c-4.4,0.2-8.4-0.9-11-5c-0.3-0.5-0.7-1-1.1-1.5c-0.6-0.7-1.2-1.4-2-2c-1.7-1.3-3.7-1.7-5.7-1.1c-0.4,0.1-1,0.8-1,1.2c0,0.4,0.6,0.9,1,1.2c0.2,0.2,0.6,0.2,0.9,0.2c2,0.2,3.3,1.3,4.2,3c0.3,0.6,0.7,1.2,1.1,1.7c1.6,2.1,3.1,4.3,5.9,5.1C48.6,79.2,50.7,79.5,52.8,80z M37.7,48.1c-1.7-0.2-3,0.5-4,1.6c-0.3,0.3-0.4,1-0.2,1.3c0.2,0.3,0.8,0.3,1.3,0.4c0.2,0,0.4-0.1,0.6-0.3c1.4-0.9,2.8-0.6,4.1,0c2.1,1.1,3.9,2.3,4.9,4.6c0.5,1.3,1.3,2.5,2.1,3.6c1.8,2.6,4.4,4.2,7.6,4.5c0.7,0.1,1.5,0.2,2.2,0.3c2.1,0.3,4-0.5,5.8-1.4c0.8-0.4,1.1-1,0.8-1.8c-0.3-0.8-1-1.1-1.8-0.9c-0.5,0.1-1,0.3-1.5,0.5c-3.4,1.1-7.7-0.1-10-2.8c-1.2-1.4-2.1-3-3.1-4.5C44.4,50,41.4,48.5,37.7,48.1z M33.8,25.3c-0.5,0-0.8,0.4-0.8,0.8c0.1,0.9,1,0.8,1.8,0.8c8.6,0,17.2,0,25.8,0c0.2,0,0.5,0,0.7-0.1c0.4-0.1,0.7-0.4,0.7-0.8v0c0-0.4-0.4-0.8-0.8-0.8H33.8z M47.9,31.6C47.9,31.6,47.9,31.5,47.9,31.6c5.8,0,11.7,0,17.5,0c0.4,0,0.8,0.1,1.1,0c0.1,0,0.2-0.1,0.4-0.2c0.3-0.3,0.4-0.8,0.1-1.1c-0.1-0.1-0.2-0.2-0.3-0.2c-0.6-0.1-1.3-0.1-2-0.1c-11,0-22,0-33,0c-0.5,0-1.1,0-1.6,0c-0.6,0-1.3-0.1-1.3,0.8c0,0.9,0.6,0.8,1.2,0.9c0.2,0,0.4,0,0.7,0C36.3,31.6,42.1,31.6,47.9,31.6z"
        },
        {
            name:"water",
            picpath:"M53.7,13.5c0.7,1.8,2,2.8,3.7,3.5c2.3,1.1,4.6,2.2,6.4,4.1c1.1,1.2,1.9,2.5,1.9,4.1c0.1,3,0.1,6.1,0.1,9.1c0,1.5-0.4,2-2,3.6c1.5,1,2,2.5,2,4.2c0,1.9,0,3.8,0,5.7c-0.1,1.7-0.3,3.4-2.1,4.1c0.7,1.7,1.6,3.1,1.9,4.7c0.3,1.7,0.1,3.5,0.2,5.2c0.1,1.7-0.2,3.3-1.7,4.6c1.6,1.4,1.7,3.1,1.7,4.9c-0.1,3.3,0,6.5,0,9.8c0,3.5-1.6,6.5-4,9c-1.1,1.2-2.6,1.8-4.3,1.8c-5.9,0-11.7,0-17.6,0c-3.2,0-5.5-1.6-7.2-4c-1.3-2-2.1-4.1-2.2-6.4c-0.1-3.8-0.1-7.6-0.1-11.4c0-1.6,0.7-2.8,2.1-3.8c-1.7-1.2-2.1-2.8-2-4.5c0-1-0.1-2-0.1-3c-0.1-3.4,0.5-4.6,3.7-6.5c-2.6-1.6-4.1-3.6-3.7-6.7c0.3-2.5-0.6-5.3,2.6-7.2c-2.7-1.1-2.6-3-2.6-5c0-2.8-0.2-5.6,0-8.4c0.1-1.1,0.5-2.4,1.2-3.4c1.4-2.2,3.7-3.6,6-4.9c1.5-0.8,2.9-1.7,3.8-3.3c-0.4-0.1-0.7-0.2-1-0.2c-1.9-0.3-1.9-0.3-2-2c0-1.8,0-3.7,0-5.5c0-1.5,0.3-1.8,1.8-1.8c5.1,0,10.1,0,15.2,0C56.4,4,57,4.5,57,5.7c0,1.7,0,3.5,0,5.2c0,2.1-0.1,2.1-2.3,2.4C54.4,13.3,54.1,13.4,53.7,13.5z M62.6,77.9c-0.2-0.4-0.6-0.5-1-0.2c-0.2,0.1-0.2,0.2-0.2,0.2c-0.1,0.7-0.2,1.5-0.3,2.2c-0.6,4-2.8,6.1-7.1,6.5c-0.4,0-0.4-0.1-1.2,0.1c-0.5,0.3-1.1,0.7-1.2,1.2c-0.1,0.8,0.6,0.9,1.3,0.9c5.8,0.4,10.2-4.2,10-10C62.9,78.4,62.7,78.1,62.6,77.9z"
        },
        // *********************************************
        {
            name:"boy",
            picpath:"M64.4,89.7c-1.5-1.4-3.1-2.7-4.6-4.1c-0.6-0.5-0.9-1.1-0.9-1.9l0-4.5l0-14.2c0.7,0,1.8,0,3.4,0c3.1,0,3.7-0.8,3-3.3c-1.6-5.2-3.2-10.3-5.1-15.4c-1.5-4.1-4.8-6.5-9.5-7.9c5.3-1.3,9.2-3.8,11.9-8c2.7-4.3,3.3-9.1,2-13.9C62.5,9.3,55.4,4,47.9,4H48v0v0c-8,0-14.5,5.3-16.5,12.5c-1.3,4.9-0.8,9.6,1.9,13.9c2.7,4.3,6.6,6.7,11.9,8c-4.7,1.4-8,3.8-9.5,7.9c-1.9,5.1-3.5,10.2-5.1,15.4c-0.8,2.5-0.2,3.3,3,3.3c1.6,0,2.7,0,3.4,0l0,14.2l0,4.5c0,0.7-0.3,1.4-0.9,1.9c-1.6,1.3-3.1,2.7-4.6,4.1C31,90.3,30.3,91,30.8,92l15.7,0c0.1-4.2,0.1-8.4,0.1-12.7c0-2.8,0-5.6,0.1-8.4c0.5,0,0.9,0,1.3,0c1,0,0.9,0,1.4,0c0.1,2.8,0.1,5.6,0.1,8.4c0,4.3,0,8.5,0.1,12.7l15.7,0C65.7,91,65,90.3,64.4,89.7z M62.3,60.5c1,0,1.9,0.8,1.9,1.9c0,1.1-0.8,1.9-1.9,1.8c-1.1,0-1.9-0.8-1.9-1.9C60.4,61.3,61.2,60.5,62.3,60.5z M33.8,64.2c-1.1,0-1.9-0.8-1.9-1.8c0-1,0.8-1.9,1.9-1.9c1,0,1.9,0.8,1.9,1.9C35.6,63.4,34.8,64.2,33.8,64.2z M47.9,10.6c-1.9,5.9-5.4,9.6-10.7,11.9c-1.7,0.7-5.1,1.6-5.2,0.9c-0.2-1.1,0.5-1,1.2-1.1c6.6-1,12.2-6,13.7-11.7c0.3-1.3,0.4-2.7,0.5-4.1c0.1-0.5,0.2-1,0.6-1c1,0,0.6,0.4,0.7,1c0.2,1.4,0.2,2.8,0.6,4.1c1.5,5.7,7.1,10.8,13.7,11.7c0.6,0.1,1.4,0,1.2,1.1c-0.1,0.7-3.6-0.1-5.3-0.9C53.4,20.3,49.9,16.6,47.9,10.6z"
        },
        {
            name:"girl",
            picpath:"M65.1,90.4C65.1,90.3,65.1,90.3,65.1,90.4c-0.1-0.2-0.1-0.2-0.2-0.3c-0.1-0.2-0.3-0.4-0.5-0.5c0,0,0,0,0,0c-0.1-0.1-0.2-0.2-0.4-0.3c-1.5-1.3-3-2.7-4.4-4c-0.4-0.5-0.7-1-0.7-1.6l0-14.2c0.2-0.1,0.4-0.1,0.6-0.2c1.1-0.5,2.2-0.9,3.3-1.4c0.6-0.3,1.2-0.8,1.7-1.2c1.1-1.1,1.1-2.4,0.2-3.6C64,61.7,63,60.4,62,59.2c-1.8-2.4-3.6-4.9-5.4-7.3c-0.2-0.3-0.4-0.5-0.6-0.8c1.1-2.7,1.1-5.4-0.2-8c-1.3-2.5-3.4-4.1-6.1-4.9c0.5-0.1,1-0.2,1.5-0.3c1.1-0.4,2.3-0.7,3.4-1.2c0.6-0.2,1.1-0.4,1.4-0.2c0.5,0.5,3.7,5.2,4.1,5l0.1-9.1c1.9-2.3,3.2-5,3.8-8c1.7-8.9-4-17.9-12.7-19.9c-1.1-0.3-2.5-0.5-3.5-0.5c-1.1,0.1-2.3,0.3-3.4,0.5c-8.7,2.1-14.3,11-12.6,19.9c0.6,3,1.9,5.6,3.8,8l0.1,9.1c0.4,0.2,3.6-4.4,4.1-5c0.4-0.1,0.9,0,1.4,0.2c1.1,0.5,2.3,0.8,3.4,1.2c0.5,0.2,1,0.2,1.5,0.3c-2.7,0.8-4.8,2.4-6.1,4.9c-1.3,2.6-1.3,5.3-0.2,8c-0.2,0.3-0.4,0.6-0.6,0.8c-1.8,2.4-3.6,4.9-5.4,7.3C33,60.4,32,61.7,31.1,63c-0.9,1.2-0.8,2.5,0.2,3.6c0.5,0.5,1.1,0.9,1.7,1.2c1.1,0.5,2.2,0.9,3.3,1.4c0.2,0.1,0.4,0.2,0.6,0.2l0,14.2c0,0.6-0.3,1.2-0.7,1.6c-1.5,1.3-3,2.7-4.4,4c-0.1,0.1-0.2,0.2-0.4,0.3c0,0,0,0,0,0c-0.2,0.2-0.4,0.3-0.5,0.5c0,0.1-0.1,0.1-0.1,0.2c0,0,0,0.1-0.1,0.1c0,0,0,0.1,0,0.1c-0.3,0.4-0.4,0.5-0.1,1.5H32c0.2,0,0.4,0,0.6,0c4.1,0,8-0.1,12.1-0.1l1.4-0.1c0,0,0,0,0-0.1c0,0,0,0,0,0c0-7,0-13.8,0-20.8c0,0,1.3,0,1.9,0c1,0,2.1,0,2.1,0c0,7,0,13.8,0,20.8c0,0,0,0,0,0c0,0,0,0,0,0.1l1.4,0.1c4.1,0,8,0.1,12.1,0.1c0.2,0,0.4,0,0.6,0h1.3c0.3-1,0.1-1.1-0.1-1.5C65.2,90.5,65.2,90.4,65.1,90.4zM42.6,56c-1,0-1.8-0.8-1.8-1.8c0-1,0.8-1.9,1.8-1.9c1,0,1.8,0.8,1.8,1.9C44.4,55.2,43.6,56,42.6,56z M47.9,10.1c-0.1,0.3-0.2,0.5-0.3,0.8c-1.4,4.2-2.9,6.6-6.9,9.8c-1.4,0.8-2.4,1.3-3.8,1.9c-1.3,0.4-2.4,0.5-3.9,0.5c-0.5,0-0.7-1.1-0.2-1.1c4.5-0.2,7.1-1.9,9.9-5.1c3-3.5,4.6-6.8,4.6-10.7c0-0.4,0.3-0.5,0.6-0.5c0.5,0,0.7,0.2,0.7,0.5c0,3.9,1.6,7.2,4.6,10.7c2.8,3.3,5.5,5,10,5.1c0.6,0,0.3,1.1-0.2,1.1c-1.5,0-2.6-0.1-3.9-0.5c-1.5-0.6-2.5-1.1-3.8-1.9c-4-3.2-6.1-6.7-7.1-9.8C48.1,10.6,48.1,10.4,47.9,10.1z M53.4,56c-1,0-1.8-0.8-1.8-1.9c0-1,0.8-1.9,1.8-1.9c1,0,1.8,0.8,1.8,1.9C55.3,55.2,54.5,56,53.4,56z"
        },
        {
            name:"oldman",
            picpath:"M63,50c-0.7,2.2-3,2.3-5,0.8c-0.1-0.1-0.4,0-0.4,0.2c-0.1,1.5-0.3,2.8-0.3,4.1c0,5.3,0,10.7,0,16c0,2.4,0,2.5-2.4,3c-0.1,0-0.2,0.1-0.2,0.2c0,3,0,6.1,0,9.2c0,0.5,0.5,1.2,1,1.6c2,1.7,4.1,3.3,6.2,5c0.5,0.4,1,0.5,1,1.4c0,0.1,0,0.6-0.1,0.6l-20.3,0c-0.1,0-0.2-0.1-0.2-0.2c-0.1-0.5-0.1-6.5-0.2-8.9c0-1.6,0.1-1.8-0.4-1.8c-0.2,0-0.3,0-0.4,0c-0.3,0-0.4,0.1-0.4,1.2c-0.1,2.3,0,4.5,0,6.8c0,0.7,0,1.7,0,2.6c0,0.1-0.1,0.2-0.2,0.2c-1.2,0-2.3,0-3.5,0c-1.2,0-2.4-0.1-3.8-0.1c-0.1,0-0.2-0.1-0.2-0.2c-0.1-3-0.1-5.9-0.2-8.8c0-2.9,0-5.7,0-8.6c0-0.1-0.1-0.2-0.2-0.2L31,73.8c-0.4-0.1-0.6-0.4-0.6-0.5c0-0.6,0-9.2,0-21.3c-0.1-7,3.3-11.9,10.1-14.1c0.2-0.1,0.4-0.2,0.9-0.5c-5.6-2.8-9.3-7-10.4-13.1c-0.7-3.9-0.1-7.6,1.7-11c3.7-6.9,11.9-10.8,19.4-8.7c7.6,2.1,13,7.9,13.2,16.7c0.2,8.4-5.2,14.7-15,17.3c-0.2,0.1-0.2,0.3-0.1,0.4c0.4,0.3,0.8,0.6,1.2,0.9c1.7,1.2,3.2,2.7,4.1,4.5c0.9,1.9,2.3,2.4,4.3,2.2c2.1-0.3,3.7,0.5,4.8,2.2c0.5,0.8,0.8,1.8,0.8,2.8c0,12.8,0,25.6,0,38.4c0,0.8,0,2.2-0.9,2.2c-0.9,0-0.8-1.4-0.8-2.1c0-12.4,0-24.7,0-37.1c0-0.9,0.2-1.9-0.3-2.9C63.3,49.8,63.1,49.8,63,50z M61.4,12.4c-1.4-1-5.4-4.1-8.6-6.7c-0.3-0.3-0.8-0.1-1.1,0.2c-2.5,3.6-3.6,5.2-6.4,6.7c-1.7,0.9-3.4,1.7-5.2,2.3c-2,0.7-4.1,1-6.2,1.6c-0.7,0.2-1.6,0.1-1.5,1.3c0,0.1,0.1,0.2,0.3,0.2c3.9-0.6,7.7-1.6,11.3-3.1c3.7-1.6,6.2-4.4,8.5-7.8c0.1-0.1,0.3-0.1,0.4,0c1.7,1.4,6.4,4.9,8,6C61.2,13.3,61.6,12.6,61.4,12.4z M59.6,49.5c-0.1,0.2-0.1,0.3,0,0.6c0.1,0.3,0.5,0.3,0.7,0.3c0.3,0,0.6-0.1,0.6-0.7c0-0.4-0.3-0.6-0.6-0.6C60.2,49.1,59.8,49,59.6,49.5z"
        },
        {
            name:"oldwoman",
            picpath:"M52.2,41.5c-0.5,0.1-0.6,0.8-0.2,1c0.1,0.1,0.3,0.2,0.4,0.3c1.7,1.1,3.2,2.5,4,4.3c0.9,1.9,2.2,2.4,4.1,2.2c2.1-0.3,3.7,0.6,4.7,2.5c0.3,0.7,0.5,1.4,0.5,2.1c0,11.9,0,23.8-0.1,35.7c0,0.4,0,0.8,0,1.2c0,0.6,0,1.2-0.8,1.1c-0.7,0-0.7-0.7-0.8-1.2c0-0.5,0-1.1,0-1.6c0-11.1,0-22.2,0-33.4c0-0.9,0.1-1.7-0.1-2.6c-0.1-0.5-0.8-0.7-1-0.3c-0.6,1.1-0.6,1-1.3,1.2c-0.8,0.3-1.7,0.2-2.4-0.4c-0.3-0.3-0.9-0.1-1,0.4c-0.1,1.2-0.2,2.2-0.2,3.2c0,5.1,0,10.2,0,15.2c0,2.1,0,2.2-2,2.5c-0.3,0-0.5,0.3-0.5,0.6c0,2.8,0,5.7,0,8.5c0,0.5,0.6,1.1,1,1.4c1.9,1.6,3.8,3.1,5.8,4.6c0.2,0.1,0.4,0.4,0.6,0.5c0.4,0.3,0.3,1.3,0.1,1.3c-5.9,0-12.7,0-18.8,0c-0.3,0-0.6-0.3-0.6-0.6c0-2.8,0-5.7-0.1-8.5c0-0.7-1.1-0.8-1.1,0c0,0.1,0,0.2,0,0.4c0,2.1,0,4.1,0,6.2c0,0.6,0,1.4,0,2c0,0.3-0.3,0.6-0.6,0.6h-6c-0.3,0-0.7-0.2-0.7-0.5c0,0,0-10.4,0-15.7c0-0.3-0.3-0.6-0.5-0.7c-0.4-0.1-0.7-0.2-1.1-0.2c-0.2,0-0.4-0.2-0.4-0.4c-0.1-0.3-0.1-0.6-0.1-0.8c0-6.8,0-13.7,0-20.5c0-0.6,0.1-1.2,0.2-1.9c1-5.1,4-8.5,9-10.1c0.3-0.1,0.7-0.2,1-0.3c0.1,0,0.2-0.2,0.3-0.3c-8-3.8-11.8-11.7-9.2-20.6c0.1-0.2,0-0.5-0.2-0.6c-3.3-2.5-4.9-5.4-3.5-9.6C31.8,6.3,34.4,4.3,38,4c4.3-0.3,7.1,1.3,8.9,5.1c0.1,0.2,0.3,0.3,0.6,0.3C52.6,9,57.2,10.3,61,14c2.9,2.9,4.5,6.4,4.8,10.4c0.3,4.4-1,8.3-3.9,11.6C59.4,39,56.1,40.7,52.2,41.5z M43.8,10.5c-3.8,0.2-7.6,4.1-7.3,7.7C37.9,14.4,40.5,12.1,43.8,10.5z M61.6,52.3c0-0.3,0-0.8-0.7-0.8c-0.4,0.1-0.8,0.4-0.5,0.9c0.2,0.2,0.2,0.2,0.4,0.3C61.3,52.9,61.5,52.7,61.6,52.3z"
        },
        {
            name:"man",
            picpath:"M62.6,90.6c-0.8-0.7-2.2-1.5-2.6-1.9c-1.3-0.9-2.8-1.8-3.4-3c-0.3-0.8-0.3-3.1-0.3-4.6c0-4.4,0.1-14.8,0.1-14.8s3.5-0.1,5.2-0.1c0.5,0,1-0.4,1-1l0.1-18.8c0-2.7,0.1-5.5-0.7-8.1c-0.2-0.6-0.5-1.1-0.9-1.6c-1.3-1.6-2.9-3-4.8-3.7c-0.8-0.3-1.6-0.7-2.7-1.2c4.9-2.7,7.9-6.5,8.4-12c0.4-4.5-0.9-8.4-4.2-11.7C55,5.4,51.1,4,48.1,3.9c-3.5,0.1-7,1.5-9.8,4.2c-3.3,3.2-4.7,7.2-4.3,11.7c0.5,5.4,3.5,9.3,8.4,12c-1,0.5-1.8,0.9-2.7,1.2c-2,0.8-3.5,2.1-4.8,3.7c-0.4,0.5-0.7,1-0.9,1.6c-0.9,2.6-0.7,5.4-0.7,8.1l0.1,18.8c0,0.5,0.4,1,1,1c1.7,0,5.2,0.1,5.2,0.1s0.1,10.4,0.1,14.8c0,1.6,0.1,3.9-0.3,4.6c-0.6,1.2-2.1,2.1-3.4,3c-0.5,0.3-1.8,1.2-2.6,1.9C33.2,90.8,33,92,33.8,92c0.2,0,11.8,0,11.8,0c1.5,0,1.6-0.1,1.6-1.7l0-15.7c0-0.4,0.5-0.6,0.9-0.6c0,0,0.8,0.2,0.8,0.6l-0.1,15.7c0,1.6,0.1,1.7,1.6,1.7c0,0,11.7,0,11.8,0C63,92,62.8,90.8,62.6,90.6zM43.9,57.5c-0.9,2.2-1.9,4.4-2.9,6.7c-0.2,0.6-0.5,1.1-1.6,0.8c1.3-2.9,2.6-5.7,3.8-8.4c0.1-0.3,0.5-0.4,0.8-0.2C44.3,56.5,44,57.2,43.9,57.5z M48.1,44.9c0,0-0.1-0.4-0.1-0.4v-0.1c0,0-0.1,0.5-0.1,0.5C47,41.2,46.1,38,45.2,34c1,0,2,0,3,0c1,0,1.7,0,2.7,0C49.9,38,49,41.2,48.1,44.9z M55,64.2c-1-2.2-1.9-4.4-2.9-6.7c-0.1-0.3-0.4-1-0.2-1.2c0.3-0.2,0.7-0.1,0.8,0.2c1.3,2.8,2.5,5.6,3.8,8.4C55.5,65.3,55.3,64.7,55,64.2z"
        },
        {
            name:"woman",
            picpath:"M56.9,54c1.6-3.1,3.1-5.9,5-9.3c1.5-2.7,1.4-6-0.7-8.2c-1.6-1.7-3.5-2.9-5.7-3.6c-0.8-0.2-1.5-0.6-2.5-0.9c1.4-1,2.7-1,4-1c1.2,0,2.3,0,3.5-0.1c0.7-0.1,1.1-0.7,0.8-1.4c-1.2-2.4-0.5-4.7,0.2-7C63.8,14.1,58.6,5.5,50,4.2C49.3,4.1,48.2,4,48.2,4c-0.6,0-1.3,0-2,0.1c-8.7,1.3-14,10-11.6,18.2c0.7,2.3,1.4,4.6,0.2,7c-0.3,0.7,0.1,1.3,0.8,1.4c1.1,0.1,2.3,0.1,3.5,0.1c1.3,0,2.6,0,4,1c-1,0.4-1.7,0.7-2.5,0.9c-2.2,0.7-4.1,2-5.7,3.6c-2.1,2.2-2.2,5.5-0.7,8.2c1.9,3.4,3.3,6.3,5,9.3c-1.6,2.9-3.1,5.5-4.5,8.3c-0.5,0.9-1.1,1.7-1.1,2.7c0,0.1,0.1,0,0.2,0H40c0,0,0,13.4,0.1,19.3c0,0.8-0.3,1.5-0.9,2c-1.8,1.3-3.5,2.7-5.2,4c-0.3,0.2-0.7,1.6,0.5,1.5L46.2,92c0.9,0,1.3-0.4,1.3-1.1l0-15.2c0,0,0-0.9,0.6-0.9c0.6,0,0.5,0.9,0.5,0.9l-0.1,15.2c0,0.7,0.4,1.1,1.3,1.1l11.7,0c1.2,0,0.8-1.3,0.5-1.5c-1.7-1.3-3.5-2.7-5.2-3.9c-0.6-0.5-0.9-1.3-0.9-2.2C55.9,78.4,56,65,56,65h6.3c0.1,0,0.3,0.2,0.2,0c-0.1-1.1-0.7-1.9-1.1-2.9C60,59.3,58.5,57,56.9,54z M42,46.9L42,46.9c-0.3,0.1-0.6,0-0.7-0.2l-5-9.4c-0.1-0.3,0-0.6,0.2-0.7l0,0c0.3-0.1,0.6,0,0.7,0.2l5,9.4C42.4,46.4,42.3,46.7,42,46.9z M54.7,46.7c-0.1,0.3-0.5,0.4-0.7,0.2l0,0c-0.3-0.1-0.4-0.5-0.2-0.7l5-9.4c0.1-0.3,0.5-0.4,0.7-0.2l0,0c0.3,0.1,0.4,0.5,0.2,0.7L54.7,46.7z"
        },
        {
            name:"touch",
            picpath:"M77.1,40.5c-2.2-1.2-5-1.1-7.2,0.3c-0.3,0.2-0.6,0.4-1,0.7c-0.7-1.7-1.7-3.1-3.2-4c-1.5-0.9-3.1-1.1-4.8-0.8c-1.7,0.2-3,1.3-4.3,2.5c-2.6-4.6-5-5.6-10.3-3.6c0-0.6,0.1-23.4,0.1-25.2c-0.1-3.6-3.1-6.5-6.7-6.6c-3.7-0.1-6.7,2.6-7,6.3c-0.1,1.3-0.1,2.7-0.1,4.1c0,9.7,0.1,19.4,0.1,29.1c0,0.6,0.2,1.2-0.2,1.8c-0.2-0.1-0.4-0.2-0.5-0.3c-3.9-4.1-7.8-8.1-11.7-12.2c-0.3-0.3-0.7-0.7-1-0.9c-2-1.4-4.3-1.8-6.6-0.8c-2.3,0.9-3.9,2.9-4.3,5.3c-0.4,2.6,0.7,4.7,2.5,6.5c4.4,4.6,8.8,9.2,13.3,13.7c0.8,0.8,1.3,1.8,1.3,2.9c-0.1,7.8,0.2,15.4,0.2,23.4v2.5c0,0.5,0.4,0.9,0.9,0.9h53.8c0.5,0,0.9-0.4,0.9-0.9v-3c0-6.9-0.3-13.9-0.2-20.8c0-4.9-0.1-9.7,0-14.6C80.7,44,79.4,41.9,77.1,40.5z M57.4,79.2c1.1-0.2,2.2-0.3,3.2-0.5c8-1.8,14.2-8.7,14.9-16.8c0-0.4,0-0.9,0.2-1.3c0.1-0.3,0.5-0.6,0.8-0.6c0.3,0,0.6,0.4,0.7,0.7c0.1,0.3,0,0.7,0,1c-0.5,8.8-7.6,16.8-16.5,18.7c-1.1,0.2-2.1,0.3-3.2,0.4c-0.5,0-0.9-0.1-1-0.7C56.5,79.5,56.9,79.2,57.4,79.2z M28.5,60.3c0.1-0.3,0.4-0.6,0.7-0.6c0.3,0,0.7,0.2,0.8,0.4c0.2,0.3,0.1,0.8,0.2,1.2c0.8,9.1,7.9,16.4,17.1,17.5c0.7,0.1,1.4,0.1,2,0.2c0.4,0.1,0.9,0.5,0.9,0.8c0.1,0.6-0.5,0.9-1,0.9c-1,0-1.9-0.1-2.9-0.2c-9.3-1.2-17.2-9.4-17.9-18.7c0-0.2,0-0.3,0-0.6C28.5,60.8,28.4,60.5,28.5,60.3z"
        },
        {
            name:"love",
            picpath:"M80.9,27.4c0-3.2,0.1-6.4,0.1-9.5c0-4.1-3.2-7.3-7.2-7.1c-4,0.1-6.7,3.3-6.7,7.7c0,0.6,0.1,19.2,0,19.9c-1.8-1-3.5-1.8-5.5-1.6c-2,0.2-3.5,1.3-4.8,2.6c-2.6-4.6-5.8-4.7-10.2-3.3c0-0.5,0-24.7,0-25.5c-0.1-3.7-2.9-6.6-6.4-6.8c-3.8-0.2-6.8,2.2-7.4,5.9c-0.1,0.7-0.1,1.5-0.1,2.2c0,10.5,0,21,0,31.5c0,0.6-0.1,1.2-0.1,2.1c-4.1-4.3-8-8.3-11.8-12.3c-0.4-0.5-0.8-0.9-1.3-1.3c-3.9-3.1-9.7-1.2-11,3.6c-0.8,3,0.3,5.3,2.4,7.4c4.5,4.6,8.9,9.2,13.4,13.8c0.8,0.8,1.2,1.9,1.2,3c0,7.7,0.1,15.5,0.1,23.2v2.4c0,0.5,0.4,0.9,0.9,0.9h53.7c0.5,0,0.9-0.4,0.9-0.9l0-2C80.9,70.6,81,58.7,81,46.6 C81,40.2,80.9,33.7,80.9,27.4z M58.1,79.6c0.7-0.1,1.5-0.1,2.2-0.3c8.8-1.7,15.1-8.6,15.9-17.3c0-0.3,0.3-1.7,0.9-1.7c0.6,0,0.8,1.4,0.8,1.4c-0.8,10-8,17.4-16.9,19.2c-1,0.2-1.9,0.3-2.9,0.4c-0.6,0.1-1.1-0.1-1.1-0.8C57,79.8,57.5,79.6,58.1,79.6z M29.2,60.2c0.6,0,0.8,0.5,0.9,1c0.3,1.7,0.5,3.5,1,5.2c2.4,7.5,9.4,12.7,17.3,13.2c0.4,0,0.8,0,1.2,0.1c0.3,0.1,0.7,0.5,0.7,0.8c0,0.3-0.4,0.6-0.7,0.7c-0.4,0.1-0.9,0-1.4,0c-9.5-0.4-18.1-8-19.5-17.4c-0.1-0.8-0.2-1.7-0.3-2.5C28.3,60.7,28.6,60.2,29.2,60.2z"
        },
        {
            name:"good",
            picpath:"M81.4,61c1.7-1.4,2.7-3.5,2.7-5.9c0-2.2-0.9-4.1-2.3-5.5c1.6-1.3,2.6-3.3,2.6-5.5c0-3.9-3.2-7.1-7.1-7.1c-0.1,0-0.2,0-0.3,0c-0.1,0-0.2,0-0.3,0c-1.4,0-14.2,0.1-16.8,0c3.1-4.4,3.8-5.9,5.3-10.1c0.5-1.6,1.1-4,1.2-7.4c0.1-2.3,0-5.5-0.2-8c-0.3-3.4-1.8-5.7-4.2-6.9c-0.2-0.1-0.4-0.2-0.7-0.3c0,0,0,0-0.1,0C60.6,4.1,59.8,4,59,4c-3.3,0-6.1,2.3-6.9,5.3c0,0.1,0,0.2-0.1,0.2c0,0.1,0,0.2-0.1,0.3c-0.2,1-0.2,2,0,3.1c0.2,1.1,0.4,2.3,0.3,3.5c-0.1,3.9-0.6,5.6-3.4,8.8c-1.6,1.8-3.3,3.7-5.2,5.2c-6.1,4.8-12.9,6.8-18,6.9c-0.8,0-3.8,0-13.1,0c-0.5,0-0.9,0.4-0.9,0.9 c0,4.8,0.1,27,0.1,36.7c0,2.8-0.1,6.2-0.1,8.9V85c0,0.5,0.4,0.9,0.9,0.9h59.2c3.6,0,4.6,0,4.6,0c4.3,0,7.8-3.6,7.8-7.8c0-2.2-0.9-4.2-2.3-5.6c1.4-1.4,2.3-3.4,2.3-5.5C84.2,64.6,83.1,62.4,81.4,61z M29,39.9c0.1-0.3,0.5-0.7,0.7-0.7c0.4,0,0.9,0.3,1.1,0.6c0.2,0.4,0.2,0.9,0.2,1.3c0,13.5,0,26.9,0,40.4c0,0.8,0.3,1.7-1,2c-0.8,0.2-1.1-0.4-1.1-2c0-6.7,0-13.5,0-20.2c0-6.6,0-13.2,0-19.8C28.9,40.9,28.9,40.4,29,39.9z M21,73.9c2.7,0,4.8,1.9,4.8,4.3c0,2.4-2.1,4.3-4.8,4.3c-2.7,0-4.8-1.9-4.7-4.4C16.4,75.8,18.4,74,21,73.9z"
        },
        {
            name:"kid",
            picpath:"M67.9,85.6c-2.4-2.4-4.8-4.9-7.1-7.1c0.9-2.6,1.8-4.8,2.7-7.3c0.3,0.5,0.5,1,0.8,1.4c0.9,1.3,2.2,1.7,3.5,1.2c1.4-0.6,2.1-2,1.7-3.6c-0.2-0.6-0.5-1.2-0.8-1.7c-2.3-4.6-4.5-9.3-6.8-13.9c-1.3-2.6-3.1-4.7-5.5-6.2c-0.7-0.4-1.3-0.8-2.3-1.4c6.9-2.3,11.8-6.4,14.6-12.9c2-4.7,1.9-9.5,0.6-14.4C66.6,10.5,58.6,4,47.8,4c-10,0-18.5,6.5-21.1,15.8c-1.4,4.8-1.1,9.7,0.8,14.4c2.7,6.5,7.7,10.5,14.6,12.9c-1,0.6-1.7,1-2.3,1.4c-2.4,1.5-4.3,3.6-5.5,6.2c-2.3,4.6-4.5,9.3-6.8,13.9c-0.3,0.6-0.6,1.1-0.8,1.7c-0.4,1.6,0.3,3,1.7,3.6c1.3,0.5,2.6,0.1,3.5-1.2c0.3-0.4,0.5-0.9,0.8-1.4c0.9,2.5,1.8,4.8,2.7,7.3c-2.3,2.3-4.7,4.7-7.1,7.1c-0.6,0.6-1.2,1.2-1.6,1.8c-0.9,1.4-0.6,2.9,0.7,3.9c1.2,0.9,2.6,0.9,3.7-0.1c0.3-0.3,0.6-0.7,0.9-1c2.6-2.7,5.1-5.3,7.7-8c2.8,1.5,5.6,2.3,8.2,2.2c2.9,0,5.6-0.7,8.5-2.2c2.6,2.7,5.3,5.3,7.8,8c0.3,0.3,0.6,0.7,1,1c1.2,1,2.6,1,3.8,0.1c1.2-0.9,1.5-2.5,0.7-3.9C69.1,86.8,68.5,86.2,67.9,85.6z M66.9,70.2c0.7,0,1.3,0.6,1.3,1.3c0,0.7-0.6,1.3-1.3,1.3c-0.7,0-1.3-0.6-1.3-1.3C65.6,70.8,66.2,70.2,66.9,70.2z M29.3,72.8c-0.7,0-1.3-0.6-1.3-1.3c0-0.7,0.6-1.3,1.3-1.3s1.3,0.6,1.3,1.3C30.6,72.2,30,72.8,29.3,72.8z M29.3,90.4c-0.7,0-1.3-0.6-1.3-1.3c0-0.7,0.6-1.3,1.3-1.3s1.3,0.6,1.3,1.3C30.6,89.8,30,90.4,29.3,90.4z M59.3,70.3c-3.8,0-7.6,0-11.5,0c-3.8,0-7.6,0-11.3,0c-0.9,0-2.2,0.2-2.2-1.1l13.6-0.1l13.8,0.1C61.7,70.4,60.2,70.3,59.3,70.3z M66.9,90.4c-0.7,0-1.3-0.6-1.3-1.3c0-0.7,0.6-1.3,1.3-1.3c0.7,0,1.3,0.6,1.3,1.3C68.1,89.8,67.6,90.4,66.9,90.4z"
        },
        // *********************************************

        {
            name:"sun",
            picpath:"M88.3,47.2c-3.8,0-7.6,0-11.8,0c-1-5.6-3-10.8-6.9-15.4c2.3-2.4,4.6-4.6,6.8-6.9c1.2-1.3,2.5-2.5,3.7-3.7c1.5-1.6,1.7-2.7,0.8-3.7c-0.9-1-2.1-0.9-3.7,0.7c-3,2.9-5.9,5.9-8.9,8.9c-0.5,0.5-1.1,1-1.8,1.6c-4.8-3.8-9.9-6.5-16.5-7c0-5.6,0-7.5,0-12.8c0-1.1,0-2.2-0.1-3.3c-0.1-1-0.9-1.5-1.9-1.5c-1,0.1-1.8,0.5-1.9,1.5c-0.1,1.1-0.1,2.2-0.1,3.3c0,5.3,0,7.2,0,12.8c-6.7,0.5-11.7,3.3-16.5,7c-0.7-0.6-1.3-1.1-1.8-1.6c-3-3-5.9-5.9-8.9-8.9c-1.6-1.5-2.7-1.7-3.7-0.7c-0.9,1-0.7,2.2,0.8,3.7c1.2,1.3,2.5,2.5,3.7,3.7c2.2,2.2,4.4,4.5,6.8,6.9c-3.9,4.6-5.9,9.8-6.9,15.4c-4.2,0-7.9,0-11.8,0c-0.8,0-3.9,0.4-3.9,2.3c0,1.7,2.9,1.8,4,1.8c0,0,7.9,0,11.6,0c0.5,7,2.7,13,7.3,18.5c-2.7,2.5-5.8,5.4-8.3,7.8c-0.6,0.6-2.5,2.9-1.1,4.2c1.5,1,3.2-0.4,3.9-1.1c2.4-2.4,5.7-5.7,8.3-8.2c4.9,4.3,10.6,6.2,16.8,7.1c0,2.3,0,4.2,0,6.2c0,1.5,0,3.1,0.1,4.6c0.1,1,0.6,1.7,1.6,1.8c1-0.1,1.5-0.8,1.6-1.8c0.1-1.5,0.1-3.1,0.1-4.6c0-2,0-3.9,0-6.2c6.2-0.9,11.8-2.9,16.8-7.1c2.5,2.5,5.9,5.8,8.3,8.2c0.7,0.7,2.3,2.1,3.9,1.1c1.4-1.3-0.4-3.6-1.1-4.2c-2.5-2.3-5.6-5.3-8.3-7.8c4.6-5.5,6.8-11.5,7.3-18.5c3.6,0,11.6,0,11.6,0c1.1,0,4-0.1,4-1.8C92.2,47.6,89.1,47.2,88.3,47.2z M38.5,36.2C32,40.7,29.3,48,31.2,55.8c0.6,2.4,1.2,4.7,3.3,6.3c1.1,0.8,1.5,2,0.4,3.1c-1,1.1-2.3,0.8-3.2-0.1c-1.1-1.1-2.1-2.3-2.8-3.6c-1.6-2.8-2.5-6.9-2.5-10.5c0-6.5,2.7-12,7.2-16.5c0.8-0.8,2-1.4,3-1.9c1.1-0.5,2.2-0.4,2.8,0.8C40,34.6,39.5,35.4,38.5,36.2z"
        },
        {
            name:"cloudy",
            picpath:"M26.8,39.9c4.5-13.3,11.3-17.7,25.8-16.8c3.7-6.3,8.8-10.7,16.1-11.6c5.2-0.6,9.9,0.5,14.2,3.7c5.1,3.8,8,9,8.9,15.5c0.9,6.4-1,12.2-4.3,17.4c2.9,4.4,4.6,9,4.5,14.2c-0.2,8.9-4,15.6-11.3,19.9c-2.7,1.6-5.4,2.4-8.6,2.3c-13.8-0.2-27.6-0.1-41.4-0.1c-3.2,0-6.5,0.3-9.6-0.2C10.3,82.5,3.2,72,4.1,60c0.8-10.9,9.7-19.8,20-20.1C24.9,39.8,25.8,39.9,26.8,39.9z M67.6,42.6c6.9-2.3,11.8,2.3,17.2,5.2c0.8-1.1,1.1-2.1-0.3-2.8c-2.7-1.5-5.2-3.3-8-4.3c-2.3-0.9-4.8-0.9-7.7-1.4c-1.7-7.8-6.2-13.4-13.7-16c-0.7,0.9-1.1,1.7,0,2.3c1,0.6,2,1.2,3,1.8c3.6,1.8,5.9,4.8,7.3,8.7C66.1,38.1,66.8,40.1,67.6,42.6z"
        },
        {
            name:"rainy",
            picpath:"M26.7,39.9c6.4-14.4,12.6-18.3,25.8-16.7c0.8-1.1,1.6-2.4,2.5-3.6c5.7-7.5,15-10.2,23.3-6.8c8.3,3.3,13.8,12,13.6,21.6c-0.1,3.8-0.9,7.5-2.9,10.7c-1.4,2.1-1.3,3.7,0,5.9c5,9.2,3.4,20.3-3.6,27.6c-2.6,2.7-5.8,4.2-8.9,5.7c-0.8,0.4-1.8,0.2-2.7,0.2c-14.3,0-28.7,0-43,0c-2.8,0-5.5,0.3-8.3,0C11.7,83.3,3.7,73,4.2,61.1c0.5-11.4,9.3-20.8,19.9-21.2C25,39.9,25.9,39.9,26.7,39.9z M48.1,53.4C45.8,58.9,43.3,64.1,43,70c-0.1,1.3,0.3,2.9,1,4.1c1.8,3.3,5.1,3.4,7.2,0.4c1.1-1.6,1.8-3.5,1.7-5.5C52.6,64.6,50.5,58.5,48.1,53.4z M67.9,42.2c6.3-0.5,6.3-0.5,12.4,3c1.8,1,3.5,2.1,5.3,3.1c1.2-1.2,1-2.1-0.2-2.7c-3.2-1.8-6.3-3.7-9.6-5.1c-2-0.8-4.4-0.7-6.9-1c-1.7-7.9-6-13.4-13.5-15.9c-0.2,0.6-0.5,1.1-0.5,1.3c3,2.5,6.2,4.3,8.3,7.1C65.4,34.8,66.4,38.7,67.9,42.2z M41.4,41.2c-2.3,2.7-3.7,6.1-4,9.8c0,2.5,1.7,4.1,3.4,4.2c1.5,0.1,3-1.6,3.1-4.2C43.8,47.7,43.1,44.3,41.4,41.2z M53.3,37.3c-1.6,2.3-2.9,5.8-2.6,9.2c0.1,1.6,1.3,2.6,2.7,2.5c1.4-0.1,2.2-1.1,2.4-2.5C56.1,43.1,54.7,39.6,53.3,37.3z"
        },
        {
            name:"snowy",
            picpath:"M87.7,47.6c-0.1,0.2,0,0,0.1-0.2c0.5-1.1,1.1-2.1,1.6-3.2c3.7-8.1,3.4-16-1.5-23.4c-4.8-7.3-11.6-10.4-19.9-9.3c-5.8,0.8-10.4,4-13.9,9c-1.1,1.6-2.1,2.7-4.3,2.3c-9.5-1.5-18.4,4.2-22.1,13.8c-0.3,0.9-0.7,1.9-1.1,3.1c-0.9,0-1.6,0-2.4,0c-11.6,0.3-20.6,10.4-20.4,23C4.1,75,13.5,84.7,25,84.7c15.6-0.1,31.2-0.2,46.7-0.1c3,0,5.6-0.7,8.3-2.1c8.6-4.5,13.4-14.6,11.3-24.7C90.6,54.5,89,51.3,87.7,47.6z M66.9,68.8L66.9,68.8c-0.7,1-2.4,1.4-3.6,0.8l-2.4-1v2.4c0,0.7-0.7,1.3-1.5,1.3S58,71.6,58,70.9v-3.9l-5.9-3c-0.9-0.5-2.1,0.1-2.1,1.1v5.8l4.2,3.4c0.6,0.5,0.7,1.3,0.2,1.8c-0.6,0.5-1.8,0.5-2.3,0L50,74.5v1.5c0,1.2-0.1,2.1-1.5,2.1c-1.3,0-1.5-0.9-1.5-2.1v-1.5l-2.3,1.6c-0.6,0.5-1.8,0.5-2.3,0c-0.6-0.5-0.2-1.3,0.4-1.8l4.3-3.4v-5.8c0-1-1.7-1.6-2.6-1.1l-6.4,3v3.9c0,0.7-0.2,1.3-1,1.3s-1-0.6-1-1.3v-2.4l-2.5,1c-1.1,0.6-2.9,0.2-3.6-0.8l-0.1,0c-0.7-1-0.3-2.3,0.8-2.9l1.9-1l-2.2-1.3c-0.7-0.4-0.8-1.2-0.4-1.7c0.4-0.6,1.3-0.7,2-0.3l3.4,2l6-3.1c0.5-0.3,0.7-0.7,0.7-1.3c0-0.6-0.2-1-0.7-1.3l-6-3.1l-3.4,2c-0.7,0.4-1.5,0.2-2-0.3c-0.4-0.6-0.3-1.4,0.4-1.7l2.2-1.3l-2-1c-1.1-0.6-1.5-1.9-0.8-2.9l0,0c0.7-1,2.5-1.3,3.7-0.8l2.5,1v-2.4c0-0.7,0.2-1.3,1-1.3s1,0.6,1,1.3v3.9l6.4,3c0.9,0.5,2.6-0.1,2.6-1.1v-5.8l-4.4-3.4c-0.6-0.5-0.8-1.3-0.3-1.8c0.6-0.5,1.9-0.5,2.4,0l2.2,1.6v-1.5c0-1.2,0.2-2.1,1.5-2.1c1.4,0,1.5,0.9,1.5,2.1v1.5l2.2-1.6c0.6-0.5,1.6-0.5,2.2,0c0.6,0.5,0.2,1.3-0.3,1.8L50,47.3v5.8c0,1,1.2,1.6,2.1,1.1l5.9-3v-3.9c0-0.7,0.7-1.3,1.5-1.3s1.5,0.6,1.5,1.3v2.4l2.4-1c1.1-0.6,2.7-0.2,3.4,0.8l0.1,0c0.7,1,0.3,2.3-0.8,2.9l-1.9,1l2.2,1.3c0.7,0.4,0.8,1.2,0.4,1.7c-0.4,0.6-1.3,0.7-2,0.3l-3.4-2l-6,3.1c-0.5,0.3-0.8,0.7-0.7,1.3c0,0.5,0.2,1,0.7,1.3l6,3.1l3.4-2c0.7-0.4,1.5-0.2,2,0.3c0.4,0.6,0.3,1.4-0.4,1.7l-2.2,1.3l2,1C67.2,66.5,67.6,67.8,66.9,68.8z M85.6,47.1c-0.2,0.3-0.3,0.6-0.4,0.9c-0.4-0.1-0.8-0.4-1.1-0.5c-2.3-1.3-4.5-2.8-6.8-4c-3.8-2-5.3-2.1-9.6-1.4c-1.7-3.7-2.7-7.6-4.9-10.5c-2.1-2.8-5.4-4.6-8.3-6.9c0.3-1.5,1.2-1.4,2.4-0.8c5.4,2.7,9.4,6.8,11.1,13.1c0.2,0.8,0.6,1.6,1,2.7c6.2-1,11.1,2.4,16,5.7C85.7,45.8,85.9,46.5,85.6,47.1z"
        },
        {
            name:"waterdrop",
            picpath:"M48,91.5c-23.5,0-38.9-21-28.9-39.1c8.2-14.9,16.3-29.9,24.5-44.9c0.4-0.7,0.7-1.3,1.1-2c1.4-2.1,3.5-2.1,5,0c0.4,0.5,0.6,1.1,1,1.7C59.2,22,67.8,36.8,76.5,51.5C87.3,69.9,71.9,91.5,48,91.5z M72.6,62.8c0.3-1.5,1-4.2-1.2-8.2c-0.1-0.1-0.3-0.4-0.4-0.6c-0.8-0.9-2.5-0.5-3.1,0.7c-0.1,0.2-0.1,0.3,0,0.5c1.3,4.3-0.3,8.1-2.2,12c-3,6.1-8.3,9.4-16.1,9.6c-3,0.1-4,0.5-3.9,1.7c0.1,1.2,1.2,1.7,4.1,1.8C61.1,80.4,70.4,74.4,72.6,62.8z"
        },
        {
            name:"snow",
            picpath:"M84.5,63.8l-4.1-2.3l4.6-3.1c1.3-0.9,1.7-2.7,0.8-4.1c-0.9-1.3-2.7-1.7-4.1-0.8l-7,4.7L62.4,51c-1.1-0.7-1.5-1.8-1.5-3c0-1.3,0.4-2.3,1.5-3l12.5-7.2l7,4.7c1.3,0.9,3.2,0.5,4.1-0.8c0.9-1.3,0.5-3.2-0.8-4.1l-4.6-3.1l4.1-2.3c2.3-1.4,3.1-4.4,1.8-6.7l0,0c-1.4-2.3-4-3.1-6.4-1.8L76,26.1v-5.6c0-1.6-1.9-2.9-3.5-2.9S69,18.9,69,20.5v9l-11.9,7c-2,1.1-4.1-0.3-4.1-2.5V20.6l7.9-7.9c1.1-1.1,1.2-3,0-4.1s-3-1.1-4.1,0L53,12.3V8.9C53,6.2,50.9,4,48,4c-2.7,0-5,2.2-5,4.9v3.4l-3.7-3.7c-1.1-1.1-3-1.1-4.2,0s-1.1,3,0,4.1l7.9,7.9V34c0,2.3-2.1,3.7-4.1,2.5l-11.9-7v-9c0-1.6-1.9-2.9-3.5-2.9S20,18.9,20,20.5v5.6l-3.9-2.4c-2.3-1.3-5.2-0.5-6.5,1.8l0.1,0c-1.4,2.3-0.5,5.3,1.8,6.7l4.1,2.3l-4.6,3.1c-1.3,0.9-1.7,2.7-0.8,4.1c0.9,1.3,2.7,1.7,4.1,0.8l7-4.7L33.7,45c1.1,0.7,1.5,1.7,1.5,3c0,1.3-0.4,2.3-1.5,3l-12.5,7.2l-7-4.7c-1.3-0.9-3.2-0.5-4.1,0.8c-0.9,1.3-0.5,3.2,0.8,4.1l4.6,3.1l-4.1,2.3c-2.3,1.4-3.1,4.4-1.8,6.7l0,0c1.4,2.3,4.1,3.1,6.4,1.8l3.9-2.4v5.6c0,1.6,1.9,2.9,3.5,2.9s3.5-1.3,3.5-2.9v-9l11.9-7c2-1.1,4.1,0.3,4.1,2.5v13.4l-7.9,7.9c-1.1,1.1-1.1,3,0,4.1c1.1,1.1,3,1.1,4.2,0l3.7-3.7v3.4c0,2.7,2.3,4.9,5,4.9c2.9,0,5-2.2,5-4.9v-3.4l3.7,3.7c1.1,1.1,3,1.1,4.2,0c1.1-1.1,1.1-3,0-4.1L53,75.4V62c0-2.3,2.1-3.7,4.1-2.5l11.9,7v9c0,1.6,1.9,2.9,3.5,2.9s3.5-1.3,3.5-2.9v-5.6l3.9,2.4c2.3,1.3,5.2,0.5,6.5-1.8l-0.1,0C87.8,68.2,86.9,65.2,84.5,63.8z"
        },
        {
            name:"dog",
            picpath:"M12.2,46.4C12.2,46.4,12.2,46.3,12.2,46.4c-5-3.3-7.8-8.2-8.1-14.2c-0.5-8.7,5-19.3,17.5-18.3c1.3,0.1,2.6,0.7,3.9,1.3c0.4,0.2,0.9,1.1,0.8,1.5c-0.2,0.6-0.9,1.2-1.5,1.3C23.9,18.2,23,18,22.1,18c-6.8,0.1-10.9,3.5-12.1,10.1c-0.8,4.4,0,8.5,3.1,11.9c1.1,1.2,2.1,1.5,3.6,0.6c3.6-2.3,7.7-2.8,11.9-3c6.2-0.4,12.3-0.8,18.5-1.4c4.8-0.4,8.5-2.6,11.1-6.6c1.3-2,2.5-4.1,4-6c1.4-1.9,2.8-3.9,4.5-5.6c4.4-4.3,9.6-4.8,14.8-1.4c1.5,1,2.8,2.2,4,3.5c1,1.1,1.8,1.8,3.4,1.7c2-0.1,3.4,1.3,3.1,3.4c-0.2,1.4-0.8,2.8-1.6,4c-3.2,4.3-7.4,7.5-13,8.4c-0.6,0.1-1.2,0.4-1.8,0.6c0,0-0.1,0-0.1,0.1c0.1,3.6,0.5,7.2-1.5,10.3c-1.5,2.4-3.4,4.5-5.1,6.8c-0.9,1.3-1.9,2.5-2.8,3.8c-1.9,2.9-2.6,6.1-2.2,9.5c0.1,0.9,0.3,1.9,0.1,2.8c-0.3,2.1,0.3,3.6,2.6,4.4c0.6,0.2,1.1,0.6,1.6,1.1c1.2,1.2,0.7,2.8-0.9,3c-2.2,0.3-4.5,0.4-6.7,0.3c-1.9-0.1-3.1-1.4-3-3.7c0-4-1.8-7.4-3.3-11.1c0,0,0-0.1-0.1,0c-8.3,1.3-15.6-1.8-22.6-4.7c0,0-0.1,0-0.1,0c-1.7,1.6-3.1,2.9-4.5,4.2c-2.3,2.2-4.6,4.2-4.7,7.8c-0.1,2.7,1,4.6,3.1,6c0.9,0.6,1.8,1.1,1.2,2.6c0,0,0,0.1-0.1,0.1c-3.1,0.3-6.3,0.6-9.6,0.8c-1.2,0-2.1-1-2-2.3c0-1-0.4-1.9-0.5-2.9c-0.1-2.8-0.4-5.6-0.1-8.3c0.3-2.8,0.2-5.6-0.6-8.3c-0.7-2.2-1.2-4.4-1.4-6.7C12,51.4,12.2,49.2,12.2,46.4zM65.5,21.4c-1.1,0.8-0.7,0.9-0.7,1.2c2.9,1.7,5.3,4.2,9.1,4.5c0.2,0,0.4-0.1,0.5-0.3c1.5-2.9,2.1-5.9,1.9-9c-0.1-1.1-0.4-1.9-1.9-1.3c-0.5,2.7,0.4,5.7-1.7,8.4c0,0-0.1,0-0.1,0c-1-0.5-2-0.9-3-1.5c-1.1-0.6-2.1-1.5-3.2-2C66.1,21.3,66.1,21.3,65.5,21.4z M59.9,31.1C59.9,31.1,59.8,31.1,59.9,31.1c-1.6,1-1.5,1.9-0.3,2.6c3,1.7,6,3.4,9.2,4.9c1.3,0.6,3,0.7,4.4,1c0.5-1.4,0-1.9-1-2.2C67.6,36.3,63.7,33.9,59.9,31.1z M80.4,24.2c1.3-0.4,1.3-2.7-0.1-3.1c0,0,0,0-0.1,0c-1-0.3-1.6,0.4-1.6,1.3c-0.1,1,0.4,1.9,1.5,1.9C80.3,24.2,80.3,24.2,80.4,24.2z"
        },
        {
            name:"fire",
            picpath:"M33.6,41.9c2.7-6.5,5.2-12.9,5.6-20.1c0.1-1.3,0-2.6,0.1-4c0.2-4.1-0.3-7.9-3-11.1C35.9,6.4,35.7,5,36,4.6c0.4-0.5,1.6-0.8,2.1-0.5c1.9,0.9,4,1.8,5.5,3.3c2.4,2.4,4.6,5,6.3,8c3.8,6.7,6.5,13.9,7.2,22.3c0.6-3.8,1-7.2,1.7-10.5c0.8-4,2.2-7.8,5.2-10.6c1-1,2.3-1.9,3.6-2.5c1.3-0.6,2.5,0.6,2.1,2.1c-0.2,1.1-0.7,2.1-1.1,3.1c-1.6,4.1-1.2,7.9,1.4,11.4c1.1,1.6,2.3,3.1,3.4,4.7c6.3,9.3,7.7,19.9,7.1,31c-0.1,2-0.2,4-0.6,5.9c-1.1,5.5-4,9.8-8.5,12.8c-4.3,2.9-9,4.6-13.9,5.6c-9.1,1.8-18.1,1.2-26.8-2.3c-2.5-1-4.8-2.4-7-3.9c-6-4.2-8.5-10.2-6.9-17.8c0.7-3.4,1.5-6.8,2.5-10.2c1.7-5.4,2.4-10.9,2.6-16.5c0.1-3.5-0.7-6.7-2.9-9.4c-0.4-0.5-0.9-1.4-0.6-2c0.6-0.9,1.6-0.8,2.1-0.6c1.6,0.9,3.3,1.8,4.5,3.2C27.9,34.6,30.6,38.2,33.6,41.9z M43.2,75.7l-3-5.7c-0.3,2.1-0.3,3.8-0.6,5.4c-0.3,1.4-0.8,2.7-1.2,4.1c-1,3.7,0.4,6.9,3.9,7.5c3.2,0.6,6.5,0.8,9.7,0.5c3.7-0.3,5.3-2.8,5.7-6.9c0.5-5.4-2-9.6-5.1-14.3l-1.4,8.7c-2-4.9-2.3-9.4-1.9-14.2C46.1,65.3,44.1,70.1,43.2,75.7z"
        },
        {
            name:"bird",
            picpath:"M85.7,24.8c-1.2-1.1-2.4-2.1-3.7-3c-1.4-0.9-2.2-2.1-2.7-3.7c-1.3-4.8-4.8-7.7-9.4-8c-4.1-0.3-8.3,2.5-9.8,6.9c-0.7,2.2-0.9,4.6-1.1,6.9c-0.2,2.7-1.1,4.9-3,6.7C45.6,40.8,35.1,51.2,24.5,61.6c-4.4,4.3-8.7,8.6-13.1,12.9c-1.2,1.2-1.5,2.6-1.1,4.2c0.5,1.6,1.5,2.7,3.1,2.8c0.9,0.1,2-0.2,2.9-0.6c5.7-2.8,11.3-5.8,17-8.6c2.6-1.3,5.5-1.7,8.4-1.4c0.1,0.4,0.2,0.8,0.2,1.2c0.7,3.6,1.4,7.2,2.1,10.7c0.5,2.4,2.3,3.5,4.6,3c1.9-0.5,3-2.4,2.5-4.8c-0.2-1.2-0.5-2.9-0.7-4.1c-0.4-2.2-0.8-4-1.2-7c1.8,0,3.4,0,5.2,0c0.8,5,1.5,8.3,2.3,12.2c0.5,2.5,2.2,3.9,4.5,3.5c2-0.4,3.1-2.2,2.6-4.7c-0.7-3.8-1.4-7.6-2.2-11.5c3-1.3,5.6-3.3,7.6-5.9c2.5-3.2,3.7-7,4.5-11.1c1.6-8.1,3.3-16.1,5-24.2c0.3-1.6,0.7-1.9,2.3-1.8c1.3,0,2.7,0.1,4,0.1c0.4,0,1-0.3,1.1-0.6C86.3,25.7,86,25,85.7,24.8z M69.8,53.5c0,0-2.5,8.6-12.1,12.3c-0.9,0.4-2,0.6-2,0.6c-0.8,0.2-3.1,0.7-3.2,0.3c-0.2-0.6,1.3,0.5,7.3-4c2.9-2.2,4-3.3,5-4.5c1.8-2,3.1-4.7,5.5-7.3C71,50.7,69.9,52.9,69.8,53.5z M72.4,21.9c-1.3,0-2.4-1.2-2.4-2.7c0-1.4,1.1-2.6,2.5-2.6c1.3,0,2.5,1.3,2.5,2.7C74.9,20.7,73.8,21.9,72.4,21.9z"
        },
        {
            name:"fish",
            picpath:"M85.1,64.8c1.2,0.3,2.4-0.2,3-1.3c3.9-7.1,5-14.8,2.9-23.1c-4.3-17.4-21.9-25.8-36-11.2c-2.8,2.8-5.1,6.4-7.4,9.8c-2.1,3.2-4.7,5.5-7.9,6.7c-1.6,0.6-3.4,1-5.1,0.7c-2-0.3-4-1.1-5.9-2.1c-1.5-0.7-3.1-1.6-4.1-3.1c-0.3-0.4-0.4-1-0.3-1.5c0.5-1.9,1.1-3.5,1.2-5.2c0.2-3.8-0.6-9.1-2-11.3c-2.3-3.8-3-2.4-3.1-0.8c-0.1,0.8,0,1.6,0.1,2.4c0.4,3.5,0.8,10.1-2.4,12.7c-2,1.7-4.9,1.4-11.1-1c-0.7-0.3-2.6-1.3-3,0c-0.2,0.7,2.1,3.6,2.4,4c3.1,3.3,6.6,4.9,10.7,3.9c0.7-0.2,1.3,0.1,1.7,0.7c1.7,2.5,3.4,4.9,5,7.2c0,0.1,0.1,0.1,0.1,0.2c4.4,5,11.5,10.7,16.6,14.1c0,0,0.1,0,0.1,0.1c4.1,3.2,6.5,4.1,9.9,5.2c6.7,2.2,13.7,3.1,20.7,2.6c4-0.3,7.6-1.7,10.9-4.4c2.5-2,2.5-2.3,1-5.5c-0.1-0.1-1.2-1.4-1.1-1.7L85.1,64.8z M82.1,53.5c0-1.6,1.3-2.9,2.8-2.9c1.6,0,2.8,1.3,2.8,2.9s-1.3,2.9-2.8,2.9C83.4,56.4,82.1,55.1,82.1,53.5z"
        },
        {
            name:"cat",
            picpath:"M90.7,31.2c-0.2-0.3-0.3-0.6-0.6-0.9c-0.7-0.8-1-1.7-1.1-2.8c-0.1-1.6-0.9-2.9-2.3-3.7c-1.3-0.7-1.2-1.6-0.8-2.7c0.3-0.8,0.7-1.5,1.2-2.1c0.4-0.6,1-1.2,1.6-2c-2,0.3-3.8,0.5-5.5,0.7c-4,0.6-7.7,1.9-10.2,5.3c-1.9,2.4-3.2,5.2-4.1,8.1c-1.3,3.9-3.6,6.9-7.8,7.8c-2,0.4-4.1,0.6-6.1,0.4c-4.4-0.4-8.8-1.2-13.1-1.8c-4.1-0.6-8.2-1.4-12.4-0.8c-1.6,0.2-3.1,0.9-4.7,1.1c-3.1,0.3-6.2,0-9.1-1.1c-4.8-1.7-7.3-6.1-6.3-10.8c1.5-7,9.9-10.4,15.3-5.6c1.4,1.2,2.7,2.6,4.2,3.9c1.5,1.3,3,2.7,4.7,3.7c3,1.9,7.7,1.5,10.4-0.6c0.8-0.6,1.3-1.3,0.9-2.3c-0.4-1-1.3-1.3-2.2-1.2c-0.6,0.1-1.2,0.2-1.7,0.5c-3.7,1.4-5.9,0.9-8.6-2c-1.3-1.5-2.6-3-4-4.4c-4.4-4.4-10.7-5.3-16.1-2.4c-5.7,3.1-9.1,10.3-7.7,16.5c1,4.1,3.6,7,7.2,9c2.2,1.2,4.6,2.1,6.9,3.1c-1.8,2.1-2.8,4.6-3.3,7.4c-0.6,4.1-0.3,8.2,0.4,12.3c0.8,5,1.8,10.1,2.6,15.1c0.4,2.4,0.6,4.4,0.9,7.4c3.1,0,6.1,0,9.1,0c-0.1,0-0.1-0.5-0.1-0.7C28.2,83,27.4,81,25.1,80c-0.3-0.1-0.5-0.6-0.5-1c-0.1-2.7-0.4-5.4-0.3-8c0.2-3.4,1.4-6.5,3.6-9.3c9.5,4.7,30.5,3,30.9,2.8c2.3,4.3,2.7,5.9,3.1,10.5c0.3,3.3,0.9,6.5,1.4,9.7c0.1,1,0.6,1.5,1.7,1.3c1.1-0.1,2.2,0,3.3,0c1.4,0,2.8,0,4.2,0c0.3-3-0.7-4.3-2.9-5.5c-0.4-0.2-0.8-0.6-0.8-0.9c-0.1-2.9-0.3-5.8-0.2-8.7c0.1-1.5,0.7-3,1-4.5c0.1,0,0.2,0.1,0.3,0.1c0.9,5.2,1.9,9.6,2.8,15.6c2.1,0,4.2,0,6.3,0c0.2-2-0.4-3.3-2-4.2c-0.4-0.2-0.8-0.7-0.9-1.1c-0.6-2.3-0.6-4.7-0.1-7.1c0.9-4.2,2-8.4,3-12.7c0.2-0.8,0.3-1.8,0.7-2.5c2-3.3,2.8-6.8,2.8-10.6c0-3.1,0-3.1,3.1-3.3c3-0.2,4.5-2.3,5.8-4.6C92.7,34,91.4,32.7,90.7,31.2z M84.7,30.4c-0.8,0-1.5-0.7-1.5-1.5s0.7-1.5,1.5-1.5s1.5,0.7,1.5,1.5S85.5,30.4,84.7,30.4z"
        },
        {
            name:"dogface",
            picpath:"M74.8,24.3c-4.8-3.9-9.9-6.5-20.5-7.9c-2.3-0.3-4.6-0.5-6.3-0.5c-2,0-4,0.2-6.3,0.5c-10.6,1.4-15.7,4.1-20.5,7.9c-7.5,6-12.6,25.9-12.3,28.6c0.1,0.8,0.5,1.2,1.2,1.6c4.8,2.8,9.7,6.3,13.8,9.7c0.5,0.5,1.4,0,1.4-0.7c-0.2-7.3-0.7-14.6,0-21.9c0.3,4.3,1.1,8.5,2.2,12.6c1.3,4.9,2.8,9.7,3.1,14.8c0.1,2.6,1,5.3,1.6,7.9c0.3,1.4,1.3,2.3,2.7,2.5c4.6,0.8,9.1,0.7,13.2-1.5c0,0,0,0,0,0c0,0,0,0,0,0c4.1,2.2,8.6,2.4,13.2,1.5c1.4-0.3,2.4-1.1,2.7-2.5c0.6-2.6,1.5-5.2,1.6-7.9c0.2-5.1,1.7-9.9,3.1-14.8c1.1-4.1,1.9-8.3,2.2-12.6c0.7,7.3,0.3,14.5,0,21.9c0,0.7,0.8,1.1,1.4,0.7c4.1-3.4,9-6.8,13.8-9.7c0.7-0.4,1.1-0.8,1.2-1.6C87.4,50.3,82.3,30.3,74.8,24.3z M37.4,48.1c-2.9,0-5.3-2.4-5.3-5.3c0-2.9,2.4-5.3,5.3-5.3s5.3,2.4,5.3,5.3C42.7,45.7,40.3,48.1,37.4,48.1z M52.6,67.9c-0.5,1.5-1.2,3.1-1.7,4.6c-0.4,1.1-1.4,1.8-2.9,1.8c-1.4,0-2.3-0.6-2.8-1.9c-0.7-1.5-1.2-3-1.7-4.6c-0.3-1,0.1-1.8,1-2.3c1.2-0.6,2.4-1,3.6-1c0.8,0,2.4,0.4,3.6,1C52.5,66,52.9,66.9,52.6,67.9z M58.6,48.1c-2.9,0-5.3-2.4-5.3-5.3c0-2.9,2.4-5.3,5.3-5.3c2.9,0,5.3,2.4,5.3,5.3C63.9,45.7,61.6,48.1,58.6,48.1z"
        },
        {
            name:"catface",
            picpath:"M78.2,62.8c-0.4,0.9-0.8,1.7-1.2,2.5c-0.4,0.8-0.8,1.5-1.1,2.1c2.1,1.4,4.1,2.7,6.1,4.1c1.6,1.1,1.8,2.8,0.7,4c-1.1,1.3-2.5,1.2-4.1,0.2c-1.8-1.2-3.6-2.2-5.5-3.3c-0.5-0.3-1-0.2-1.4,0.3c-6.1,6.1-13.7,8.9-22.2,9.2c-8.7,0.3-16.7-1.9-23.6-7.8c-0.5-0.4-0.9-0.9-1.4-1.3c-0.5-0.5-1-0.7-1.6-0.3c-1.8,1.1-3.6,2.3-5.5,3.3c-0.8,0.4-1.7,0.8-2.6,0.7c-1.1-0.1-1.8-0.9-2-2c-0.2-1.1,0.1-2.1,1-2.7c1.8-1.3,3.7-2.4,5.5-3.7c0.3-0.2,0.6-0.3,0.9-0.5c-0.8-1.6-1.6-3.1-2.4-4.7c-1.2,0.8-2.4,1.6-3.6,2.4c-0.9,0.6-2.1,0.6-3,0c-1-0.7-1.4-1.7-1.1-2.8c0.2-0.7,0.7-1.3,1.2-1.7c1.3-1,2.7-1.9,4.1-2.7c0.6-0.3,0.8-0.7,0.7-1.4c-1.3-6.6-0.9-13.2,1.4-19.6c0.1-0.4,0-1-0.2-1.4c-2.4-4.7-3.1-6.4-4.4-11.6c-0.5-2-0.9-4.1-1.2-6.2c-0.3-2.1,1-3.3,3.2-3.2c7.3,0.2,11.7,0.3,17.2,4.8c0.6,0.5,1.4,0.6,2,0.3c9.3-3.7,18.5-3.7,27.8,0c0.8,0.3,1.2,0.3,1.8-0.3c4.6-3.8,6.4-4.2,12.4-5.1c1.2-0.2,2.3-0.3,3.5-0.3c1.9,0,3.9,1.3,3.7,3.2c-0.3,3.5-0.3,3.5-0.6,6.8c-0.3,2.5-1,5-2.1,7.3c-0.7,1.5-1.4,3-2.1,4.5c-0.2,0.4-0.3,1.1-0.1,1.5c2.2,6.3,2.6,12.6,1.3,19.1c-0.2,0.8,0,1.2,0.8,1.7c1.4,0.8,2.7,1.7,4,2.6c1.4,1,1.7,2.6,0.8,3.9c-0.9,1.3-2.5,1.5-4,0.5C80.4,64.3,79.3,63.6,78.2,62.8z M34.4,49.5c3,0,5.4-2.4,5.4-5.4c0-3-2.4-5.4-5.4-5.4c-3,0-5.4,2.4-5.4,5.4C29,47.1,31.4,49.5,34.4,49.5z M61.5,49.5c3,0,5.5-2.3,5.5-5.3c0-2.9-2.3-5.4-5.3-5.5c-3-0.1-5.5,2.3-5.5,5.3C56.1,47,58.5,49.4,61.5,49.5z M48,59.8c0,0-2.2-0.1-3.3,0c-0.7,0.1-1.5,0.5-1.9,1.1c-0.6,0.7-0.3,1.6,0.3,2.2c1.3,1.5,2.7,2.9,4.1,4.3c0.5,0.5,1,0.6,1.5,0c1.4-1.5,2.9-2.9,4.2-4.5c0.4-0.5,0.5-1.5,0.2-2c-0.2-0.5-1.1-1-1.7-1.1C50.3,59.7,49.1,59.8,48,59.8z"
        },
        {
            name:"tree",
            picpath:"M38.7,30.7c2.3-5.9,4.5-11.5,6.8-17.2c0.8-2,1.8-3.9,2.9-5.8c0.7-1.2,1.8-2.2,2.8-3.2c0.6-0.7,1.6-0.7,2.3,0c0.6,0.7,0.5,1.4,0.1,2.2c-1,1.9-2.1,3.7-3.2,6c0.8-0.2,1.1-0.2,1.6-0.3c5-1.6,9.9-1.8,14.8,0c2.1,0.7,2.5,1.5,1.6,3.4c-3.3,7-8.5,12.2-15.8,15.1c-1.7,0.6-3.6,0.7-5.3,0.9c-1.1,0.1-2.4,0-3.8,0c-1.8,6.5-1.9,12.8-2.2,19.6c0.6-0.4,0.9-0.5,1.3-0.8c3.6-3.4,7.8-5.3,12.6-5.6c3.6-0.2,7-0.1,10.6-0.2c0.3,0,0.7,0,1,0.1c4.1,0.6,4.8,1.8,4.3,5.9c-0.6,4.2-2.5,7.8-5.1,11c-3.3,4.2-7.3,7.7-11.8,10.7c-2,1.3-4.4,1.9-6.6,2.7c-1.1,0.4-2.3,0.7-3.7,1.1c0.8,4,2,7.7,3.6,11.3c0.2,0.5,0.8,0.8,1.4,1.1c0.8,0.5,1.5,1.2,1.1,2c-0.3,1-1.1,1.1-2.1,1.1c-2.9,0.1-5.9,0.2-8.8,0.3c-1.4,0-1.7-0.9-1.9-2.1c-0.8-4.9-1.9-9.8-2.5-14.7c-0.8-6.4-0.6-12.7-0.1-19c0.1-1.2,0-2.1-0.8-3c-6.3-7.3-9.2-15.9-9.1-25.6c0-1.7,0-3.2,0.1-4.9c0.1-2,0.9-2.4,2.9-2.2c4.2,0.8,6.7,3.6,9,6.7C37.5,28.5,38.1,29.6,38.7,30.7z M66.3,49.2c-3.9,2.8-7.5,5.9-11.4,8.3c-3.9,2.4-7.9,4.9-12.4,6.5c0.5,0.4,1,0.8,1.5,0.7c1.3-0.3,2.4-0.7,3.7-1.3c1.4-0.6,2.5-1.5,3.9-2.1c5.3-2.4,9.7-6.4,14.3-9.8C66.2,51,67,50.7,66.3,49.2z M37.6,45.6c0.5-1.4-0.3-1.9-0.8-2.4c-0.9-1.4-2.1-2.5-2.6-4c-1.3-3.1-2.3-6.5-3.4-9.7c-0.3-0.8-0.2-1.8-1.3-2c-0.7,2.1,1.4,9.3,4.2,14.1C34.6,43.2,35.7,44.7,37.6,45.6z M47,23.1c0.1,0.2,0.1,0.4,0.2,0.6c0.8,0,1.7,0.2,2.4,0c5.2-1.3,10.1-3.2,14.6-6.2c0.3-0.2,0.5-0.8,0.8-1.2c-1.6-0.2-1.6-0.2-2.3,0.3c-4.6,2.6-9.4,4.6-14.5,5.7C47.8,22.3,47.4,22.8,47,23.1z"
        },
        {
            name:"flower",
            picpath:"M68.6,69.1c-5.8,2.8-11.5,5.6-17.1,8.5c0,0.1,0-24.1,0-29.7c7.4-1.6,12.3-4.6,12.3-19c0-8.3,0-21.9,0-24.9c-3.8,2.9-6.7,5.3-9.3,7c-1.7-2.3-3.8-3.8-6.6-3.8c-2.9,0-5,1.7-6.8,3.9c-2.3-2.1-8-6.6-8.8-7.1c0,2.7,0,20.7,0,24c3.1-1.8,12.5-9.2,13.7-10.4c-0.3-0.4-2.9-3.1-4-4.3c-1-1.1,0-2.1,0.9-1.2c0,0,3.9,3.9,4.6,4.6c2.2-1.6,4-2.9,6-4.4c1.4-1,2.5,0.1,0.5,1.5c-6.5,4.9-12.9,9.8-19.4,14.6c-0.7,0.5-1,0.7-2.1,1.3c-0.2,4.4-0.2,7.9,2,11.2c2.5,3.9,6.1,6.2,10.5,7.1c0,5.7,0,30,0,29.9c-5.7-2.9-11.4-5.8-17.1-8.6c-3-1.6-2.6,0.3-2.5,0.7c2.7,6.1,5.4,12.3,8.3,18.2c1.9,4,6.3,5.2,10.1,3.4c0.6-0.3,1.4-0.6,1.8-0.8c0.9,0.9,1.3,1.1,2.5,1.3c1.3,0,1.9-0.4,2.9-1.3c0.5,0.2,1.4,0.5,2,0.8c3.8,1.9,8.3,0.6,10.2-3.4c2.9-6,5.6-12.2,8.4-18.3C71.3,69.5,71.6,67.4,68.6,69.1z M45,89c-6.8-5.9-13.1-12-18.4-19.2c0.3-0.4,0.7,0.1,0.9,0.3c5.1,5.9,10.7,11.2,16.3,16.3C44.4,86.9,45.2,87.6,45,89z M51.3,89c-0.2-1.5,0.6-2.1,1.2-2.6c5.7-5.2,11.2-10.4,16.3-16.3c0.2-0.2,0.6-0.7,0.9-0.3C64.4,77,58.1,83.1,51.3,89z"
        },

        // ***************************************
        {
            name:"computer",
            picpath:"M55.5,69.5c1,4.8,2.3,8.3,6.4,9.8c1.1,0.4,2.4,1.1,2.8,2.1c1.1,2.4-0.3,4.5-2.9,4.6c-5.8,0.1-11.6,0-17.5,0c-3.8,0-7.7-0.1-11.5,0c-1.6,0-2.8-0.6-3.9-1.7c-1.4-1.5-1.3-3.1,0.4-4.2c0.9-0.6,2-0.9,3-1.3c3.5-1.7,6.1-4.3,6.6-9.2c-1.4,0-2.6,0-3.8,0c-9,0-18,0-27,0c-3.8,0-4.2-0.5-4.2-4.6c0-14.9,0-29.7,0-44.6C4,16.7,4.5,16,7.8,16c26.8,0,53.6,0,80.4,0c3.3,0,3.8,0.6,3.8,4.3c0,14.4,0,28.7,0,43.1c0,1,0,2-0.3,2.9c-0.7,2.5-1.7,3.2-4.1,3.2c-9.5,0-18.9,0-28.4,0C58.2,69.5,57.1,69.5,55.5,69.5z M37.7,48.2c5.4,0,10.8,0,16.1,0c1,0,2.1,0.1,2.9-0.4c0.7-0.4,1.3-1.6,1.4-2.5c0-0.7-0.9-1.6-1.6-2c-0.6-0.4-1.5-0.2-2.3-0.2c-11,0-22,0-32.9,0c-0.7,0-1.3,0-2,0.1c-1.3,0.1-2,0.9-2.1,2.4c0,1.5,0.8,2.3,2,2.5c0.9,0.2,1.7,0.1,2.6,0.1C27.1,48.2,32.4,48.2,37.7,48.2z M25,26.8C25,26.8,25,26.8,25,26.8c-2,0-3.9,0-5.9,0c-1.4,0-2.4,0.7-2.4,2.4c0,1.6,1,2.5,2.3,2.5c4,0.1,8.1,0.1,12.1,0c1.4,0,2.3-0.9,2.2-2.6c-0.1-1.6-1-2.3-2.4-2.3C28.9,26.8,26.9,26.8,25,26.8z"
        },
         {
            name:"house",
            picpath:"M92,56.6c0-2.2-0.8-3.4-2.6-4.3c-6.6-3.5-13.1-7.1-19.6-10.7c-1-0.5-1.9-1.1-3.1-1.8c0-4.6-0.1-9.3,0-13.9c0.1-2-0.5-3.5-1.9-4.9C60,16,55.2,10.9,50.4,5.8C49.3,4.7,49,4.1,48,4c-0.6,0.1-1.3,0.7-2.4,1.8C40.8,10.9,36,16,31.1,21c-1.4,1.4-1.9,2.9-1.9,4.9c0.1,4.6,0,9.3,0,13.9c-1.2,0.7-2.1,1.2-3.1,1.8c-6.5,3.6-13.1,7.2-19.6,10.7c-1.8,1-2.6,2.1-2.6,4.3c0.1,10.6,0,21.2,0,31.7c0,0.3,0,0.7,0,1c0.1,1.5,0.8,2.4,2.2,2.5C7.2,92,8,92,8.9,92c13,0,26.1,0,39.1,0c12.7,0,26.1,0,39.1,0c0.9,0,1.8,0,2.6-0.1c1.4-0.1,2.2-1,2.2-2.5c0-0.3,0-0.7,0-1C92,77.8,91.9,67.2,92,56.6z M47,87H32.8c-1.1,0-1.9-0.9-2-1.9c-0.1-5.6-0.2-21.9-0.2-30.1c0-3.1,1.2-3.7,4-3.8c3.8,0,8.3,0,12.3,0V87z M65.1,85.1c0,1.1-0.9,1.9-2,1.9H49V51.2c4,0,8.5,0,12.3,0c2.8,0,3.8,0.7,3.8,3.8C65.1,63.1,65.2,79.5,65.1,85.1z"
        },
        {
            name:"cloth",
            picpath:"M90.2,30.7c-5.5-5.8-10.9-11.6-16.4-17.4c-3-3.1-3.7-3.3-6.3-3.3c-0.9,0-2.2,0.7-2.6,1.3c-3.4,5.6-8,9.1-14.9,9.1c-0.7,0-3.2,0-3.9,0c-6.9,0-11.5-3.5-14.9-9.1c-0.4-0.7-1.7-1.3-2.6-1.3c-2.6,0-3.3,0.2-6.3,3.3c-5.5,5.8-10.9,11.6-16.4,17.4c-2.4,2.6-2.4,3.2-0.1,5.7c2.8,3,4.4,4.6,7.2,7.6c2.3,2.4,3.4,1.6,5.4-0.1l5.2-4.6c0,1.1,0,2.2,0,3.4c0,11-0.1,28-0.1,38.9c0,4.1,0.3,4.4,4,4.4c6.3,0,13.4,0,20.6,0c6.8,0,14.3,0,20.6,0c3.7,0,4-0.3,4-4.4c0-11-0.1-28-0.1-38.9c0-1.1,0-2.2,0-3.4l5.2,4.6c2,1.8,3.1,2.6,5.4,0.1c2.9-3,4.4-4.5,7.2-7.6C92.6,33.9,92.6,33.3,90.2,30.7z M57.2,34.6c-0.3,0.5-1.1,0.6-1.5,0.1c-2.4-2.6-7.7-8.1-7.7-8.1s-5.3,5.5-7.7,8.1c-0.4,0.5-1.2,0.4-1.5-0.1c-2.4-3.7-6.3-10.5-9.5-17.1c5.2,5.6,11.1,7.9,18.6,7.9c9,0,13.4-2.3,18.6-7.9C63.5,24.1,59.6,30.9,57.2,34.6z"
        },
        {
            name:"clock",
            picpath:"M48,4L48,4C25,4,4,23.4,4.1,47.9C4,72.3,23.5,91.9,47.9,92c0,0,0.1,0,0.1,0v0c0,0,0.2,0,0.2,0C72.6,91.9,92.1,72.3,92,47.9C92.1,23.3,72,4,48,4z M63.3,18.1l3.6-7.1l2,1.1c-1.2,2.2-2.3,4.2-3.8,6.9C64.5,20.4,62.5,19.6,63.3,18.1z M46,6c0.8,0,1.5,0,2.2,0c1,0,1.4,0,2.2,0c0,5,0,8.8,0,12.9c0,1.3-0.7,2.5-2,2.7c-0.1,0-0.3,0-0.3,0v0c0,0-0.1,0-0.1,0c-1.4-0.2-1.9-1.3-1.9-2.7 C46,14.8,46,11,46,6z M7,45.8c4,0,7.1-0.1,10.7,0c1.3,0,2.1,1,2,2.3c-0.1,1.2-0.7,2-2,2c-3.6,0-6.7,0-10.7,0C7,48.6,7,47.4,7,45.8z M18.7,65.3c-2,1.1-4.6,2.5-6.8,3.6L11,67l6.4-3.3C19.8,62.5,20.3,64.4,18.7,65.3z M20.4,30.4c-2-1-5.1-2.6-7.2-3.7l1.1-2c2.4,1.2,4.6,2.5,6.9,3.6C23.6,29.4,22.5,31.4,20.4,30.4z M31.1,78.9l-3.5,5.5l-1.7-1.1l3.8-5.8C30.8,75.9,32.3,77,31.1,78.9zM31.2,19.1c-1.5-2.8-2.6-4.7-3.8-6.9l2-1.1l3.6,7.1C33.9,19.6,31.9,20.4,31.2,19.1z M50.3,89.5c-0.6,0-1.3,0-2.3,0v0c0,0-1.5,0-2.1,0c0-1.8,0-3.5,0-5.2c0-2.7-0.1-5.3,0-8c0.1-1.9,2.1-2.7,2.1-2.8v0c2,0.1,2.2,0.9,2.3,2.8c0.1,2.7,0,5.3,0,8C50.3,86,50.3,87.7,50.3,89.5z M68.8,84.4l-3.5-5.5c-1.2-1.9,0.3-2.9,1.4-1.3l3.8,5.8L68.8,84.4z M74.3,71.8c-0.6,1-1.8,1.1-2.8,0.3c-0.7-0.5-1.3-1.1-1.9-1.7c-5.7-5.7-11.3-11.3-17-17c-2.6-2.6-5.5-2.6-8.2,0.1c-2.1,2.1-4.2,4.2-6.3,6.3c-0.5,0.5-1.1,1.3-1.7,1.3c-0.8,0.1-1.9-0.2-2.5-0.7c-0.4-0.4-0.4-1.7-0.1-2.3c0.5-0.9,1.4-1.6,2.1-2.4c1.7-1.7,3.4-3.5,5.2-5.2c1.4-1.3,2.6-2.6,2.6-4.8c0.1-2.4,2.5-4.2,4.9-4.3c2.6,0,4.9,2,5.1,4.8c0.1,1.7,0.8,2.7,1.9,3.8c5.7,5.7,11.5,11.5,17.2,17.2c0.6,0.6,1.4,1.2,1.7,1.9C74.7,70,74.7,71.2,74.3,71.8z M75.1,28.3c2.3-1.2,4.6-2.4,6.9-3.6l1.1,2c-2.1,1.1-5.2,2.7-7.2,3.7C73.8,31.4,72.8,29.4,75.1,28.3z M84.4,68.9c-2.2-1.1-4.7-2.6-6.8-3.6c-1.6-0.9-1.1-2.8,1.4-1.6l6.4,3.3L84.4,68.9z M79.6,50.2c-1.2,0-2.4-0.8-2.5-2c-0.1-1.4,1.1-2.3,2.5-2.3c3.6-0.1,7.4,0,11.4,0c0,1.6,0,2.8,0,4.4C87,50.2,83.2,50.2,79.6,50.2z"
        },
        {
            name:"bag",
            picpath:"M92,25.5c0-3.8-0.8-4.5-4.2-4.5c-5.4,0-10.7,0-16.1,0c-1.2,0-2.3,0-3.9,0c0-2,0-4.5,0-6.5c-0.1-3.5-0.9-4.3-4-4.4C59.4,10,55.1,10,50.8,10c-0.9,0-1.8,0-2.8,0c-0.9,0-1.9,0-2.8,0c-4.3,0-8.6-0.1-12.9,0c-3.2,0-4,1-4,4.5c0,2,0,4.5,0,6.5c-1.6,0-2.7,0-3.9,0c-5.4,0-10.7-0.1-16.1,0C4.9,21,4,21.9,4,25.6c0,18.7,0,37.3,0,56C4,85.2,4.8,86,8.1,86c13.3,0,26.6,0,39.9,0c13.7,0,26.6,0,39.9,0c3.3,0,4.1-0.8,4.1-4.4C92,62.9,92,44.2,92,25.5z M34,17h14h14v2.4l-14,0l-14,0V17z M88.8,61.3c-1.3,0.1-2.6,0.1-3.9,0.1c-3.1,0-6.1,0-9.2,0c0,0,0,7.3,0,7.3c0,1.6-1.1,1.8-4.6,1.8c-3.7,0-4.6-0.2-4.6-2.1c0-1.9,0-4.9,0-6.9c-6.2,0-12.6,0-18.4,0c-6.1,0-12.2,0-18.4,0c0,2,0,5,0,6.9c0,1.9-0.9,2.1-4.6,2.1c-3.4,0-4.6-0.2-4.6-1.8c0,0,0-7.3,0-7.3c-3.1,0-6.2,0-9.2,0c-1.3,0-2.6,0-3.9-0.1c-1.2-0.1-2.2-0.5-2.1-2.1c0.1-1.5,1.1-1.9,2.3-1.9c1.9-0.1,4,0,5.9,0c2.4,0,4.8,0,7.8,0c0-2,0-3.7,0-5.3c0-1.9,0.6-2.8,2.5-2.9c7.1-0.1,6.2-0.1,6.2,6.3l-0.1,1.9l18.4,0l18.4,0l0-1.9c0-6.4-1-6.4,6.1-6.3c1.8,0,2.5,1,2.5,2.9c0,1.7,0,3.3,0,5.3c3,0,5.4,0,7.8,0c1.9,0,3.9,0,5.8,0c1.1,0,2.2,0.4,2.3,1.9C90.9,60.7,89.9,61.2,88.8,61.3z"
        },
        {
            name:"gift",
            picpath:"M10.1,42.5c0-0.6-0.4-1-1-1.1C4,40.6,4,40.3,4,34.9c0-1.2,0-2.3,0-3.5c0.1-2.8,0.8-3.5,3.8-3.5c6-0.1,12,0,18.1,0c0.5,0,1,0,1.6,0c1,0,1.5-1.3,0.8-2c-0.7-0.6-1.2-1.2-1.8-1.7c-3.2-3.3-5.2-7-4.7-11.7c0.4-3.5,1.9-6.4,5.5-7.7c3.5-1.3,7.1-1,10.4,1.1c3.5,2.3,5.7,5.5,7.2,9.1c0.2,0.6,0.5,1.1,0.7,1.8c0.3,0.9,1.6,1,2.1,0.2c0.1-0.2,0.2-0.4,0.3-0.5c1.4-2.2,2.6-4.5,4.2-6.5c3-3.8,10.3-5.5,15-3.8c5.1,1.8,7.2,7.7,4.3,12.2c-1.9,3-4.7,5.1-7.7,7c-0.2,0.1-0.5,0.3-0.7,0.4c-0.9,0.6-0.5,2.1,0.6,2.1c0,0,0,0,0,0c7.8,0,15.5,0,23.3,0c4.4,0,4.8,0.3,4.8,4.3c0,1.6,0,3.2,0,4.9c-0.1,3.4-0.4,3.7-4,4.1c-0.3,0-0.5,0.1-0.9,0.1c-0.6,0.1-1,0.6-1,1.1v2.8c0,13.7,0,27.4,0,41c0,1,0,2.1-0.1,3.1c-0.1,1.2-0.8,2-2.1,2.1c-2.3,0.2-4.7,0.5-7.1,0.5c-20.6,0-41.1,0-61.7,0c-0.8,0-1.5,0-2.3,0c-1.8-0.1-2.7-1-2.8-2.6c-0.1-0.7,0-1.4,0-2.1c0-14,0-28.1,0-42.1C10.1,44.3,10.1,43.4,10.1,42.5z M47.2,78.4c0.5,0.4,1.1,0.2,1.6-0.2c3.8-3.8,9-9,12-13.5c1.5-2.3,1-6-1.1-8c-2.2-2.1-5.9-2.5-8.6-0.9c-1,0.6-1.9,1.3-2.8,2c-0.4,0.3-1.1,0.3-1.5-0.1c-0.6-0.6-1.2-1.1-1.8-1.5c-2.6-1.5-5.3-2-8.2-0.7c-2.8,1.3-3.9,3.6-4,6.2c-0.2,2.5,1.7,4.6,3.1,6.1c3,2.7,5.4,5.5,8.4,8.2C45.1,76.8,46.1,77.6,47.2,78.4z M42.4,27.6c0.9,0.2,1.6-0.7,1.3-1.5c-1.8-5-2.9-9.8-6.4-13.8c-0.9-1-2.3-1.9-3.6-2.4c-1.6-0.6-3.5-0.9-5,0.4c-1.4,1.2-1.8,2.9-1.1,4.5c0.6,1.5,1.4,3,2.4,4.2c3.1,3.6,7,6.2,11.5,8.2C41.8,27.5,42.1,27.5,42.4,27.6z M50.1,23.8c-0.2,0.9,0.7,1.7,1.6,1.3c2.8-1.1,5.1-2,7.2-3.2c2.9-1.7,5.6-3.8,8-6.2c2.1-2.1,0.6-5.4-2.4-5.8c-3-0.4-6.1-0.1-8.3,2.2C52.9,15.3,51.2,19.1,50.1,23.8z M13.8,41c-1.4,0.1-1.4,2.3,0.1,2.3c0.5,0,1.1-0.1,1.5-0.1c21.8,0,43.6,0,65.5,0c1.3,0,3.5,0.4,3.6-1.2c0.2-1.4-2.2-1-3.4-1c-21.9,0-43.9,0-65.9,0C14.8,40.9,14.3,40.9,13.8,41z"
        },
        {
            name:"hat",
            picpath:"M51.1,80.2c-8,0.3-19.8-0.6-27.4-3.1c-3.5-1.1-15.9-6-18.7-9c-2.2-2.5-2.2-3.4,0.3-5.7c1.8-1.6,3.7-3.1,5.6-4.6c1.6-1.3,3.2-2.7,4.8-3.9c2.1-1.5,3.2-3.5,3.7-6c0.9-4.2,1.9-8.4,2.7-12.7c1.3-8,6.1-13.1,13.4-16.1c7-2.9,14.2-4,21.7-2.9c4.8,0.7,8.6,3.2,11.9,6.5c4.5,4.4,6.9,9.9,7.9,16c0.3,2,0.8,4,1.1,6c0.6,3.8,2.5,6.8,5.2,9.4c2.6,2.6,5.3,5.1,7.8,7.8c1.8,1.9,2,3.8,0,5.3c-3.3,2.5-5.2,3.9-10.4,6.7C73,77.6,67.6,79.6,51.1,80.2z M74.6,50.4c-4.7,4.1-9.2,5.7-16.2,6.3c-5.6-0.1-7.8,0.3-14.5-0.2c-0.5,0-1,0-1.5-0.1c-6.2-0.5-11.3-1.5-16.6-4c-0.7-0.3-1.4-0.6-2.2-0.9c-0.4-0.2-0.9,0-1.2,0.4l-1.2,1.8c-0.3,0.4-0.2,1.1,0.3,1.3c5,3.2,9.6,5,16.1,5.7c8.3,0.9,16.6,1.5,24.9,0.6c0.3,0,0.6,0.2,0.9,0.4c0.5,1-0.3,1.9-0.1,2.8c0.2,0.8,0.6,1.8,1.2,2.2c2.1,1.1,4.3,1.7,7.1,1.6c-1.2-2.9-2.3-5.6-3.4-8.2c0.7-0.2,1-0.3,1.1-0.3c2.7,2.7,5.4,5.4,8.6,8.6c0.2-2.1,0.4-3.7,0.6-5.3c0.3-2.4,0.2-4.6-2.6-5.7c-0.8-0.3-0.9-1.3-0.2-1.7l1.7-1.1c0.4-0.3,0.6-0.9,0.3-1.3c-0.6-1-1.1-1.8-1.6-2.6C75.8,50,75.1,49.9,74.6,50.4z"
        },
        {
            name:"bulb",
            picpath:"M66.4,41.7c-2.3-1.7-3-3.5-3.1-6l0.1-8.3c0-1.9,0.5-4.6-1-6.6c-0.4-0.5-0.2-1.3-0.2-2c0-1.6,0.7-3.2,0.7-4.8C62.9,9.2,63,9.2,59,8.3V4.5C59,4.2,57.5,4,57,4h-9h-9c-0.5,0,0,0.2,0,0.5v3.8c-4,0.9-4.9,0.9-4.9,5.7c0,1.6-0.1,3.2-0.1,4.8c0,0.7,0.1,1.5-0.3,2c-1.6,2.1-1.1,4.7-1.1,6.6l0.1,8.3c0,2.5-0.8,4.3-3.1,6C20,49,16.4,61.2,20.1,72.4c3.6,10.9,14.1,18.8,25.6,19.5c0.7,0,1.5,0.1,2.2,0c1,0,1.5,0,2.2,0c11.6-0.7,22-8.6,25.6-19.5C79.6,61.2,76,49,66.4,41.7z M41.8,5.2l6.2,0l6.2,0c0.5,0,1.3,0.3,1.3,1.2c0,0.9-0.5,1.2-1,1.2L48,7.7l-6.5-0.1c-0.5-0.1-1-0.4-1-1.2C40.5,5.4,41.3,5.2,41.8,5.2z M37.6,11.4c3.5-0.1,6.9,0,10.4,0c3.9,0,6.9,0,10.4,0c0.7,0,2.1-0.3,2.1,1.2c0,1.3-1.3,1.4-2.3,1.4c-3,0-5.9,0-8.9,0c-0.4,0-1.3,0-1.3,0c-0.4,0-0.8,0-1.3,0c-3,0-5.9,0-8.9,0c-1,0-2.3,0-2.3-1.3C35.5,11.2,36.9,11.4,37.6,11.4z M60.2,16.8c0,1.1-1.2,1.2-1.9,1.3c-3.2,0.1-6.4,0-9.6,0c-0.3,0-0.8,0-0.8,0c-0.3,0-0.5,0-0.8,0c-3.2,0-6.4,0.1-9.6,0c-0.7,0-1.9-0.1-1.9-1.3c0-1.3,0.8-1.3,1.8-1.3c3.5,0,6.9,0,10.4,0c3.9,0,6.9,0,10.4,0C59.4,15.5,60.2,15.4,60.2,16.8z M66.1,60.7c-0.1,0.5-0.2,0.9-0.4,1.4c-1.5,4.1-3.1,8.2-4.6,12.3c-0.5,1.3-1,2.4-2.5,2.6c-1.5,0.2-2.4-0.7-3.1-1.9C55.3,74.9,48,65,48,65s-7.3,9.9-7.5,10.1c-0.7,1.1-1.6,2-3.1,1.9c-1.5-0.2-2.1-1.3-2.5-2.6c-1.5-4.1-3.1-8.2-4.6-12.3c-0.2-0.5-0.3-0.9-0.4-1.4c-0.3-1.1,0.2-2.4,1.3-2.9c1.6-0.8,2.8-0.1,3.5,1.2c0.5,0.8,0.7,1.7,1.1,2.5c0.8,2.1,1.6,4.2,2.7,7l4.5-6.8c2.4-3.7,3.8-5.4,5.1-5.3c1-0.1,2.7,1.6,5.1,5.3l4.5,6.8c1.1-2.8,1.9-4.9,2.7-7c0.3-0.9,0.6-1.8,1.1-2.5c0.7-1.3,1.9-2,3.5-1.2C65.9,58.4,66.4,59.6,66.1,60.7z"
        },
        {
            name:"tv",
            picpath:"M48,30.3c8.4-8.5,16.8-16.9,25.2-25.4c0.7-0.7,1.4-1.1,2.4-0.9C77.4,4.4,78.2,6.5,77,8c-0.2,0.2-0.4,0.4-0.6,0.6c-7.5,7.5-15,15.1-22.5,22.6c-0.2,0.2-0.4,0.3-0.6,0.4c0,0.1,0.1,0.1,0.1,0.2c0.2,0,0.5,0,0.7,0c11.8,0,23.5,0,35.3,0c0.4,0,0.8,0,1.1,0.1c0.9,0.2,1.6,1.1,1.7,2c0,0.3,0,0.5,0,0.8c0,18.2,0,36.4,0,54.5c0,0.4,0,0.8-0.1,1.1c-0.2,1-1.1,1.7-2.1,1.8c-0.2,0-0.4,0-0.5,0c-27.6,0-55.1,0-82.7,0c-0.4,0-0.7,0-1.1-0.1C4.8,91.9,4.1,91,4,90c0-0.2,0-0.4,0-0.6c0-18.3,0-36.5,0-54.8c0-0.4,0-0.7,0.1-1.1c0.3-1,1.2-1.7,2.2-1.7c0.3,0,0.6,0,0.8,0c11.2,0,22.4,0,33.6,0c0.2,0,0.5,0,0.9,0c-0.2-0.3-0.4-0.4-0.6-0.6c-7.5-7.5-14.9-15-22.4-22.5C18,8,17.6,7.3,17.8,6.4c0.3-1.8,2.4-2.6,3.8-1.5C21.8,5,22,5.2,22.2,5.4c8.2,8.3,16.4,16.5,24.7,24.8l0.7,0.6L48,30.3z M40.2,62.9c0.8,0.8,1.5,1.7,2.3,2.3c2.5,2,5.5,1.5,7.4-1c0.4-0.6,0.9-1.2,1.3-1.8c0.2,0.2,0.3,0.4,0.4,0.5c1.3,1.5,2.7,2.8,4.6,3.5c2.7,1,4.6,0.8,6.3-1.5c0.6-0.7,1-1.5,1.5-2.3c0.6-1,1-2,1.6-2.9c1.1-1.6,0.9-3.6-0.6-4.6c-1.5-1-3.5-0.5-4.5,1.1c-0.8,1.3-1.8,2.5-2.7,3.9c-0.6-0.5-1.1-0.9-1.6-1.4c-0.9-0.9-1.7-1.9-2.7-2.7c-1.5-1.5-3.7-1.3-5,0.4c-1,1.2-2,2.5-3.1,3.8c-0.2-0.3-0.4-0.5-0.6-0.8c-0.5-0.8-1-1.7-1.5-2.5c-0.8-1.2-2.7-1.5-3.9-0.7c-0.6,0.4-1.2,0.9-1.7,1.3c-1,1-1.9,2-3,3c-1.2-1.2-2.2-2.2-3.3-2.8c-0.8-0.4-1.7-0.2-2.3,0.5c-0.8,1-0.4,2.2-0.1,3.2c0.1,0.2,1.2,2.8,1.7,3.9c1.4,2.4,4,3.2,6.1,1.9c1-0.6,1.6-1.7,2.2-2.6C39.5,64,39.9,63.4,40.2,62.9z M71,89.2c1,0,1.8-0.8,1.8-1.8c0-1-0.8-1.9-1.9-1.8c-1,0-1.8,0.9-1.7,1.9C69.2,88.4,70,89.2,71,89.2z M78,85.5c-1,0-1.8,0.8-1.8,1.8c0,1,0.8,1.8,1.8,1.8c1,0,1.8-0.8,1.8-1.8C79.8,86.3,79,85.5,78,85.5z M84.6,89.1c1,0,1.8-0.8,1.8-1.8c0-1-0.8-1.8-1.8-1.8c-1,0-1.8,0.8-1.8,1.8C82.8,88.3,83.6,89.1,84.6,89.1z"
        },
        {
            name:"shoe",
            picpath:"M92,42.4c0-2.3-0.1-4.6-0.6-6.8c-0.7-3-1.6-6-2.8-8.8c-1-2.2-2.9-2.6-4.4-0.7c-1.2,1.6-2.2,3.4-3.2,5.2c-2.1,3.9-5.2,5.6-9.1,5.2c-3.6-0.4-5.7-3-6.8-6.8c-0.4-1.4-0.9-2.9-1.5-4.2c-0.7-1.5-1.9-2.1-3.3-1.4c-2.9,1.5-5.7,3.1-8.6,4.7c-0.4,0.2-0.6,0.8-0.5,1.3c0.4,1.6,0.8,3.1,1.1,4.6c0.4,1.9-0.2,3.2-1.5,3.5c-1.5,0.4-2.4-0.4-2.8-2.4c-0.2-1.1-0.5-2.2-0.8-3.3c-0.2-0.7-0.8-1-1.3-0.7c-1.2,0.6-2.2,1.2-3.2,1.7c-1.9,1-1.9,1-1.4,3.4c0.2,0.8,0.3,1.6,0.5,2.4c0.3,1.8-0.3,2.9-1.6,3.2c-1.4,0.3-2.3-0.4-2.7-2.2c-0.2-0.8-0.3-1.6-0.5-2.4c-0.1-0.7-0.8-1-1.3-0.7c-1.3,0.7-3.4,1.8-4.5,2.3c-0.4,0.2-0.6,0.7-0.5,1.2c0.3,1.2,0.5,2.4,0.7,3.5c0.3,1.6-0.5,2.8-1.7,3.1c-1.2,0.3-2.2-0.5-2.5-2c-0.2-1-0.4-2.1-0.7-3.3c-0.6,0.3-1,0.5-1.4,0.7c-3.5,2.4-7.3,3.3-11.3,2.7c-2.8-0.4-5,1-7.1,2.9C4.8,49.7,4,51,4,54.1c0,0.9,0,1.2,0.1,2.6c0.2,4.2,0.9,12.1,3.6,14c2.5,1.8,5.3,1.9,8.1,1.9c22.1,0,44.3,0,66.4,0c5.7,0,9.8-4.6,9.8-11C92,57.1,92,47,92,42.4z M82.7,68.4c-25.2,0.1-45.9,0.3-70.4,0.4c-0.5,0-1-0.5-1-1.1l0-0.5c0-0.6,0.4-1.1,1-1.1c12.2,0,23-0.1,35.6-0.1c12.6,0,22.2-0.1,34.8-0.1c0.5,0,1,0.5,1,1.1l0,0.4C83.6,67.9,83.2,68.4,82.7,68.4z"
        },
        {
            name:"thermometer",
            picpath:"M57.4,37.8c0,7.9,0.1,15.9,0,23.8c0,2.2,0.6,3.8,2.3,5.4c4.6,4.4,5.6,10.8,2.8,16.3c-2.7,5.5-8.7,8.9-15.1,8.5c-6.4-0.3-11.9-4.3-13.9-10.1c-1.9-5.4-0.8-10.4,3.2-14.6c1.4-1.4,1.8-2.8,1.8-4.6c-0.1-16.2,0.2-32.5-0.2-48.7C38.3,8.7,41.3,4,48.8,4c0,0,0.1,0,0.1,0c5.3,0.3,7.9,3.4,8.3,8c0.2,1.7,0.1,3.5,0.1,5.2C57.4,24.1,57.4,30.9,57.4,37.8C57.4,37.8,57.4,37.8,57.4,37.8z M46.7,86.4c-0.8,0-1.2,1-0.5,1.5c0.1,0,0.1,0.1,0.2,0.1c4.7,1,9.2-0.3,12-3.4 c2.6-3.6,2.4-8.1,0.1-11.6c0,0-0.1-0.1-0.1-0.1c-0.6-0.4-1.5,0.2-1.3,0.9c0.4,2.2,1,4.2,0.9,6.2c-0.1,2.8-2.3,4.6-4.8,5.8C51.3,86.6,49,86.2,46.7,86.4z M40,35.7c0,0.5,0.4,0.9,0.9,0.9c1.2,0,2.2,0,3.2,0c1.5,0,2.4-0.9,2.5-2.2c0-1.4-1-2.2-2.4-2.2C43.1,32,42.1,32,41,32c-0.5,0-0.9,0.4-0.9,0.8C40.1,33.7,40,34.7,40,35.7z M40.1,26.6v2.6c0,0.5,0.4,0.8,0.9,0.8c1.2,0,2.4,0,3.4,0c1.4-0.1,2.2-1,2-2.2c-0.2-0.8-1-1.8-1.8-2c-1.1-0.3-2.3-0.2-3.6-0.1C40.5,25.8,40.1,26.2,40.1,26.6z M40.1,48.3c0,0.5,0.4,0.8,0.9,0.8c1.4,0,2.7,0.2,3.9-0.1c0.7-0.2,1.7-0.6,1.6-2.1c0-1.1-1.1-1.7-1.8-1.9c-1.1-0.3-2.4-0.2-3.7-0.1c-0.5,0-0.9,0.4-0.9,0.8V48.3z M40.1,42.1c0,0.4,0.4,0.8,0.9,0.8c1.2,0,2.5,0.1,3.7,0c1.3-0.1,1.8-0.4,1.9-2.3c0-1.5-1-1.7-1.7-2c-0.1,0-0.2-0.1-0.3-0.1C39.7,38.4,39.9,37.7,40.1,42.1z"
        },
      
        

    

        
    ];
   


    // Encoding
     const encoding = props.spec.encoding;
     let style=props.spec.style;

     let pictogram=style.pictogram;
     let styletype=props.stylelayout;

     if(_.isEmpty(encoding)||!('size' in encoding) || _.isEmpty(encoding.size) || !('color' in encoding) || _.isEmpty(encoding.color)){
        
        svg.append("rect")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .attr("fill", "pink");
        return svg;
     }
/*******************************************************************************/
    if(styletype==="unit"){

            svg.append("defs")
            .append("g")
            .attr("id",pictogram)
            .append("path")
            .attr("d",function(){
                var obj = pictorialtype.find(function (obj) {
                    return obj.name === pictogram
                })
                return obj.picpath; 
            })     

            let typesizexx=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
            let typesizeyy=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
         
            let area11=typesizexx*typesizeyy;
            let area12=20*20
            let scaleorign=Math.sqrt(area12/area11)  
            let scale1;
            svg.select(`#${pictogram}`)
            .attr("transform", function(){
                  scale1=Math.sqrt(area12/area11) 
                    return  `scale(${scale1})`
            })
        
            let typesizex=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
            let typesizey=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
            let typex=svg.select(`#${pictogram}`).node().getBBox().x;
            let typey=svg.select(`#${pictogram}`).node().getBBox().y;

        //specify the number of columns and rows for pictogram layout
        let numCols = 10;
        let numRows = 10;

        //padding for the grid
        let xPadding = 10;
        let yPadding = 15;

        //horizontal and vertical spacing between the icons
        let hBuffer = 30;
        let wBuffer = 45;

        //generate a d3 range for the total number of required elements
        let myIndex = d3.range(numCols * numRows);

        svg.append("g")
            .attr("id", "pictoLayer")
            .selectAll("use")
            .data(myIndex)
            .enter()
            .append("use")
            .attr("xlink:href", "#"+pictogram)
            .attr("id", function(d) {
                return "icon" + d;
            })
            .attr("x", function(d) {
                let remainder = d % numCols; //calculates the x position (column number) using modulus
                return width/5+xPadding + (remainder * wBuffer)-Math.abs(typex*scale1); //apply the buffer and return value
            })
            .attr("y", function(d) {
                let whole = Math.floor(d / numCols) //calculates the y position (row number)
                return height/3+yPadding + (whole *(typesizey+10))-Math.abs(typey*scale1); //apply the buffer and return the value
            })
            .classed("iconPlain", true);
         

            
        // Process Data
        // const data = props.data;
        let data=props.data;
        data=getAggregatedRows(data,encoding);
        //Get categories
        let dataCategories = getCategories(data, encoding);
        let categories = Object.keys(dataCategories);

        //Color channel
        let color;
        let style = props.spec.style;
        let colorset = props.colormap;
        if('color' in encoding){
            // let colorScale=d3.scaleOrdinal(d3.schemeCategory10);
            let colorScale=d3.scaleOrdinal(colorset);
            color=colorScale.domain(data.map(function(d){return d[encoding.color.field];}));
        }

    
        //Compute the percent
    
        let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
        let colortype=data.map(d=>d[encoding.color.field]);
        // console.log(colortype);
   

        let datalen=colortype.length;
    
        let sum=0;
        let datapercent=[];
        for(let i=0;i<datalen;i++){
            sum+=pictorialdata[i];
        }
        for(let i=0;i<datalen;i++){
            datapercent.push(Math.round(pictorialdata[i]/sum*100) );
        }
       
        d3.selectAll("use")
        .attr("fill", function(d) {
            let nowsum=0;
            for(let i=0;i<datalen;i++){
                if(d>=nowsum && d<datapercent[i]+nowsum){
                    return color(colortype[i]);
                }else{
                    nowsum+=datapercent[i];
                    continue;
                }
            
            }
        })
        .attr("class",function(d){
            let nowsum=0;
            for(let i=0;i<datalen;i++){
                if(d>=nowsum && d<datapercent[i]+nowsum){
                    return "icon"+i;
                }else{
                    nowsum+=datapercent[i];
                    continue;
                }
            
            }
        
        });
        //legend
        const legend=svg.append("g");
        var legends=legend.selectAll("legend_color")
        .data(categories)
        .enter()
        .append("g")
        .attr("class","legend_color")
        .attr('transform',(d,i)=>`translate(${-15},0)`);

        // legends.append("rect")
        // .attr("fill",d=>color(d))
        // .attr('x',15)
        // .attr('y',-10)
        // .attr("width","10px")
        // .attr("height","10px")
        // .attr("rx",1.5)
        // .attr("ry",1.5);

        legends.append("use")
        .attr("fill",d=>color(d))
        .attr("xlink:href", "#"+pictogram)
        .attr("x", function(d) {
            return 15-Math.abs(typex*scale1); 
        })
        .attr("y", function(d) {
            return -15-Math.abs(typey*scale1); 
        })

        legends.append("text")
        .attr("fill",config["legend-text-color"])
        .attr("x",40)
        .text(d=>d);

        let legend_nodes=legends.nodes();
        let before=legend_nodes[0];
        let current;
        let offset=-15;

        for(let i=1;i<legend_nodes.length;i++){
            current=legend_nodes[i];
            if(d3.select(before).select("text").node().getComputedTextLength()){
                offset+=d3.select(before).select("text").node().getComputedTextLength();
            }else{
                offset+=getWidth(categories[i-1])
            }
            d3.select(current)
            .attr("transform",`translate(${i*30+offset},0)`);
            before=current;
        }
        if(legend.node().getBBox().width){
            legend.attr("transform",`translate(${(width-legend.node().getBBox().width)/2+20},${height+140})`);

            }else{
            offset += getWidth(categories[categories.length-1]);
            legend.attr("transform", `translate(${(width - offset - 30 * categories.length + 20)/2}, ${height + 140})`);
        }

   

     }

/**********************************************************************************************************************************/
   
     if(styletype==="percent"){
        svg.append("defs")
        .append("g")
        .attr("id",pictogram)
        .append("path")
        .attr("d",function(){
            var obj = pictorialtype.find(function (obj) {
                return obj.name === pictogram
            })
            return obj.picpath; 
        })

        let typesizex1=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
        let typesizey1=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;

        svg.select(`#${pictogram}`)
        .attr("transform", function(){
              let area11=typesizex1*typesizey1
              let area12=770
              let scale1=Math.sqrt(area12/area11)
               // scale1.push(x.bandwidth()/typesizey1)
                return  `scale(${scale1})`

            
        });
        //specify the number of columns and rows for pictogram layout
        let numCols = 10;
        let numRows = 1;

        //padding for the grid
        let xPadding =10;
        //let yPadding = 15;

        //horizontal and vertical spacing between the icons
        //let hBuffer = 30;
        let wBuffer = 35;

        //generate a d3 range for the total number of required elements
        let myIndex = d3.range(numCols * numRows);

        //Process Data
        let data=props.data;
        data=getAggregatedRows(data,encoding);

        //Get categories
       let dataCategories=getCategories(data,encoding);
       let categories=Object.keys(dataCategories);

       let style = props.spec.style;
       let colorset = style.colorset;
        //Color channel
        let color;
        if('color' in encoding){
            let colorScale=d3.scaleOrdinal(colorset);
            color=colorScale.domain(data.map(function(d){
                return d[encoding.color.field];
            }));
        }

        //Compute the percent
        let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
        let colortype=data.map(d=>d[encoding.color.field]);

        let colorlen=colortype.length;


          // Define the gradient
          let gradient=[];
          for(let i=0;i<colorlen;i++){
            gradient[i] = svg.append("svg:defs")
            .append("svg:linearGradient")
            .attr("id", function(){
                return "icontype"+i;
            })
            .attr("spreadMethod", "pad");
  
           // Define the gradient colors
           gradient[i].append("svg:stop")
            .attr("offset", "0%")
            .attr("stop-color", function(){
                return color(colortype[i]);
            })
            .attr("stop-opacity", 1);
          }
         
          let total = numCols * numRows;
          let valuePict =[];
          let valueDecimal = [];
          let pictorialdatamax=d3.max(pictorialdata);
          for(let i=0;i<colorlen;i++){   
             // valuePict[i]=total*(datapercent[i]/100);
             valuePict[i]=(pictorialdata[i]*total/pictorialdatamax).toFixed(1);
             
              valueDecimal[i]=(valuePict[i]%1);
          
          }

        for(let i=0;i<colorlen;i++){
            let typeindex=i*60;
            svg.append("g")
            .attr("id", function(){
                return "icon"+colortype[i];
            })
            .selectAll("use")
            .data(myIndex)
            .enter()
            .append("use")
            .attr("xlink:href", "#"+pictogram)
            .attr("id", function(d) {
                return "icon" + d;
            })
            .attr("x", function(d) {
                let remainder = d % numCols; //calculates the x position (column number) using modulus
                return width/5+70+xPadding + (remainder * wBuffer); //apply the buffer and return value
            })
            .attr("y", function(d) {
                return height/2+typeindex; //apply the buffer and return the value
            })
            // .classed("iconPlain", true);
            .attr("class",function(){
                return "icontype"+i;
            });

            svg.append("text")
            .attr("x",width/5)
            .attr("y",height/2+23+typeindex)
            .attr("fill",color(colortype[i]))
            .attr("font-size",20)
            .attr('text-anchor',"end")
            .text(categories[i]);

            svg.append("text")
            .attr("x",width+50)
            .attr("y",height/2+23+typeindex)
            .attr("fill",color(colortype[i]))
            .attr("font-size",20)
            //.attr('text-anchor',"middle")
            .text("| "+pictorialdata[i].toFixed(1));
        }


        //Fill the color
        
     
        for(let i=0;i<colorlen;i++){
            d3.selectAll(".icontype"+i)
            .attr("fill", function(d) {
               
            if (d <= valuePict[i] - 1) {

                return color(colortype[i]);

            } else if (d > (valuePict[i] - 1) && d < (valuePict[i])) {
                gradient[i].append("svg:stop")
                    .attr("offset", (valueDecimal[i] * 100) + '%')
                    .attr("stop-color", color(colortype[i]))
                    .attr("stop-opacity", 1);
                gradient[i].append("svg:stop")
                    .attr("offset", (valueDecimal[i] * 100) + '%')
                    .attr("stop-color", "#9e9e9e")
                    .attr("stop-opacity", 1);
                gradient[i].append("svg:stop")
                    .attr("offset", '100%')
                    .attr("stop-color", "#9e9e9e")
                    .attr("stop-opacity", 1);
                return "url(#icontype"+i+")";
            } else {
                //return cardcolor;
                return "#9e9e9e";
            }
        });
        }

     }
/*********************************************************************************** */ 
 if(styletype==="percent1"){
    svg.append("defs")
    .append("g")
    .attr("id",pictogram)
    .append("path")
    .attr("d",function(){
        var obj = pictorialtype.find(function (obj) {
            return obj.name === pictogram
        })
        return obj.picpath; 
    })

    let typesizex1=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizey1=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;

    svg.select(`#${pictogram}`)
    .attr("transform", function(){
          let area11=typesizex1*typesizey1
          let area12=770
          let scale1=Math.sqrt(area12/area11)
           // scale1.push(x.bandwidth()/typesizey1)
            return  `scale(${scale1})`

        
    });
    //specify the number of columns and rows for pictogram layout
    let numCols = 10;
    let numRows = 1;

    //padding for the grid
    let xPadding =10;
    //let yPadding = 15;

    //horizontal and vertical spacing between the icons
    //let hBuffer = 30;
    let wBuffer = 35;


    //Process Data
    let data=props.data;
    data=getAggregatedRows(data,encoding);

    //Get categories
   let dataCategories=getCategories(data,encoding);
   let categories=Object.keys(dataCategories);

   let style = props.spec.style;
   let colorset = style.colorset;
    //Color channel
    let color;
    if('color' in encoding){
        let colorScale=d3.scaleOrdinal(colorset);
        color=colorScale.domain(data.map(function(d){
            return d[encoding.color.field];
        }));
    }

    //Compute the percent
    let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
    let colortype=data.map(d=>d[encoding.color.field]);

    let colorlen=colortype.length;


      // Define the gradient
      let gradient=[];
      for(let i=0;i<colorlen;i++){
        gradient[i] = svg.append("svg:defs")
        .append("svg:linearGradient")
        .attr("id", function(){
            return "icontype"+i;
        })
        .attr("spreadMethod", "pad");

       // Define the gradient colors
       gradient[i].append("svg:stop")
        .attr("offset", "0%")
        .attr("stop-color", function(){
            return color(colortype[i]);
        })
        .attr("stop-opacity", 1);
      }
     
      let total = numCols * numRows;
      let valuePict =[];
      let valueDecimal = [];
      let pictorialdatamax=d3.max(pictorialdata);
      let zhengshuvalue=[];
      let myIndex=[];
      for(let i=0;i<colorlen;i++){   
         // valuePict[i]=total*(datapercent[i]/100);
        valuePict[i]=(pictorialdata[i]*total/pictorialdatamax).toFixed(1);
         
        valueDecimal[i]=(valuePict[i]%1);
        zhengshuvalue[i]=Math.ceil(valuePict[i]);
        myIndex[i]=d3.range(zhengshuvalue[i] * numRows)
      }

      

    for(let i=0;i<colorlen;i++){
        let typeindex=i*60;
        svg.append("g")
        .attr("id", function(){
            return "icon"+colortype[i];
        })
        .selectAll("use")
        .data(myIndex[i])
        .enter()
        .append("use")
        .attr("xlink:href", "#"+pictogram)
        .attr("id", function(d) {
            return "icon" + d;
        })
        .attr("x", function(d) {
            let remainder = d % numCols; //calculates the x position (column number) using modulus
            return width/5+70+xPadding + (remainder * wBuffer); //apply the buffer and return value
        })
        .attr("y", function(d) {
            return height/2+typeindex; //apply the buffer and return the value
        })
        // .classed("iconPlain", true);
        .attr("class",function(){
            return "icontype"+i;
        });

        svg.append("text")
        .attr("x",width/5)
        .attr("y",height/2+23+typeindex)
        .attr("fill",color(colortype[i]))
        .attr("font-size",20)
        .attr('text-anchor',"end")
        .text(categories[i]);

        svg.append("text")
        .attr("x",width+50)
        .attr("y",height/2+23+typeindex)
        .attr("fill",color(colortype[i]))
        .attr("font-size",20)
        //.attr('text-anchor',"middle")
        .text("| "+pictorialdata[i].toFixed(1));
    }


    //Fill the color
    
 
    for(let i=0;i<colorlen;i++){
        d3.selectAll(".icontype"+i)
        .attr("fill", function(d) {
           
        if (d <= valuePict[i] - 1) {

            return color(colortype[i]);

        } else if (d > (valuePict[i] - 1) && d < (valuePict[i])) {
            gradient[i].append("svg:stop")
                .attr("offset", (valueDecimal[i] * 100) + '%')
                .attr("stop-color", color(colortype[i]))
                .attr("stop-opacity", 1);
            gradient[i].append("svg:stop")
                .attr("offset", (valueDecimal[i] * 100) + '%')
                .attr("stop-color", cardcolor)
                .attr("stop-opacity", 1);
            gradient[i].append("svg:stop")
                .attr("offset", '100%')
                .attr("stop-color", cardcolor)
                .attr("stop-opacity", 1);
            return "url(#icontype"+i+")";
        } else {
            return cardcolor;
            //return "#9e9e9e";
        }
    });
    }

 }


/******************************************************************************/ 
    if(styletype==="area"){

        svg.append("defs")
        .append("g")
        .attr("id",function(){
            return pictogram;
        })
        .append("path")
        .attr("d",function(){
            var obj = pictorialtype.find(function (obj) {
                return obj.name === pictogram
            })
            return obj.picpath;
        })

        let typesizexx=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
        let typesizeyy=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;

        
        //Process Data
        let data=props.data;
        data=getAggregatedRows(data,encoding);

         //Get categories
         let dataCategories=getCategories(data,encoding);
         let categories=Object.keys(dataCategories);
      
        //Color channel
        let style = props.spec.style;
        let colorset = style.colorset;
        let color;
        if('color' in encoding){
            let colorScale=d3.scaleOrdinal(colorset);
            color=colorScale.domain(data.map(function(d){
                return d[encoding.color.field];
            }));
        }

        let x = d3.scaleBand()
        .range([100, width])
        .domain(data.map(function (d) { return d[encoding.color.field]; }))
        .padding(0.2);

        //Compute the scale
        let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
        let colortype=data.map(d=>d[encoding.color.field]);
        let colorlen=colortype.length;

        let area11=typesizexx*typesizeyy;
        let area12=x.bandwidth()*x.bandwidth()
        let scaleorign=Math.sqrt(area12/area11)  
       //  console.log("a平方："+area12)
        // let sum=0;
        // let datapercent=[];
        // for(let i=0;i<colorlen;i++){
        //     sum+=pictorialdata[i];
        // }
        // for(let i=0;i<colorlen;i++){
        //     datapercent.push(parseFloat((pictorialdata[i]/sum*100).toFixed(1)));
        // }
       
        let picdata=[];

        for(let i=0;i<colorlen;i++){
            picdata[i]=parseInt(pictorialdata[i])
        }

      

        let scale1=[];

        let yScale = d3.scaleLinear() 
            .domain([0, d3.max(picdata)])
            .range([0,scaleorign]);
     
        for(let i=0;i<colorlen;i++){
            svg.append("defs")
            .append("g")
            .attr("id",function(){
                let type=pictogram+i
                return `${type}`
            })
            .append("path")
            .attr("d",function(){
                var obj = pictorialtype.find(function (obj) {
                    return obj.name === pictogram
                })
                return obj.picpath;
            })
            .attr("transform", function(){
                scale1.push(yScale(picdata[i]));
                return `scale(${scale1[i]})`;
            });
            
        }
          
        svg.selectAll("use")
        .data(data)
        .enter()
        .append("use")
        .attr("xlink:href",function(d,i){
            let type=pictogram+i
            return `#${type}`
        })
        .attr("class",function(d,i){
            return `icon${i}`;
        }) 
        .attr("fill",function(d,i){            
            return color(colortype[i])
        })

        let typesizex=[];
        let typesizey=[];
        let typex=[];
        let typey=[];

        for(let i=0;i<colorlen;i++){
             typesizex[i]=svg.select(`.icon${i}`).node().getBoundingClientRect().width;
             typesizey[i]=svg.select(`.icon${i}`).node().getBoundingClientRect().height;
             typex[i]=svg.select(`.icon${i}`).node().getBBox().x;
             typey[i]=svg.select(`.icon${i}`).node().getBBox().y;
            }
       
         
            let afterIconIndexy=[];
        svg.selectAll("use")
           .attr("x", function(d, i) {
              
            // let xsum=0;
            // let empty=0
            // if(typesizexx<50) empty=80;
            // else empty=30;
            // while(i>0){

            //            xsum+=typesizex[--i]+empty;
            //        }                     
            //     return xsum+50;   
            console.log(scale1[i])
            return 40+ x.bandwidth()/2+x(d[encoding.color.field])-Math.abs(typex[i]*scale1[i])-typesizex[i]/2
            //return x.bandwidth()/2-Math.abs(typex[i]*scale1[i])-typesizex[i]/2+x(d[encoding.color.field])
        })
          .attr("y", function(d, i) {
              
               
                let j=(d3.max(typesizey)-typesizey[i])/2 //使得所有的中心在一条线上  
                // afterIconIndexy.push(height/4*3-Math.abs(typey[i]*scale1[i])-typesizey[i]/2) 
                afterIconIndexy.push(height-Math.abs(typey[i]*scale1[i])-typesizey[i])         
                return afterIconIndexy[i];
       
       
        })


        let textpercent1=svg.append("g").attr("id","text1")
        let textpercent2=svg.append("g").attr("id","text2")
         textpercent1.selectAll("text")
         .data(data)
         .enter()
         .append("text")
         .text((function(d,i) {
             return categories[i];
         } ))
         .attr("fill","white")
         .attr("x", function (d,i) { 
             return x.bandwidth()/2+x(d[encoding.color.field])+50; })
         .attr("text-anchor","middle")   
         .attr("y", function (d,i) { 
          return d3.max(afterIconIndexy)+d3.max(typesizey);
         })
     
         textpercent2.selectAll("text")
         .data(data)
         .enter()
         .append("text")
         .text((function(d,i) {
            return pictorialdata[i].toFixed(2);
         } ))
         .attr("fill","white")
         .attr("x", function (d,i) { 
             return x.bandwidth()/2+x(d[encoding.color.field])+50; })
         .attr("text-anchor","middle")   
         .attr("y", function (d,i) { 
          // return d3.max(afterIconIndexy)-30;
          return afterIconIndexy[i]-10;
         })






      

    }

/************************************************************************************/
    if(styletype==="stacked"){

        svg.append("defs")
            .append("g")
            .attr("id",function(){
                return `${pictogram}1`
            })
            .append("path")
            .attr("d",function(){
                var obj = pictorialtype.find(function (obj) {
                    return obj.name === pictogram
                })
                return obj.picpath;
            })
           // .attr("stroke","black")
           // .attr("stroke-width","2px")
           // .attr("transform", 'scale(1.5)');
            // .attr("transform", 'scale(3)');
            
        let typesizex1=svg.select(`#${pictogram}1`).node().getBoundingClientRect().width;
        let typesizey1=svg.select(`#${pictogram}1`).node().getBoundingClientRect().height;
       // console.log(svg.select(`#${pictogram}1`).node().getBBox().x)

        svg.select(`#${pictogram}1`)
        .attr("transform", function(){
            if(typesizex1>typesizey1)
            return  `scale(${320/typesizex1})`
            else
            return  `scale(${270/typesizey1})`
        });
        //let typesizey=svg.select(`#${pictogram}1`).node().getBoundingClientRect().height;

        //Append pictogram
        svg.append("g")
        .attr("id","pictoLayer")
        .append("use")
        .attr("xlink:href",`#${pictogram}1`)
        .attr("id",pictogram)
        .attr("class","iconPlain")
      

        let typesizex=svg.select("#pictoLayer").node().getBoundingClientRect().width;
        let typesizey=svg.select("#pictoLayer").node().getBoundingClientRect().height;
        let typex=svg.select(`#pictoLayer`).node().getBBox().x;
        let typey=svg.select(`#pictoLayer`).node().getBBox().y;
       // console.log(svg.select(`#pictoLayer`).node().getBBox().x)

        //Transform    
         svg.select(".iconPlain")
         .attr("x",width/2-typesizex/2)
         .attr("y",height/2-typesizey/2+80)  
        //  .attr("x",158)
        //  .attr("y",95)  
        // .attr("transform",function(){
        //     return "translate("+width/2-typex*3+","+height/3-typey+")";
        // })
    //     .attr("x",width/2-typex*3)
    //    .attr("y",height/3-typey)   
        // svg.select(".iconPlain")
        // .attr("x",function(){
        //     if(typesizex<120)  return width/2-typesizex/2-80;
        //     if(typesizex>=120&&typesizex<150)  return width/2-typesizex/2-60;
        //     if(typesizex>=150&&typesizex<200)  return width/2-typesizex/2-40;
        //     if(typesizex>=200) return width/2-typesizex/2;
           
        // })
        // .attr("y",height/3-25)


        //Process Data
        let data=props.data;
        data=getAggregatedRows(data,encoding);
        //Get categories
        let dataCategories=getCategories(data,encoding);
        let categories=Object.keys(dataCategories);
        //Color channel
        let color;
        if('color'in encoding){
            let colorScale=d3.scaleOrdinal(d3.schemeCategory10);
            color=colorScale.domain(data.map(function(d){
                return d[encoding.color.field];
            }));
        }

        let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
        let colortype=data.map(d=>d[encoding.color.field]);
        let colorlen=colortype.length;
        
        //Define the gradient
        let gradient=svg.append("svg:defs")
        .append("svg:linearGradient")
        .attr("id","icon1")
        .attr("x1","0")
        .attr("y1", "1")
        .attr("x2","0")
        .attr("y2", "0")
        .attr("spreadMethod","pad");

        //Define the gradient colors
        gradient.append("svg:stop")
        .attr("offset","0%")
        .attr("stop-color",function(){
            return color(colortype[0]);
        })
        .attr("stop-opacity",1);

        //Compute the percent
        let sum=0;
        let datapercent=[];
        for(let i=0;i<colorlen;i++){
            sum+=pictorialdata[i];
        }
        for(let i=0;i<colorlen;i++){
            datapercent.push(parseFloat((pictorialdata[i]/sum*100).toFixed(1)));
        }
        let sumpercent=[];
        for(let i=0;i<colorlen;i++){
            let k=i;
            sumpercent[i]=0;
            while(k>=0){
                sumpercent[i]+=datapercent[k];
                k--;
            }
        }

        d3.selectAll("use")
        .attr("fill",function(d){
            for(let i=0;i<colorlen-1;i++){
                gradient.append("svg:stop")
                .attr("offset",function(){
                    return sumpercent[i]+"%";
                })
                .attr("stop-color",function(){
                    return color(colortype[i]);
                })
                .attr("stop-opacity",1);
                gradient.append("svg:stop")
                .attr("offset",function(){
                    return sumpercent[i]+"%";
                })
                .attr("stop-color",function(){
                    return color(colortype[i+1]);
                })
                .attr("stop-opacity",1);

            }
            gradient.append("svg:stop")
            .attr("offset","100%")
            .attr("stop-color",`${color(colortype[colorlen-1])}`)
            return "url(#icon1)";
        })
 

      let flag=false;
        for(var i=0;i<colorlen;i++){
        if (Math.abs(datapercent[i]-datapercent[i+1])<=1){
            flag=true;//含有相近值
            }
        }
      
      
        //Append TEXT
        for(let i=0;i<colorlen;i++){
            let stackedit=0              //应该在for循环外面
          if(flag===false){
            svg.append("line")
            .attr("x1",function(){
               if(typesizex<=200) return width/2+100
               if(typesizex>200) return width/2+150
            })
            .attr("y1",function(){
                if(typesizey<=150) return height+61-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                if(typesizey>150&&typesizey<190) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                if(typesizey>190&&typesizey<210) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                if(typesizey>210&&typesizey<218) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                if(typesizey>=218&&typesizey<220) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                if(typesizey>220&&typesizey<=260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                if(typesizey>260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
      
            })
            .attr("x2",function(){
                if(typesizex<=200) return width/2+200
                if(typesizex>200) return width/2+250
            })
            .attr("y2",function(){
                if(typesizey<=150) return height+61-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                if(typesizey>150&&typesizey<190) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                if(typesizey>190&&typesizey<210) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                if(typesizey>210&&typesizey<218) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                if(typesizey>=218&&typesizey<220) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                if(typesizey>220&&typesizey<=260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                if(typesizey>260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
           
            })
            .style("stroke",color(colortype[i]))

            svg.append("text")
            .attr("direction","rtl")
            .attr("x",function(){
                if(typesizex<=200) return width/2+252
                if(typesizex>200) return width/2+302
            })
            .attr("y",function(){
                if(typesizey<=150) return height+66-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                if(typesizey>150&&typesizey<190) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                if(typesizey>190&&typesizey<210) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                if(typesizey>210&&typesizey<218) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                if(typesizey>=218&&typesizey<220) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                if(typesizey>220&&typesizey<=260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                if(typesizey>260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
               //return height-i*20;
                //return yyy(i)+160
            })
            .attr("fill",function(){
                return color(colortype[i]);
            })
            .attr("font-size",20)
            .text(`${datapercent[i].toFixed(1)}%`);
        }
          

          if(flag===true){
             
            if (Math.abs(datapercent[i]-datapercent[i+1])<=1 && datapercent[i]+5<100/parseFloat(colorlen) ){
                stackedit++;
                svg.append("line")
                .attr("x1",function(){
                   if(typesizex<=200) return width/2+100
                   if(typesizex>200) return width/2+150
                })
                .attr("y1",function(){
                    if(typesizey<=150) return height+61-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                    if(typesizey>150&&typesizey<190) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                    if(typesizey>190&&typesizey<210) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                    if(typesizey>210&&typesizey<218) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                    if(typesizey>=218&&typesizey<220) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                    if(typesizey>220&&typesizey<=260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                    if(typesizey>260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
       
                })
                .attr("x2",function(){
                    if(typesizex<=200) return width/2+100
                    if(typesizex>200) return width/2+150
                })
                .attr("y2",function(){
                    if(typesizey<=150) return height+66-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                    if(typesizey>150&&typesizey<190) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                    if(typesizey>190&&typesizey<210) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                    if(typesizey>210&&typesizey<218) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                    if(typesizey>=218&&typesizey<220) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                    if(typesizey>220&&typesizey<=260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                    if(typesizey>260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
               
                })
                .style("stroke",color(colortype[i]))



                svg.append("line")
                .attr("x1",function(){
                    if(typesizex<=200) return width/2+100
                    if(typesizex>200) return width/2+150 
                })
                .attr("y1",function(){
                    if(typesizey<=150) return height+66-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                            if(typesizey>150&&typesizey<190) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                            if(typesizey>190&&typesizey<210) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                            if(typesizey>210&&typesizey<218) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                            if(typesizey>=218&&typesizey<220) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                            if(typesizey>220&&typesizey<=260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                            if(typesizey>260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
                })
                .attr("x2",function(){
                    if(typesizex<=200) return width/2+250+stackedit*30
                    if(typesizex>200) return width/2+300+stackedit*30
                })
                    .attr("y2",function(){
                        if(typesizey<=150) return height+66-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                            if(typesizey>150&&typesizey<190) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                            if(typesizey>190&&typesizey<210) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                            if(typesizey>210&&typesizey<218) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                            if(typesizey>=218&&typesizey<220) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                            if(typesizey>220&&typesizey<=260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                            if(typesizey>260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
                    })
                        //.style("stroke",color(colortype[i]))
                        .style("stroke",color(colortype[i]))

                    svg.append("text")
                    .attr("direction","rtl")
                    .attr("x",function(){
                        if(typesizex<=200) return width/2+302+stackedit*30
                        if(typesizex>200) return width/2+352+stackedit*30
                    })
                    .attr("y",function(){
                        if(typesizey<=150) return height+71-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                        if(typesizey>150&&typesizey<190) return height+71-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                        if(typesizey>190&&typesizey<210) return height+71-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                        if(typesizey>210&&typesizey<218) return height+71-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                        if(typesizey>=218&&typesizey<220) return height+71-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                        if(typesizey>220&&typesizey<=260) return height+71-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                        if(typesizey>260) return height+71-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
                    })
                    .attr("fill",function(){
                        return color(colortype[i]);
                    })
                    .attr("font-size",20)
                    .text(`${datapercent[i].toFixed(1)}%`);
                }
              else{
                  stackedit=0;
                svg.append("line")
                .attr("x1",function(){
                   if(typesizex<=200) return width/2+100
                   if(typesizex>200) return width/2+150
                })
                .attr("y1",function(){
                    if(typesizey<=150) return height+61-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                    if(typesizey>150&&typesizey<190) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                    if(typesizey>190&&typesizey<210) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                    if(typesizey>210&&typesizey<218) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                    if(typesizey>=218&&typesizey<220) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                    if(typesizey>220&&typesizey<=260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                    if(typesizey>260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
             
                })
                .attr("x2",function(){
                    if(typesizex<=200) return width/2+200
                    if(typesizex>200) return width/2+250
                })
                .attr("y2",function(){
                    if(typesizey<=150) return height+61-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                    if(typesizey>150&&typesizey<190) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                    if(typesizey>190&&typesizey<210) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                    if(typesizey>210&&typesizey<218) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                    if(typesizey>=218&&typesizey<220) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                    if(typesizey>220&&typesizey<=260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                    if(typesizey>260) return height+61-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
            
                })
                .style("stroke",color(colortype[i]))
    
                svg.append("text")
                .attr("direction","rtl")
                .attr("x",function(){
                    if(typesizex<=200) return width/2+252
                    if(typesizex>200) return width/2+302
                })
                .attr("y",function(){
                    if(typesizey<=150) return height+66-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
                    if(typesizey>150&&typesizey<190) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
                    if(typesizey>190&&typesizey<210) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
                    if(typesizey>210&&typesizey<218) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
                    if(typesizey>=218&&typesizey<220) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
                    if(typesizey>220&&typesizey<=260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
                    if(typesizey>260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
                 
                })
                .attr("fill",function(){
                    return color(colortype[i]);
                })
                .attr("font-size",20)
                .text(`${datapercent[i].toFixed(1)}%`);
              }

        //     svg.append("line")
        //     .attr("x1",function(){
        //         if(typesizex<=200) return width/2+100
        //         if(typesizex>200) return width/2+150
        //      })
        //     .attr("y1",function(){
        //         if(typesizey<=150) return height+66-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
        //         if(typesizey>150&&typesizey<190) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
        //         if(typesizey>190&&typesizey<210) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
        //         if(typesizey>210&&typesizey<218) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
        //         if(typesizey>=218&&typesizey<220) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
        //         if(typesizey>220&&typesizey<=260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
        //         if(typesizey>260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
        //     })
        //     .attr("x2",function(){
        //         if(typesizex<=200) return width/2+150
        //         if(typesizex>200) return width/2+200
        //      })
        //     .attr("y2",function(){
        //         if(typesizey<=150) return height+66-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
        //         if(typesizey>150&&typesizey<190) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
        //         if(typesizey>190&&typesizey<210) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
        //         if(typesizey>210&&typesizey<218) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
        //         if(typesizey>=218&&typesizey<220) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
        //         if(typesizey>220&&typesizey<=260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
        //         if(typesizey>260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
        //     })
        //     .style("stroke",color(colortype[i]))

        //     svg.append("line")
        //     .attr("x1",function(){
        //         if(typesizex<=200) return width/2+150
        //         if(typesizex>200) return width/2+200
        //      })
        //     .attr("y1",function(){
        //         if(typesizey<=150) return height+66-typesizey*sumpercent[i]/100-58+typesizey*datapercent[i]/200;
        //         if(typesizey>150&&typesizey<190) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-50;
        //         if(typesizey>190&&typesizey<210) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-30;
        //         if(typesizey>210&&typesizey<218) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-16;
        //         if(typesizey>=218&&typesizey<220) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-20;
        //         if(typesizey>220&&typesizey<=260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200-15;
        //         if(typesizey>260) return height+66-typesizey*sumpercent[i]/100+typesizey*datapercent[i]/200;
        //     })
        //     .attr("x2",function(){
        //         if(typesizex<=200) return width/2+150
        //         if(typesizex>200) return width/2+200
        //      })
        //    // .attr("y2",height-i*20)
        //    .attr("y2",yyy(i)+150)
        //     .style("stroke",color(colortype[i]))

        //     svg.append("line")
        //     .attr("x1",function(){
        //         if(typesizex<=200) return width/2+150
        //         if(typesizex>200) return width/2+200
        //      })
        //     //.attr("y1",height-i*20)
        //     .attr("y1",yyy(i)+150)
        //     .attr("x2",function(){
        //         if(typesizex<=200) return width/2+200
        //         if(typesizex>200) return width/2+250
        //      })
        //    // .attr("y2",height-i*20)
        //    .attr("y2",yyy(i)+150)
        //     .style("stroke",color(colortype[i]))

          
        }
    }
         

         
        

        //legend
        const legend=svg.append("g");
        let legends=legend.selectAll("legend_color")
        .data(categories)
        .enter()
        .append("g")
        .attr("class","legend_color")
        .attr('transform',(d,i)=>`translate(${-15},0)`);

        legends.append("rect")
        .attr("fill",d=>color(d))
        .attr('x',25)
        .attr('y',-10)
        .attr("width","10px")
        .attr("height","10px")
        .attr("rx",1.5)
        .attr("ry",1.5);
        legends.append("text")
        .attr("fill",config["legend-text-color"])
        .attr("x",45)
        .text(d=>d);

        let legend_nodes=legends.nodes();
        let before=legend_nodes[0];
        let current;
        let offset=-15;

        for(let i=1;i<legend_nodes.length;i++){
            current=legend_nodes[i];
            if(d3.select(before).select("text").node().getComputedTextLength()){
                offset+=d3.select(before).select("text").node().getComputedTextLength();
            }else{
                offset+=getWidth(categories[i-1])
            }
            d3.select(current)
            .attr("transform",`translate(${i*30+offset},0)`);
            before=current;
        }
        if(legend.node().getBBox().width){
            legend.attr("transform",`translate(${(width-legend.node().getBBox().width)/2},${height+140})`);

            }else{
            offset += getWidth(categories[categories.length-1]);
            legend.attr("transform", `translate(${(width - offset - 30 * categories.length + 20)/2}, ${height + 140})`);
        }
    }
/****************************************************************************************/
    if(styletype==="length"){
        svg.append("defs")
                .append("g")
                .attr("id",function(){
                    return pictogram;
                })
                .append("path")
                .attr("d",function(){
                    var obj = pictorialtype.find(function (obj) {
                        return obj.name === pictogram
                    })
                    return obj.picpath;
                })
                .attr("transform", "scale(0.25)");
                // .attr("transform", "scale(0.5)");

        let data=props.data;
        data=getAggregatedRows(data,encoding);

        let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
        let colortype=data.map(d=>d[encoding.color.field]);
        //let colorlen=colortype.length;


        //X 
        let x = d3.scaleBand()
        .range([0, width])
        .domain(data.map(function (d) { return d[encoding.color.field]; }))
        .padding(0.2);

       // y 
        let y= d3.scaleLinear()
        .domain([0, d3.max(pictorialdata)])
        .nice()
        .range([height, 0]);

        let color;
         if('color' in encoding){
             let colorScale=d3.scaleOrdinal(d3.schemeCategory10);
             color=colorScale.domain(data.map(function(d){return d[encoding.color.field];}));
  
         }

         svg.selectAll(".bar")
         .data(data)
         .enter()
         .append("rect")
         .attr("class","bar")
         .style('stroke-width', '0')
         .attr("x", function (d) { return 50+x(d[encoding.color.field]); })
         .attr("width", x.bandwidth())
         .attr("height", function (d) { return height - y(d[encoding.size.field]); })
         .attr("y", function (d) { return height/2+y(d[encoding.size.field]); })
         .style('fill', function(d){return color(d[encoding.color.field])})
         .style('opacity',0.6)
         .attr("id",function(d,i){
             return pictogram+i
         })

         let typesizex=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
         let typesizey=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;

        var fixitx;
        var fixity;
         svg.append("g")
         .attr("id","pictoLayer")
         .selectAll("use")
         .data(data)
         .enter()
         .append("use")
         .attr("xlink:href",`#${pictogram}`)
         .attr("id",function(d,i){return pictogram+i})
       
         .attr("x", function (d) { 
            return x.bandwidth()/2-typesizex/2+50+x(d[encoding.color.field]); })
         .attr("y", function (d) { return height/2+y(d[encoding.size.field])-typesizey-5; })
         .style('fill', function(d){return color(d[encoding.color.field])})
         .attr("transform",  function(d,i){
            if(typesizex<20)  fixitx=-16
            if(typesizex>20&&typesizex<27) fixitx=-13
            if(typesizex>27&&typesizex<30) fixitx=-10
            if(typesizex>30&&typesizex<36) fixitx=-8
            if(typesizex>36&&typesizex<40) fixitx=-6
            if(typesizex>=40) fixitx=-2;
            if(typesizey<30) fixity=-4;
            if(typesizey>30&&typesizey<40) fixity=0;
            if(typesizey>=40) fixity=3;
           
            return "translate("+fixitx+","+fixity+")"
         })

         svg.selectAll(".line")
         .data(data)
         .enter()
         .append("rect")
         .attr("class","line")
         .style('stroke-width', '0')
         .attr("x", function (d) { 
            return x.bandwidth()/2-typesizex/2+50+x(d[encoding.color.field]); })
         .attr("width", typesizex)
         .attr("height", function (d) { return height - y(d[encoding.size.field]); })
         .attr("y", function (d) { return height/2+y(d[encoding.size.field]); })
         .style('fill', function(d){return color(d[encoding.color.field])})
         .attr("id",function(d,i){
             return pictogram+i
         })

       
        // Axis
        svg.append("g")
        .attr("transform", "translate("+50+"," + height*3/2 + ")")
        .call(d3.axisBottom(x))
        .selectAll("text")
        .attr("transform", "translate(-10,0)rotate(-45)")
        .style("text-anchor", "end");
        svg.append("g")
        .attr("transform", "translate("+50+"," +height/2 + ")")
        .call(d3.axisLeft(y));

         //鼠标移动查看
         let tooltip = d3.select('body')
         .append('div')
         .style('width',"70px")
        //.style('height',"40px")
         .style('position', 'absolute')
         .style("background","black")
       .style('z-index', '10')
         .style('color', 'white')
       .style('visibility', 'hidden')   // invisible at the begining
       .style('font-size', '12px')
         .style('font-weight', 'bold')
         .style('text-align','center')
        // .style('line-height','4px')
         .style('vertical-align','middle')
         .text('')

       svg.selectAll('rect')
       .on("mouseover", function(d, i) {
           let selectedid=d3.select(this).attr('id');
           let indexnum=selectedid.replace(/[^0-9]/ig,"");
                    
           d3.selectAll("use")
           .transition()
           .attr('opacity',"0.3");
           d3.selectAll("#"+selectedid)
           .transition()
           .attr('opacity',"1");

           d3.selectAll("rect")
           .transition()
           .attr('opacity',"0.3");
           d3.selectAll("#"+selectedid)
           .transition()
           .attr('opacity',"1");

          return tooltip.style('visibility', 'visible').text(colortype[indexnum]+" : "+pictorialdata[indexnum].toFixed(2));
          
       })
       .on('mousemove', function (d, i) {
           return tooltip.style('top', (d3.mouse(this)[1]+20)+'px').style('left',(d3.mouse(this)[0]+20+width)+'px')
         })
        
       .on("mouseout", function(d) {
         
           d3.selectAll("use")
           .transition()
           .attr('opacity',"1");
           d3.selectAll("rect")
           .transition()
           .attr('opacity',"1");
           return tooltip.style('visibility', 'hidden')
        
       });


        }
/************************************************************************************************************* */
 if(styletype==="barchart5"){
        //Stroke边框 无series 例子：奥斯卡
            svg.append("defs")
            .append("g")
            .attr("id",pictogram)
            .append("path")
            .attr("d",function(){
                var obj = pictorialtype.find(function (obj) {
                    return obj.name === pictogram
                })
                return obj.picpath; 
            })
            .attr("stroke","white")
            .attr("stroke-width","1px")
            let typesizex1=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
            let typesizey1=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;


            let data=props.data;
            data=getAggregatedRows(data,encoding);

             //Get categories
            let dataCategories=getCategories(data,encoding);
            let categories=Object.keys(dataCategories);
    
            let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
            let colortype=data.map(d=>d[encoding.color.field]);
            let colorlen=colortype.length;
            let scale1;
            //X 
            let x = d3.scaleBand()
                .range([0, width])
                .domain(data.map(function (d) { return d[encoding.color.field]; }))
                .padding(0.2);


            svg.select(`#${pictogram}`)
              .attr("transform", function(){                
                   // scale1.push(x.bandwidth()/typesizey1)
                    scale1=x.bandwidth()/typesizex1;
                    return  `scale(${scale1})`                       
              });

            let typesizex=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
            let typesizey=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
            let typex= svg.select(`#${pictogram}`).node().getBBox().x;
            let typey=svg.select(`#${pictogram}`).node().getBBox().y;
            

               
           //Color channel
           let style = props.spec.style;
           let colorset = style.colorset;
           let color;
           if('color' in encoding){
               let colorScale=d3.scaleOrdinal(colorset);
               color=colorScale.domain(data.map(function(d){
                   return d[encoding.color.field];
               }));
           }
   

            // Define the gradient
            let gradient=[];
            for(let i=0;i<colorlen;i++){
                gradient[i] = svg.append("svg:defs")
                .append("svg:linearGradient")
                .attr("id", function(){
                    return "icontype"+i;
                })
                .attr("x1","0")
                .attr("y1", "1")
                .attr("x2","0")
                .attr("y2", "0")
                .attr("spreadMethod", "pad");

            // Define the gradient colors
            gradient[i].append("svg:stop")
                .attr("offset", "0%")
                .attr("stop-color", function(){
                    return color(0);
                })
                .attr("stop-opacity", 1);
            }

            //Compute the percent
            let valuePict =[];
            let pictorialdatamax=d3.max(pictorialdata);

            for(let i=0;i<colorlen;i++){   
            // valuePict[i]=total*(datapercent[i]/100);
                valuePict[i]=parseFloat(pictorialdata[i]/pictorialdatamax*100).toFixed(1);

            }
 
    svg.append("g")
         .attr("id","pictoLayer")
         .selectAll("use")
         .data(data)
         .enter()
         .append("use")
         .attr("xlink:href",`#${pictogram}`)
         .attr("id",function(d,i){return "icontype"+i})
       
         .attr("x", function (d) { 
            return 50+x.bandwidth()/2-Math.abs(typex*scale1)-typesizex/2+50+x(d[encoding.color.field]); })
         .attr("y", function (d) { return height/4*3-Math.abs(typey*scale1)-typesizey/2; })
        //  .style('fill', function(d){
        //      return color(0);
        //      //return color(d[encoding.color.field])
        //     })
       

        //Fill the color
        for(let i=0;i<colorlen;i++){
        d3.selectAll("#icontype"+i)
        .attr("fill", function(d) {
            gradient[i].append("svg:stop")
                .attr("offset", valuePict[i] + '%')
                .attr("stop-color", color(0))
                .attr("stop-opacity", 1);
            gradient[i].append("svg:stop")
                .attr("offset", valuePict[i] + '%')
                .attr("stop-color", cardcolor)
                .attr("stop-opacity", 1);
            gradient[i].append("svg:stop")
                .attr("offset", '100%')
                .attr("stop-color", cardcolor)
                .attr("stop-opacity", 1);
            return "url(#icontype"+i+")";
        }) 

    }

   let textpercent1=svg.append("g").attr("id","text1")
   let textpercent2=svg.append("g").attr("id","text2")
    textpercent1.selectAll("text")
    .data(data)
    .enter()
    .append("text")
    .text((function(d,i) {
        return categories[i];
    } ))
    .attr("fill","white")
    .attr("x", function (d,i) { 
        return x.bandwidth()/2+x(d[encoding.color.field])+100; })
    .attr("text-anchor","middle")   
    .attr("y", function (d,i) { 
      return  height/4*3+typesizey/2+30;
    })

    textpercent2.selectAll("text")
    .data(data)
    .enter()
    .append("text")
    .text((function(d,i) {
        return pictorialdata[i].toFixed(2);
    } ))
    .attr("fill","white")
    .attr("x", function (d,i) { 
        return x.bandwidth()/2+x(d[encoding.color.field])+100; })
    .attr("text-anchor","middle")   
    .attr("y", function (d,i) { 
      return  height/4*3-Math.abs(typey*scale1)-typesizey/2;
    })


 }

/************************************************************************* */
 if(styletype==="barchart4") {
 //水滴类型

    svg.append("defs")
    .append("g")
    .attr("id",function(){
    return pictogram;
    })
    .append("path")
    .attr("d",function(){
    var obj = pictorialtype.find(function (obj) {
        return obj.name === pictogram
    })
    return obj.picpath;
    })

    let typesizexx=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizeyy=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;


    //Process Data
    let data=props.data;
    data=getAggregatedRows(data,encoding);

    //Get categories
    let dataCategories=getCategories(data,encoding);
    let categories=Object.keys(dataCategories);

    //Color channel
    let style = props.spec.style;
    let colorset = style.colorset;
    let color;
    if('color' in encoding){
    let colorScale=d3.scaleOrdinal(colorset);
    color=colorScale.domain(data.map(function(d){
        return d[encoding.color.field];
    }));
    }

    

    //Compute the scale
    let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
    let colortype=data.map(d=>d[encoding.color.field]);
    let colorlen=colortype.length;

    let x = d3.scaleBand()
    .range([100, width])
    .domain(range(colorlen))
    .padding(0.2);


    let area11=typesizexx*typesizeyy;
    let area12=20*20
    let scaleorign=Math.sqrt(area12/area11)  
    let scale1;
    svg.select(`#${pictogram}`)
    .attr("transform", function(){
          scale1=Math.sqrt(area12/area11) 
            return  `scale(${scale1})`
    })

    let typesizex=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizey=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
    let typex=svg.select(`#${pictogram}`).node().getBBox().x;
    let typey=svg.select(`#${pictogram}`).node().getBBox().y;

    //Padding
    let xpadding=2;
    let ypadding=2;

    //Compute the number
    let total =40;
    let valuePict =[];
    let valueDecimal = [];
    let pictorialdatamax=d3.max(pictorialdata);
    let zhengshuvalue=[];
    let myIndex=[];
    for(let i=0;i<colorlen;i++){   
       // valuePict[i]=total*(datapercent[i]/100);
      valuePict[i]=(pictorialdata[i]*total/pictorialdatamax).toFixed(1);
       
      valueDecimal[i]=(valuePict[i]%1);
      zhengshuvalue[i]=Math.ceil(valuePict[i]);
      myIndex[i]=d3.range(zhengshuvalue[i] )
    }
    let rowa=[];
    for(let a=0;a<colorlen;a++){
        rowa.push(Math.ceil(zhengshuvalue[a]/4)-1);
        svg.append("g")
           .attr("id","pictoLayer")
           .selectAll("use")
           .data(myIndex[a])
           .enter()
           .append("use")
           .attr("xlink:href",`#${pictogram}`)
           .attr("id",(d,i)=>(a+"icon"+i))
           .attr("x",function(d,i){
             
             return d%4*(typesizex+xpadding)-Math.abs(typex*scale1)-typesizex/2+a*40+x(a)-x.bandwidth()/2
            
           })
           .attr("y",function(d,i){
                return height+50-Math.floor(i/4)*(typesizey+ypadding)-Math.abs(typey*scale1)-typesizey/2
           })
           .attr("fill",color(0))
    }

    let textpercent1=svg.append("g").attr("id","text1")
    let textpercent2=svg.append("g").attr("id","text2")
     textpercent1.selectAll("text")
     .data(data)
     .enter()
     .append("text")
     .text((function(d,i) {
         return categories[i];
     } ))
     .attr("fill","white")
     .attr("x", function (d,i) { 
         return x(i)+i*40-x.bandwidth()/2+typesizex/2*3+2; })
     .attr("text-anchor","middle")   
     .attr("y", function (d,i) { 
       return  height+80;
     })
 
     textpercent2.selectAll("text")
     .data(data)
     .enter()
     .append("text")
     .text((function(d,i) {
         return pictorialdata[i].toFixed(2);
     } ))
     .attr("fill","white")
     .attr("x", function (d,i) { 
         return x(i)+i*40-x.bandwidth()/2+typesizex/2*3+2; })
     .attr("text-anchor","middle")   
     .attr("y", function (d,i) { 
       return  height+30-rowa[i]*(typesizey+2);
     })

 }

/********************************************************************************/
  if(styletype==="unit2"){
      let numerator;   //分子
      let denominator; //分母
      function decimalsToFractional(decimals){
        const formatDecimals = decimals.toFixed(1)
        denominator = 10 //初始化分母
        numerator  = formatDecimals * 10 //初始化分子
        let bigger = 0
        function  recursion (){
            bigger = denominator > numerator ? denominator : numerator
            for(let i = bigger; i > 1; i--){
                if(
                    Number.isInteger(numerator/i)
                    && Number.isInteger(denominator/i)){
                    numerator=numerator/i
                    denominator=denominator/i
                    recursion()
                }
            }
        }
        recursion()
        return `${numerator}/${denominator}`
    }

     //Process Data
     let data=props.data;
     data=getAggregatedRows(data,encoding);
 
     //Get categories
    let dataCategories=getCategories(data,encoding);
    let categories=Object.keys(dataCategories);
 
    let style = props.spec.style;
    let colorset = style.colorset;
     //Color channel
     let color;
     if('color' in encoding){
         let colorScale=d3.scaleOrdinal(colorset);
         color=colorScale.domain(data.map(function(d){
             return d[encoding.color.field];
         }));
     }
 
     //Compute the percent
     let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
     let colortype=data.map(d=>d[encoding.color.field]);
 
     let colorlen=colortype.length;
 
     let pictorialpercent;
    
     pictorialpercent=pictorialdata[0]/d3.sum(pictorialdata);
     decimalsToFractional(pictorialpercent)
    console.log(pictorialpercent)
    console.log(decimalsToFractional(pictorialpercent))


    let darkColor = [];
    for(let i=0;i<colorlen;i++){
                let c = d3.hsl(d3.rgb(colorset[i]));
                let defaultcolor_hsl = d3.hsl(c.h ,c.s*0.1, c.l*0.5);
                let defaultcolor_rgb = d3.rgb(defaultcolor_hsl);
                let defaultcolor = "rgb("+ parseInt(defaultcolor_rgb.r) + ","+ parseInt(defaultcolor_rgb.g) + "," + parseInt(defaultcolor_rgb.b) + ")";
                darkColor[i] = defaultcolor;
            }
 

    svg.append("defs")
    .append("g")
    .attr("id",pictogram)
    .append("path")
    .attr("d",function(){
        var obj = pictorialtype.find(function (obj) {
            return obj.name === pictogram
        })
        return obj.picpath; 
    })

    let typesizex1=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizey1=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
    let scale1;
    svg.select(`#${pictogram}`)
    .attr("transform", function(){
          let area11=typesizex1*typesizey1
          let area12=770*3
          scale1=Math.sqrt(area12/area11)
           // scale1.push(x.bandwidth()/typesizey1)
            return  `scale(${scale1})`

        
    });

    let typesizex=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizey=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
    let typex=svg.select(`#${pictogram}`).node().getBBox().x;
    let typey=svg.select(`#${pictogram}`).node().getBBox().y;

    //specify the number of columns and rows for pictogram layout
    let numCols = denominator;
    let numRows = 1;

    //padding for the grid
    let xPadding =10;
    //let yPadding = 15;

    //horizontal and vertical spacing between the icons
    //let hBuffer = 30;
    let wBuffer = typesizex+10;
    let myIndex=d3.range(numCols*numRows);
    
        svg.append("g")
        .attr("id", function(){
            return "icon"+colortype[0];
        })
        .selectAll("use")
        .data(myIndex)
        .enter()
        .append("use")
        .attr("xlink:href", "#"+pictogram)
        .attr("id", function(d) {
            return "icon" + d;
        })
        .attr("x", function(d) {
            let remainder = d % numCols; //calculates the x position (column number) using modulus
            return width/denominator+50+xPadding + (remainder * wBuffer)-Math.abs(typex*scale1); //apply the buffer and return value
        })
        .attr("y", function(d) {
            return height/2+50; //apply the buffer and return the value
        })
        // .classed("iconPlain", true);
        .attr("class",function(){
            return "icontype";
        });

        svg.append("text")
        .attr("x",width/denominator+50+xPadding+numCols/2*wBuffer)
        .attr("y",height/2+23)
        .attr("fill",color(colortype[2]))
        .attr("font-size",40)
        .attr('text-anchor',"middle")
        .attr('font-weight','bold')
        .text(`${numerator} in ${denominator}`);

    


    //Fill the color

        d3.selectAll(".icontype")
        .attr("fill", function(d) {
           
        if (d <= numerator - 1) {

            return color(colortype[2]);

        } else {
            return  darkColor[2];
            //return "#9e9e9e";
        }
    });
  }

/**********************************************************************/
  if(styletype==="background"){


    // Process Data
    // const data = props.data;
    let data=props.data;
    data=getAggregatedRows(data,encoding);
    //Get categories
    let dataCategories = getCategories(data, encoding);
    let categories = Object.keys(dataCategories);

    //Color channel
    let color;
    let style = props.spec.style;
    let colorset = style.colorset;
    if('color' in encoding){
    // let colorScale=d3.scaleOrdinal(d3.schemeCategory10);
    let colorScale=d3.scaleOrdinal(colorset);
    color=colorScale.domain(data.map(function(d){return d[encoding.color.field];}));
    }


    //Compute the percent

    let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
    let colortype=data.map(d=>d[encoding.color.field]);
    // console.log(colortype);


    let datalen=colortype.length;

    let sum=0;
    let datapercent=[];
    for(let i=0;i<datalen;i++){
    sum+=pictorialdata[i];
    }
    for(let i=0;i<datalen;i++){
    datapercent.push(Math.round(pictorialdata[i]/sum*100) );
    }

    svg.append("defs")
    .append("g")
    .attr("id",pictogram)
    .append("path")
    .attr("d",function(){
        var obj = pictorialtype.find(function (obj) {
            return obj.name === pictogram
        })
        return obj.picpath; 
    })     

    let typesizexx=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizeyy=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
 
    let area11=typesizexx*typesizeyy;
    let area12=20*20
    let scaleorign=Math.sqrt(area12/area11)  
    let scale1;
    svg.select(`#${pictogram}`)
    .attr("transform", function(){
          scale1=Math.sqrt(area12/area11) 
            return  `scale(${scale1})`
    })

    let typesizex=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizey=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
    let typex=svg.select(`#${pictogram}`).node().getBBox().x;
    let typey=svg.select(`#${pictogram}`).node().getBBox().y;

    //specify the number of columns and rows for pictogram layout
    let numCols = 20;
    let numRows = 10;

    //padding for the grid
    let xPadding = 10;
    let yPadding = 15;

    //horizontal and vertical spacing between the icons
    let hBuffer = typesizey+5;
    let wBuffer =typesizex+5;

    //generate a d3 range for the total number of required elements
    let myIndex = d3.range(numCols * numRows);

    svg.append("g")
    .attr("id", "pictoLayer")
    .selectAll("use")
    .data(myIndex)
    .enter()
    .append("use")
    .attr("xlink:href", "#"+pictogram)
    .attr("id", function(d) {
        return "icon" + d;
    })
    .attr("x", function(d) {
        let remainder = d % numCols; //calculates the x position (column number) using modulus
        return width/5+xPadding + (remainder * wBuffer)-Math.abs(typex*scale1); //apply the buffer and return value
    })
    .attr("y", function(d) {
        let whole = Math.floor(d / numCols) //calculates the y position (row number)
        return height/3+yPadding + (whole *hBuffer)-Math.abs(typey*scale1); //apply the buffer and return the value
    })
    .attr("fill",color(colortype[0]))
    .attr("opacity",0.4)
    .classed("iconPlain", true);

    let typesizex1=svg.select("#pictoLayer").node().getBoundingClientRect().width;
    let typesizey1=svg.select("#pictoLayer").node().getBoundingClientRect().height;
    svg.append("circle")
    .attr("cx", width/5+xPadding+typesizex1/2)
    .attr("cy",height/3+yPadding+typesizey1/2)
    // .attr("cx", (width/5+xPadding + (numCols * wBuffer)-Math.abs(typex*scale1))/2)
    // .attr("cy", (height/3+yPadding + (numRows *hBuffer)-Math.abs(typey*scale1))/2)
    .attr("r",typesizey1>typesizex1?typesizex1/3:typesizey1/3)
    .attr("fill", cardcolor)
    .attr("opacity",0.8)
    .attr("stroke","white")
    .attr("stroke-width","5px")
    
    svg.append("text")
    .attr("x", width/5+xPadding+typesizex1/2)
    .attr("y", height/3+yPadding+typesizey1/2+10)
    .attr("fill", "white")
    .text(`${datapercent[0]}%`)
    .attr('text-anchor',"middle")
    .attr('font-weight','bold')
    .attr('font-size','40px')

  }

/***************************************************************/
  if(styletype==="iconnumber3"){
      //icon+数字+进度条的
         // Process Data
    // const data = props.data;
    let data=props.data;
    data=getAggregatedRows(data,encoding);
    //Get categories
    let dataCategories = getCategories(data, encoding);
    let categories = Object.keys(dataCategories);

    //Color channel
    let color;
    let style = props.spec.style;
    let colorset = style.colorset;
    if('color' in encoding){
    // let colorScale=d3.scaleOrdinal(d3.schemeCategory10);
    let colorScale=d3.scaleOrdinal(colorset);
    color=colorScale.domain(data.map(function(d){return d[encoding.color.field];}));
    }


    //Compute the percent

    let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
    let colortype=data.map(d=>d[encoding.color.field]);
    // console.log(colortype);


    let datalen=colortype.length;

    let sum=0;
    let datapercent=[];
    for(let i=0;i<datalen;i++){
    sum+=pictorialdata[i];
    }
    for(let i=0;i<datalen;i++){
    datapercent.push(Math.round(pictorialdata[i]/sum*100) );
    }

    svg.append("defs")
    .append("g")
    .attr("id",pictogram)
    .append("path")
    .attr("d",function(){
        var obj = pictorialtype.find(function (obj) {
            return obj.name === pictogram
        })
        return obj.picpath; 
    })     

    let typesizexx=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizeyy=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
 
    let area11=typesizexx*typesizeyy;
    let area12=180*180
    let scaleorign=Math.sqrt(area12/area11)  
    let scale1;
    svg.select(`#${pictogram}`)
    .attr("transform", function(){
          scale1=Math.sqrt(area12/area11) 
            return  `scale(${scale1})`
    })

    let typesizex=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizey=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
    let typex=svg.select(`#${pictogram}`).node().getBBox().x;
    let typey=svg.select(`#${pictogram}`).node().getBBox().y;

    let pictoLayer=svg.append("g")
    .attr("id","pictoLayer")

    pictoLayer.append("use")
    .attr("xlink:href",`#${pictogram}`)
    .attr("id",pictogram)
    .attr("x",width/2-typesizex/2-Math.abs(typex*scale1))
    .attr("y",height/3*2-typesizey/2-Math.abs(typey*scale1))
    .attr("fill",color(colortype[0]))

     pictoLayer.append("text")
     .text(`${datapercent[0]}%`)
     .attr("x",width/2+typesizex/2+30)
     .attr("y",height/3*2-typesizey/2+120)
     .attr("fill",color(colortype[0]))
     .attr("font-size","80px")

    
        //Define the gradient
        let gradient=svg.append("svg:defs")
        .append("svg:linearGradient")
        .attr("id","icontype")
        .attr("x1","0")
        .attr("y1", "0")
        .attr("x2","1")
        .attr("y2", "0")
        .attr("spreadMethod","pad");

        //Define the gradient colors
        gradient.append("svg:stop")
        .attr("offset","0%")
        .attr("stop-color",function(){
            return color(colortype[0]);
        })
        .attr("stop-opacity",1);

            pictoLayer.append("rect")
            .attr("id","progressbar")
            .attr("x",width/2+typesizex/2+30)
            .attr("y",height/3*2-typesizey/2+150)
            .attr('rx',5)
            .attr('ry',5)
            .attr("width","150px")
            .attr("height","10px")

            pictoLayer.append("circle")
            .attr("cx",width/2+typesizex/2+30+150*datapercent[0]/100)
            .attr("cy",height/3*2-typesizey/2+150+5)
            .attr('r',5)
            .attr("fill", "white")
            .attr("stroke","white")
            .attr("stroke-width","5px")

      pictoLayer.selectAll("#progressbar")
        .attr("fill", function(d) {

            console.log(datapercent[0])
        gradient.append("svg:stop")
            .attr("offset", `${datapercent[0]}%`)
            .attr("stop-color", color(colortype[0]))
            .attr("stop-opacity", 1);
        gradient.append("svg:stop")
            .attr("offset", `${datapercent[0]}%`)
            .attr("stop-color", "grey")
            .attr("stop-opacity", 1);
        gradient.append("svg:stop")
            .attr("offset", '100%')
            .attr("stop-color", "grey")
            .attr("stop-opacity", 1);
        return "url(#icontype)";
        }) 
  }

/*****************************************************************************/
   if(styletype==="iconnumber1"){

    // Process Data
    let data=props.data;
    data=getAggregatedRows(data,encoding);
    //Get categories
    let dataCategories = getCategories(data, encoding);
    let categories = Object.keys(dataCategories);

    //Color channel
    let color;
    let style = props.spec.style;
    let colorset = style.colorset;
    if('color' in encoding){
    let colorScale=d3.scaleOrdinal(colorset);
    color=colorScale.domain(data.map(function(d){return d[encoding.color.field];}));
    }

    //Compute the percent
    let pictorialdata=data.map(d=>parseFloat(d[encoding.size.field]));
    let colortype=data.map(d=>d[encoding.color.field]);
    // console.log(colortype);

    let datalen=colortype.length;

    let sum=0;
    let datapercent=[];
    for(let i=0;i<datalen;i++){
    sum+=pictorialdata[i];
    }
    for(let i=0;i<datalen;i++){
    datapercent.push(Math.round(pictorialdata[i]/sum*100) );//取整数部分
    }

    // let datafactors=[];
    // for(let i;i<datalen;i++){

    // }
    svg.append("defs")
    .append("g")
    .attr("id",pictogram)
    .append("path")
    .attr("d",function(){
        var obj = pictorialtype.find(function (obj) {
            return obj.name === pictogram
        })
        return obj.picpath; 
    })     

    let typesizexx=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizeyy=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
 
    let area11=typesizexx*typesizeyy;
    let area12=180*180
    let scaleorign=Math.sqrt(area12/area11)  
    let scale1;
    svg.select(`#${pictogram}`)
    .attr("transform", function(){
          scale1=Math.sqrt(area12/area11) 
            return  `scale(${scale1})`
    })

    let typesizex=svg.select(`#${pictogram}`).node().getBoundingClientRect().width;
    let typesizey=svg.select(`#${pictogram}`).node().getBoundingClientRect().height;
    let typex=svg.select(`#${pictogram}`).node().getBBox().x;
    let typey=svg.select(`#${pictogram}`).node().getBBox().y;

    let pictoLayer=svg.append("g")
    .attr("id","pictoLayer")

    pictoLayer.append("use")
    .attr("xlink:href",`#${pictogram}`)
    .attr("id",pictogram)
    .attr("x",width/2-typesizex/2-Math.abs(typex*scale1))
    .attr("y",height/3*2-typesizey/2-Math.abs(typey*scale1))
    .attr("fill",color(colortype[0]))

     pictoLayer.append("text")
     .text(`${datapercent[0]}%`)
     .attr("x",width/2+typesizex/2+30)
     .attr("y",height/3*2-typesizey/2+120)
     .attr("fill",color(colortype[0]))
     .attr("font-size","80px")




   }
        return svg;

    }




export default draw;